

Head Normal Form Bisimulation for Pairs and the \Theta t,-Calculus(Extended Abstract)

Soren B. LassenGoogle, Inc.
soren@google.com

Abstract
B"ohm tree equivalence up to possibly inS,nite \Theta  expansion for the pure \Lambda -calculus can be characterized as abisimulation equivalence. We call this co-inductive syntactic theory extensional head normal form bisimilarity and inthis paper we extend it to the

\Lambda FP-calculus (the \Lambda -calculus
with functional and surjective pairing) and to two untypedvariants of ParigotR^s

\Lambda t,-calculus. We relate the extensionalhead normal form bisimulation theories for the different

calculi via FujitaR^s extensional CPS transform into the \Lambda FP-calculus. We prove that extensional hnf bisimilarity is fully
abstract for the pure \Lambda -calculus by a co-inductive refor-mulation of BarendregtR^s proof for B

"ohm tree equivalenceup to possibly inS,nite
\Theta  expansion. The proof uses the so-called B
"ohm-out technique from B"ohmR^s proof of the Sep-aration Property for the

\Lambda -calculus. Moreover, we extendthe full abstraction result to extensional hnf bisimilarity for

the \Lambda FP-calculus. For the "standard" \Lambda t,-calculus, the Sep-aration Property fails, as shown by David and Py, and for

the same reason extensional hnf bisimilarity is not fully abstract. However, an "extended" variant of the \Lambda t,-calculussatisS,es the Separation Property, as shown by Saurin, and

we show that extensional hnf bisimilarity is fully abstractfor this extended

\Lambda t,-calculus.

1 Introduction

The goal of the work presented in this paper is to un-derstand the computational behaviour of the untyped

\Lambda -calculus with pairs and the untyped
\Lambda t,-calculus [16] and toS,nd principles for reasoning about program behaviour and

equivalence. In particular, we wish to learn the propertiesof two recent contributions to these calculi. One is FujitaR^s
untyped adaptation [7] of Hofmann and StreicherR^s exten-sional CPS transform [9] of the

\Lambda -calculus and \Lambda t,-calculusinto the
\Lambda -calculus with pairs. The other is SaurinR^s exten-sion of the untyped

\Lambda t,-calculus in [20].

We use the programming language semantics tools ofstructural operational semantics (SOS), continuation passing style (CPS) transform, and bisimulation equivalences.We take head reduction to head normal form (hnf) as our operational semantics, deS,ned as big-step SOS evaluation re-lations, we use FujitaR^s extensional CPS transform, and we
use the bisimulation characterization of B"ohm tree equiva-lence up to possibly inS,nite

\Theta  expansion from [12] as ourbisimulation equivalence.

We give new deS,nitions of solvability, head normalforms (hnfs), and head evaluation for the calculi and we
present new co-inductive theories called extensional hnfbisimilarity. For the

\Lambda FP-calculus and the extended \Lambda t,-calculus we prove that extensional hnf bisimilarity coincides with solvable equivalence. Furthermore, we relateextensional hnf bisimilarity for the

\Lambda FP-calculus to exten-sional hnf bisimilarity for the other calculi via extensional

CPS transforms.B"ohm tree equivalence up to possibly inS,nite

\Theta -expansion (or Nakajima tree equivalence) is a powerful syntactic characterization of the theory of solvable equivalencefor the pure "sensible"

\Lambda -calculus [2]. It can be formu-lated co-inductively as a syntactic bisimulation equivalence,

without reference to B"ohm trees, based on head reductionto head normal form (hnf) [12]. We call this characterization extensional hnf bisimilarity. It is the greatest symmetricterm relation \Theta  such that, whenever

t \Theta  t\Theta , either t and t\Theta have no hnfs or
t and t\Theta  both have hnfs that \Theta -expand to hnfs

\Lambda x1 . . . xm. y t1 . . . tn, \Lambda x1 . . . xm. y t\Theta 1 . . . t\Theta n,
respectively, where m, n >= 0 and t1 \Theta  t\Theta 1, . . . , tn \Theta  t\Theta n.This bisimulation characterization of solvable equivalence is useful because it makes it possible to prove programequivalences by the powerful and convenient bisimulation
proof method. See [12, 14, 13] for examples of normal formbisimulation proofs of program equivalences.

Outline Section 2 describes related work. Sections 3 and4 present the pure

\Lambda -calculus and the \Lambda FP-calculus and solv-ability, hnfs, head evalutation, extensional hnf bisimilarity,

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

and FujitaR^s CPS transform. Section 5 outlines the con-gruence proof for extensional hnf bisimilarity for the

\Lambda FP-calculus. Section 6 outlines full abstraction proofs for the

pure \Lambda -calculus and the \Lambda FP-calculus. The proofs presentthe "B"ohm-out" technique in a novel co-inductive fashion.
Sections 7 and 8 extend solvability, head normal forms,head evaluation, extensional hnf bisimilarity, and the CPS
transform to the standard \Lambda t,-calculus and the extended \Lambda t,-calculus. We show that extensional hnf bisimilarity

is notfully abstract for the standard
\Lambda t,-calculus, using an exam-ple by David and Py, and we extend the B"ohm-out technique

to prove that extensional hnf bisimilarity is fully abstract forthe extended

\Lambda t,-calculus

2 Related work

Sangiorgi [19] S,rst gave a bisimulation characterizationof L'evy-Longo tree equivalence, which he called open applicative bisimulation. The hnf bisimulation characteriza-tion of B"ohm tree equivalence (up to inS,nite

\Theta -expansion)was introduced by Lassen [12] and by David [5]. Eager normal form bisimulation [13] is a recent variant of hnf bisim-ulation for the call-by-value

\Lambda -calculus.
Most of the literature about the \Lambda -calculus with surjec-tive/explicit/functional pairs (see the survey in [21]) is about

reduction, conT^uence, and conversion. Our deS,nitions ofhead normal forms, head evaluation, solvability, solvable
equivalence, and bisimilarity appear to be new.

Parigot introduced the standard \Lambda t,-calculus as a term as-signment system for classical logic. David and Py [6] deS,ned solvability, head normal forms, head reduction, andsolvable equivalence for the untyped standard

\Lambda t,-calculus.Saurin introduced the untyped extended
\Lambda t,-calculus anddeS,ned head reduction and head normal forms. (Saurin

names the calculus \Lambda t, and he uses a slightly different syn-tax.) We introduce alternative deS,nitions of head normal
forms and head evaluation that are better suited for hnfbisimulation. Our "big-step" deS,nition of head evaluation is
reminiscent of Ong and StewartR^s evaluation semantics fora typed call-by-value

\Lambda t,-calculus in [15]. Our deS,nition ofsolvability is new.

David and Py established a "computational equivalence"result [6] for the standard

\Lambda t,-calculus which amounts to anapplicative bisimulation characterization of solvable equivalence [1].CPS Translation Theorems relate the extensional hnf
bisimulation theories for the \Lambda FP-calculus and the other cal-culi via FujitaR^s CPS transform. This is parallel to BoudolR^s
correspondence result between L'evy-Longo tree equiva-lence and B"ohm tree equivalence via PlotkinR^s call-by-name
CPS transform [4] and LassenR^s correspondence result be-tween eager normal form (call-by-value) bisimilarity and
hnf bisimilarity via PlotkinR^s call-by-value CPS transform

[13] (Plotkin deS,ned the CPS transforms in [17]).

Our syntactic congruence proof for extensional hnfbisimilarity for the

\Lambda FP-calculus is novel. The Main Lemmaonly shows that bisimilarity is substitutive, not compatible.

Compatibility is then derived from the deS,nition of bisimi-larity. Otherwise the congruence proof is similar to the congruence proofs for L'evy-Longo tree equivalence and B"ohmtree equivalence in [12], which can be viewed as more intuitive (and symmetric) variant of HoweR^s congruence proofmethod [10]. Congruence of extensional hnf bisimilarity for
the \Lambda t,-calculus is derived via the CPS transform, as in [13].

Our full abstraction proof for the pure \Lambda -calculus is aco-inductive reformulation of the full abstraction proofs by

Wadsworth, Hyland, and Barendregt [22, 11, 2]. It uses theB"ohm-out technique from B"ohmR^s proof of the Separation
Property [3], a.k.a. B"ohmR^s Theorem. Our extension of theproof to the

\Lambda FP-calculus is new. Our proof for the extended
\Lambda t,-calculus combines the new co-inductive B"ohm-out for-mulation with elements from SaurinR^s proof of the Separation Property [20].

3 The \Theta -calculus

Let x, y, z range over variables. The terms of the pure
\Lambda -calculus are given by the grammar:

TERMS t ::= x -- \Lambda x. t -- t1 t2
Application associates to the left and \Lambda -abstraction ex-tends as far to the right as possible, so

\Lambda x. t1 t2 t3 =
\Lambda x. ((t1 t2) t3).

Let FV(t) denote the set of free variables in t. We iden-tify terms up to renaming of bound variables. Let

t1[t2/x]denote the capture-free substitution of
t2 for all free occur-rences of
x in t1.
Even though we will not be concerned with reductionand conversion, we list the usual

\Xi  and \Theta  equations for the
\Lambda -calculus:

(\Lambda x. t1) t2 =\Theta  t1[t2/x] (\Xi )

\Lambda x. t x =\Lambda  t, if x /\Lambda  FV(t) (\Theta )

The \Xi  equation will form the basis for the evaluation re-lation below and both equations will be satisS,ed by extensional hnf bisimilarity.

Rather than the usual deS,nition of head reduction andthe derived deS,nition of head normal forms as the normal

forms of head reduction, here we S,rst deS,ne the head nor-mal forms (hnfs) and then deS,ne a head evaluation relation
between terms and hnfs.

HNFS h ::= f -- \Lambda x. h
\Lambda -FREE HNFS f ::= x -- f t

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

That is, hnfs are terms of the form \Lambda x1 . . . xm. y t1 . . . tn.The head evaluation relation between terms

t and hnfs h,written
t \Theta  h, is deS,ned inductively in the style of big-stepstructural operational semantics, except that we deS,ne head

evaluation also for open terms.

(E1) x \Theta  x

(E2) t \Theta  h\Lambda x. t \Theta  \Lambda x. h

(E3) t1 \Theta  ft

1 t2 \Theta  f t2

(E4) t1 \Theta  \Lambda x. h1 h1[t

2/x] \Theta  h

t1 t2 \Theta  h
This deS,nition is convenient for our uses. The head eval-uation relation can also be deS,ned in terms of conventional

head reduction to hnf.We say that a term t

has a hnf if t \Theta  h for some h. Notall terms have a hnf. For instance, \Omega  = (

\Lambda x. x x) (\Lambda x. x x)has no hnf.

For the pure \Lambda -calculus, a closed term t is solvable iff
t \Pi t =\Theta  \Lambda x. x, for some closed arguments \Pi t (zero or morearguments) [2].

Lemma 1 (Wadsworth [22]). A closed term is solvable iffit has a hnf.

A term relation R is semi sensible iff, whenever t and t\Theta are closed terms and

t R t\Theta , t is solvable iff t\Theta  is solvable. Asemi sensible relation is

sensible iff it relates all unsolvableterms, that is, it satisS,es the equation:

t =\Omega  \Omega , if t is unsolvable (\Omega )
DeS,nition 1. Let solvable equivalence be the greatest com-patible semi sensible relation. (A term relation is compatible if it is closed under all term contructors.) It relates terms
t and t\Theta  iff, for all term contexts C (term with any number ofholes [ ]) such that

C[t] and C[t\Theta ] are closed, C[t] is solvableiff
C[t\Theta ] is solvable.

Given a term relation R, let M (R) be the relation be-tween hnfs deS,ned inductively by the rules:

(M1) x M (R) x
(M2) f M (R) f \Theta f t M (R) f \Theta  t\Theta  if t R t\Theta 
(M3) h M (R) h\Theta \Lambda x. h M (R) \Lambda x. h\Theta 

(M4) f x M(R) hf M(R) \Lambda x. h if x /\Lambda  FV(f )
(M5) h M (R) f x\Lambda x. h M(R) f if x /\Lambda  FV(f )

In other words, h M (R) h\Theta  if h = \Lambda x1 . . . xm. y t1 . . . tnand

h\Theta  = \Lambda x1 . . . xm+k. y t\Theta 1 . . . t\Theta n+k and

t1 R t\Theta 1, . . . , tn R t\Theta n, xm+1 R tn+1, . . . , xm+k R tn+k
and similarly if h has more leading lambdas than h\Theta .
DeS,nition 2. Given a term relation R, let B(R) be the termrelation deS,ned as follows:

t B(R) t\Theta  iff

(i) \Xi h. t \Theta  h \Pi  \Sigma h\Theta . t\Theta  \Theta  h\Theta  & h M (R) h\Theta  and(

ii) \Xi h\Theta . t\Theta  \Theta  h\Theta  \Pi  \Sigma h. t \Theta  h & h M (R) h\Theta 

A term relation R is a hnf bisimulation up to \Theta  [12] iff it is apost-S,xpoint of

B, that is, R \Upsilon  B(R). Let extensional hnfbisimilarity, \Theta , be the greatest S,xpoint of

B which, by theTarski-Knaster S,xpoint theorem, exists and is the greatest

hnf bisimulation up to \Theta .

For example, we can show co-inductively that exten-sional hnf bisimilarity satisS,es the well-known inS,nite

\Theta -expansion equation:

\Lambda x. x \Theta  J, where J = \Theta  \Lambda xyz. y x z (1)
(\Theta  denotes TuringR^s S,xpoint combinator) by checking that-(

\Lambda x. x, J), (z, J z) -- z is a variable"" is a hnf bisimulationup to

\Theta .
It is immediate from the deS,nition that extensional hnfbisimilarity is semi sensible and it is easy to show that

extensional hnf bisimilarity is an equivalence relation (re-T^exive, transitive, symmetric) and, using properties of head
evaluation, that it includes the \Xi , \Theta , and \Omega  equations andsatisS,es the following extensionality property (see [2]):

t x \Theta  t\Theta  x \Pi  t \Theta  t\Theta , if x /\Lambda  FV(t) \Phi  FV(t\Theta ) (ext)
It follows from the deS,nitions that extensional hnf bisim-ilarity is the same as B"ohm tree equivalence up to possibly inS,nite \Theta  expansion. Barendregt showed that this is acongruence and that it is fully abstract with respect to (coincides with) solvable equivalence. A direct co-inductivecongruence proof for extensional hnf bisimilarity is given
in [12]. Later in this paper we will give a new congruenceproof and outline a new co-inductive formulation of the full
abstraction proof.

4 The \Theta FP-calculus

We now consider the \Lambda FP-calculus which is an extensionof the

\Lambda -calculus with functional and surjective pairing:

TERMS t ::= x -- \Lambda x. t -- t1 t2 -- \Psi t1, t2\Omega  -- \Sigma 1 t -- \Sigma 2 t

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

The \Xi  equation from the pure \Lambda -calculus together withthe projection equation:

\Sigma i \Psi t1, t2\Omega  =\Xi  ti, if i \Lambda  -1, 2"" (\Sigma )
and two commutation (or "functional pairing") equations[21]:

\Sigma i (t1 t2) =\Xi \Theta  (\Sigma i t1) t2, if i \Lambda  -1, 2"" (\Sigma \Pi )

\Sigma i \Lambda x. t =\Xi \Lambda  \Lambda x. \Sigma i t, if i \Lambda  -1, 2"" (\Sigma \Sigma )

form the basis for the evaluation relation below. Extensionalhnf bisimilarity for the

\Lambda FP-calculus, which we deS,ne be-low, satisS,es all these equations as well as the

\Theta  equationfrom the pure
\Lambda -calculus and the surjective pairing equa-tion:

\Psi \Sigma 1 t, \Sigma 2 t\Omega  =sp t (sp)
One motivation for studying the \Lambda -calculus with pairsis that it is the target of FujitaR^s continuation passing
style (CPS) transform of the pure \Lambda -calculus [7]. Follow-ing Danvy and Hatcliff [8], we change FujitaR^s transform
slightly by adding an \Theta  redex to the variable case.

cps(x) = \Lambda a. x a
cps(\Lambda x. t) = \Lambda a. (\Lambda x. cps(t)) (\Sigma 1 a) (\Sigma 2 a)
cps(t1 t2) = \Lambda a. cps(t1) \Psi cps(t2), a\Omega 

where a is a fresh variable that does not occur free in thesource terms. Fujita [7] has investigated relationships between reductions and equations in the source and target cal-culi with respect to his transform. In Section 5 we report a
new CPS Translation Theorem that relates extensional hnfbisimilarity in the

\Lambda -calculus and the \Lambda FP-calculus.

We deS,ne the head normal forms as follows:

HNFS h ::= f -- \Lambda x. h
\Lambda -FREE HNFS f ::= p[x] -- f t

PROJECTION CONTEXTS p ::= [ ] -- \Sigma 1 p -- \Sigma 2 p

To differentiate \Lambda -terms and hnfs in the pure \Lambda -calculusfrom the new deS,nitions for the

\Lambda FP-calculus, we will referto the former as pure terms and pure hnfs in the sequel.

These operations are used in the deS,nitions of head eval-uation and

M(R) below.

We deS,ne head evaluation from terms to hnfs by therules:

(E1) p[x] \Theta  p[x]
(E2) p[t] \Theta  hp[\Lambda x. t] \Theta  \Lambda x. h

(E3) p[t1] \Theta  fp[t

1 t2] \Theta  f t2

(E4) p[t1] \Theta  \Lambda x. h1 h1[t

2/x] \Theta  h

p[t1 t2] \Theta  h

(E5) p[ti] \Theta  hp[\Sigma 

i \Psi t1, t2\Omega ] \Theta  h if i \Lambda  -1, 2""

For the \Lambda FP-calculus, we deS,ne a closed term t to besolvable iff

p[t]\Pi t =\Theta \Xi \Xi \Theta \Xi \Lambda  \Lambda x. x, for some projection con-text
p and closed arguments \Pi t. For example, \Omega  and \Psi \Omega , \Omega \Omega are unsolvable, but

t = \Psi \Lambda x. x, \Omega \Omega  is solvable, even though
t does not have a hnf, because \Sigma 1 t =\Xi  \Lambda x. x.

Lemma 2. A closed term t is solvable iff there is a projec-tion context

p such that p[t] has a hnf.

As for the pure \Lambda -calculus, we say that a relation Ron

\Lambda FP-terms is semi sensible iff, whenever R relates twoclosed terms

t and t\Theta , t is solvable iff t\Theta  is solvable. Solvableequivalence is again the greatest compatible semi-sensible

relation.

For the \Lambda FP-calculus we extend the deS,nition of M (R)by generalizing (M1) as follows:

(M1) p[x] M(R) p[x]
In the deS,nition of B(R) we will also use the notation
t \Theta p h, deS,ned by

t \Theta p \Lambda \Pi x. p\Theta [y]\Pi t iff p[t] \Theta  \Lambda \Pi x. p[p\Theta [y]]\Pi t.
For example, \Psi \Sigma 1 h, \Sigma 2 h\Omega  \Theta \Xi 1[ ] h.
DeS,nition 3. Given a term relation R, let B(R) be the termrelation deS,ned as follows:

t B(R) t\Theta  iff

(i) \Xi p, h. p[t] \Theta  h \Pi \Sigma 

p\Theta , h\Theta . p[t\Theta ] \Theta p\Theta  h\Theta  & h M (R) h\Theta  and(
ii) \Xi p, h\Theta . p[t\Theta ] \Theta  h\Theta  \Pi \Sigma 

p\Theta , h. p[t] \Theta p\Theta  h & h M (R) h\Theta 

Again a relation R is a hnf bisimulation up to \Theta  iff R \Upsilon 
B(R) and extensional hnf bisimilarity, \Theta , is the greatestS,xpoint of

B.

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

Extensional hnf bisimilarity relates terms up to inS,nitesp-expansion, as illustrated by

\Lambda x. x \Theta  L, where L = \Theta  \Lambda x. y\Psi \Sigma 1 y, x (\Sigma 2 y)\Omega  (2)
which follows immediately from the fact that \Theta  is a S,xpointof

B. This example motivates the subtleties in the deS,nitionof

B(R) in DeS,nition 3.Just like for the pure

\Lambda -calculus, extensional hnf bisim-ilarity is a semi sensible equivalence relation and includes

the \Omega  equation (for the new deS,nition of solvability) andsatisS,es the extensionality property ext. Moreover, it includes extensional hnf bisimilary for the pure \Lambda -calculusand includes the

\Xi , \Theta , \Sigma , \Sigma \Pi , \Sigma \Sigma , and sp equations.

Remark 1. The deS,nitions of hnfs, head evaluation, solv-ability,

M (-), B(-), and extensional hnf bisimilarity allcleanly extend those for the pure

\Lambda -calculus. In particular,two pure
\Lambda -terms are extensional hnf bisimilar in the pure
\Lambda -calculus (DeS,nition 2) iff they are extensional hnf bisim-ilar in the

\Lambda FP-calculus (DeS,nition 3). This is a generalproperty of normal form bisimulation theories. The same

is true for extensional hnf bisimilarity for the standard \Lambda t,-calculus in Section 7 and again for the extended

\Lambda t,-calculusin Section 8. The whnf bisimulation equivalence for a nondeterministic \Lambda -calculus with ambiguous choice in [14] ex-hibits the same property relative to whnf bisimilarity for the
pure deterministic \Lambda -calculus.

5 Congruence and CPS Translation Theorem

We now want to show that extensional hnf bisimilar-ity for the

\Lambda FP-calculus is a congruence. To this end wedeS,ne, for any given term relation

R, its substitutive hnf-closure
S(R) to be the term relation deS,ned inductively bythe rules:

(S1) t S(R) t\Theta  if t R t\Theta 
(S2) h M(S(R)) h\Theta h S(R) h\Theta 
(S3) t1 S(R) t\Theta 1 t2 S(R) t\Theta 2t

1[t2/x] S(R) t\Theta 1[t\Theta 2/x]

Lemma 3 (Main Lemma). If R is a hnf bisimulation up to
\Theta , so is S(R).

Proof outline. We instrument the head evaluation relation
t \Theta  h with a natural number n, written t n\Theta  h, where ncounts the number of

\Xi -reductions (rule (E5)) used in thederivation of
t \Theta  h.Now, under the assumption that

R \Upsilon  B(R), we prove

t S(R) t\Theta  & p[t] n\Theta  h \Pi \Sigma 

p\Theta , h\Theta . p[t\Theta ] \Theta p\Theta  h\Theta  & h M(S(R)) h\Theta 

by induction (1) on n and (2) on the derivation of t S(R)
t\Theta , ordered lexicographically. The argument resembles thecongruence proofs in [12, 14]. This establishes part (

i) ofthe inclusion
S(R) \Upsilon  B(S(R)), cf. DeS,nition 3. Part (ii)is symmetrical.

Theorem 4. Extensional hnf bisimilarity is a congruencefor the

\Lambda FP-calculus.

Proof. We know that extensional hnf bisimilarity is anequivalence relation (reT^exive, transitive, and symmetric),

so we just need to show that it is compatible, namely:

t \Theta  t\Theta  \Pi  \Lambda x. t \Theta  \Lambda x. t\Theta  (C1)
t1 \Theta  t\Theta 1 & t2 \Theta  t\Theta 2 \Pi  t1 t2 \Theta  t\Theta 1 t\Theta 2 (C2)
t1 \Theta  t\Theta 1 & t2 \Theta  t\Theta 2 \Pi  \Psi t1, t2\Omega  \Theta  \Psi t\Theta 1, t\Theta 2\Omega  (C3)

t \Theta  t\Theta  \Pi  \Sigma i t \Theta  \Sigma i t\Theta , if i \Lambda  -1, 2"" (C4)

For (C1), t \Theta  t\Theta  implies \Lambda x. t B(\Theta ) \Lambda x. t\Theta  directly, with-out the Main Lemma, as follows. Suppose

p[\Lambda x. t] \Theta  h.This must be derived from (E2), so
h = \Lambda x. h0 for some h0such that
p[t] \Theta  h0. If t \Theta  t\Theta , p[t\Theta ] \Theta p\Theta  h\Theta 0 for some p\Theta and hnf
h\Theta 0 such that h0 M (\Theta ) h\Theta 0. By (E2), p[\Lambda x. t\Theta ] \Theta p\Theta 
\Lambda x. h\Theta 0 and, by (M3), h = \Lambda x. h0 M(\Theta ) \Lambda x. h\Theta 0. This es-tablishes part (

i) of \Lambda x. t B(\Theta ) \Lambda x. t\Theta . Part (ii) is symmet-rical.

Since extensional hnf bisimilarity is a hnf bisimulationup to

\Theta , the Main Lemma entails that its substitutive hnfclosure is a hnf bisimulation up to

\Theta  and thus contained inextensional hnf bisimilarity, by co-induction. We conclude

that extensional hnf bisimilarity is substitutive:

t1 \Theta  t\Theta 1 & t2 \Theta  t\Theta 2 \Pi  t1[t2/x] \Theta  t\Theta 1[t\Theta 2/x]
The clauses (C2), (C3), and (C4) follow from substitutivityand reT^exivity.

Theorem 5 (CPS Translation). t \Theta  t\Theta  in the pure \Lambda -calculusiff cps(

t) \Theta  cps(t\Theta ) in the \Lambda FP-calculus.

The proof is analogous to the proof of the CPS Trans-lation Theorem for PlotkinR^s CPS transform, eager normal

form bisimilarity up to \Theta , and extensional hnf bisimilarityin [13]: The proof relies on a CPS Simulation Theorem that
relates head evaluation of terms t in the pure \Lambda -calculus andhead evaluation of cps(

t) in the \Lambda FP-calculus, then both the`ifR^ and `only ifR^ directions of the CPS Translation Theorem

are established by exhibiting hnf bisimulations up to \Theta .Since cps(-) is compositional and extensional hnf
bisimilarity is a congruence for the \Lambda FP-calculus, we con-clude:

Corollary 6. Extensional hnf bisimilarity is a congruence
for the pure \Lambda -calculus.

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

6 Bl'ohm-out and full abstraction

In this section, we show that extensional hnf bisimilarityis fully abstract with respect to solvable equivalence. Our
proof is based on the classical proofs [22, 11, 2] but we usea co-inductive formulation of the B"ohm-out technique that
elucidates the argument. We S,rst prove full abstraction forthe pure

\Lambda -calculus and then describe how the proof extendsto the
\Lambda FP-calculus. In Section 8 we adapt the proof to the
\Lambda t,-calculus.Let \Lambda  be the set of all pure

\Lambda -terms. Then \Lambda  * \Lambda  is theuniversal relation on pure
\Lambda -terms. Two closed pure hnfs hand
h\Theta  are equivalent, written h ff h\Theta , iff h M(\Lambda  * \Lambda ) h\Theta .For arbitrary closed pure

\Lambda -terms t and t\Theta  we deS,ne t ff t\Theta iff
t B(\Lambda  * \Lambda ) t\Theta , that is either both t and t\Theta  are unsolvableor both are solvable and have equivalent hnfs.

Lemma 7. t ff t\Theta , for all closed pure solvably equivalent
\Lambda -terms t and t\Theta .

The permutator Pn and projection Uni , for 0 <= i <= n,are the terms:

Pn = \Lambda x1 . . . xnxn+1. xn+1 x1 . . . xn
Uni = \Lambda x1 . . . xn. xi

Collectively, we call permutators and projections dis-criminator terms. Let

\Upsilon  range over these and let \Delta  rangeover applicative contexts with discriminator arguments:

DISCRIMINATORS \Upsilon  ::= Pn -- Uni
DISCRIMINATION CONTEXTS \Delta  ::= [ ] -- \Delta  \Upsilon 

Now we deS,ne a "B"ohm-out" relation fl. For closedpure

\Lambda -terms t and t\Theta ,

t fl t\Theta  iff \Xi \Delta . \Delta [t] ff \Delta [t\Theta ]
On open terms we deS,ne fl as the limit of an increasingsequence of relations, fl = \Theta 

n<\Upsilon  fln, where t fln t\Theta  iff

\Xi -x1, . . . , xm"" ffi FV(t) \Phi  FV(t\Theta ). \Xi n1, . . . , nm >= n.

t[Pn1/x1] . . . [Pnm/xm] fl t\Theta [Pn1/x1] . . . [Pnm/xm].

Lemma 8 (B"ohm-out). fl is a hnf bisimulation up to \Theta .
Proof outline. We must show that fl \Upsilon  B(fl), that is,
t fln t\Theta  implies t B(fl) t\Theta , for all n < \Phi  and terms t, t\Theta .We show that

t \Theta  h implies there exist h\Theta  and n\Theta  such that
t\Theta  \Theta  h\Theta  and h M(fln\Theta ) h\Theta . The choice of n\Theta  depends on
n and the structure of h. By symmetry we conclude that
t B(fl) t\Theta , as required.

Theorem 9 (Full abstraction [2]). Extensional hnf bisimilarity coincides with solvable equivalence for the pure \Lambda -calculus.

Proof. Extensional hnf bisimilarity is included in solvableequivalence because it is semi sensible and congruent. Conversely, since solvable equivalence is included in ff andis congruent, it is easy to see that solvable equivalence is
included in fl which, by the B"ohm-out Lemma and co-induction, is included in extensional hnf bisimilarity.

The deS,nitions and lemmas extend to the \Lambda FP-calculus,if we let terms and hnfs range over

\Lambda FP-terms and hnfs andwe use
M(\Lambda FP * \Lambda FP) and B(\Lambda FP * \Lambda FP) in the deS,nitionof ff, where \Lambda 

FP is the set of all \Lambda FP-terms and M and Bare the extended relational operators from Section 4.

We extend the deS,nition of discriminators:
DISCRIMINATORS \Upsilon  ::= Pn -- p[Uni ]
where p is the right-inverse of the projection context p, sat-isfying

p[p[t]] =\Xi  t, deS,ned as:

[ ] = [ ]
p[\Sigma 1 [ ]] = \Psi p, \Omega \Omega 
p[\Sigma 2 [ ]] = \Psi \Omega , p\Omega 

The deS,nitions of discrimination contexts, \Delta , and theB"ohm-out relation, fl, are unchanged and the structure of

the proof of the B"ohm-out Lemma is the same as for thepure

\Lambda -calculus.

Theorem 10 (Full abstraction). Extensional hnf bisimi-larity coincides with solvable equivalence for the

\Lambda FPcalculus.

Theorems 5, 9, and 10 entail that FujitaR^s CPS transformof the

\Lambda -calculus is fully abstract.

7 The standard \Theta t,-calculus

We now consider the untyped \Lambda t,-calculus [16]. Let aand

b range over "names".

TERMS t ::= x -- \Lambda x. t -- t1 t2 -- t,a. [b]t
Naming and t,-abstraction extend as far to the right as pos-sible, so

t,a. [b]t1 t2 = t,a. [b](t1 t2).We refer to this restricted syntax, where

t,-abstractionand naming are coupled in a single syntactic construction

t,a. [b]t, as standard. It is some times useful to considernamed terms as a separate syntactic category so that we can
regard t,-abstractions as terms of the form t,a. \Psi  where \Psi  isa

named term:

NAMED TERMS \Psi  ::= [a]t

If \Omega  is a syntactic phrase, notation \Omega [afflt] denotes thecapture-free substitution of [

a](t\Theta [afflt] t) for every occur-rence of a named subterm of the form [

a]t\Theta  in \Omega . Notation

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

\Omega [a/b] denotes the capture-free substitution of a for all freeoccurrences of

b in \Omega . We write FN(\Omega ) for the set of freenames in
\Omega  and we say \Omega  is closed when FN(\Omega ) = FV(\Omega ) =i and
\Omega  is variable-closed if FV(\Omega ) = i.Apart from the

\Xi  and \Theta  equations from the pure \Lambda -calculus, the standard

\Lambda t,-calculus has the following addi-tional equations:

(t,a. \Psi  ) t =u t,a. \Psi  [afflt], if a /\Lambda  FN(t) (t,)
t,a. [b]t,a\Theta . \Psi  =\Phi  t,a. \Psi  [b/a\Theta ] (ff)

t,a. [a]t =\Psi  t, if a /\Lambda  FN(t) (fi)

Fujita extended his extensional CPS transform to thestandard

\Lambda t,-calculus by the following additional clauses:

cps(t,a. \Psi  ) = \Lambda a. cps(\Psi  )
cps([a]t) = cps(t) a

(For convenience, we include the names from the \Lambda t,-calculus in the set of variables in the

\Lambda FP-calculus.)We deS,ne hnfs for the standard
\Lambda t,-calculus as follows:

HNFS h ::= g -- t,a. [b]g
t,-FREE HNFS g ::= f -- \Lambda x. h
\Lambda -FREE HNFS f ::= x -- f t

Furthermore, we let fl range over named hnfs:

NAMED HNFS fl ::= [a]g
DeS,nition 4. The syntactic operation [a]h maps a hnf h toa named hnf:

[a]g = [a]g
[a]t,b. fl = fl[a/b]

We deS,ne head evaluation to hnf by rules (E1) through(E4) from Section 3 plus the following additional rules:

(E5) t1 \Theta  t,a. fl t,a. fl[afflt2] \Theta  ht

1 t2 \Theta  h if a /\Lambda  FN(t2)

(E6) t \Theta  ht,a. [b]t \Theta  t,a. [b]h

Let us say that a closed term in the standard \Lambda t,-calculusis solvable iff

t\Pi t =\Theta u\Phi \Psi  \Lambda x. x, for some closed arguments
\Pi t.

Lemma 11. A closed standard \Lambda t,-term is solvable iff it has
a hnf.

Given this deS,nition of solvability, the deS,nition of asemi sensible relation is the same as before and solvable

equivalence is the greatest compatible semi sensible rela-tion.

DeS,nition 5. DeS,ne the syntactic operations h[afflx] onhnfs

h as follows:

f [afflx] = f[afflx]
(\Lambda y. h)[afflx] = \Lambda y. h[afflx], if x j= y
(t,b. [a\Theta ]g)[afflx] = t,b. [a\Theta ](g[afflx]), if a\Theta  j= a j= b
(t,b. [a]f)[afflx] = t,b. [a](f[afflx] x), if a j= b
(t,b. [a]\Lambda y. h)[afflx] = t,b. [a](h[x/y][afflx]), if a j= b

We extend the deS,nition of M(R) from the pure \Lambda -calculus with three additional rules (M6) through (M8) and
also deS,ne an auxiliary relation N (R) on named hnfs:

(M6) fl N (R) fl\Theta t,a. fl M(R) t,a. fl\Theta 

(M7) fl N (R) [a]gt,a. fl M(R) g if a /\Lambda  FN(g)
(M8) [a]g N (R) flg M (R) t,a. fl if a /\Lambda  FN(g)

(N1) f M(R) f\Theta [a]f N (R) [a]f \Theta 
(N2) [a](h[afflx]) N (R) [a](h\Theta [afflx])[a]\Lambda x. h N (R) [a]\Lambda x. h\Theta 
(N3) [a](h[afflx]) N (R) [a](f[afflx] x)[a]\Lambda x. h N (R) [a]f
(N4) [a](f [afflx] x) N (R) [a](h[afflx])[a]f N (R) [a]\Lambda x. h
For illustration, observe how x M(-(y, y)"") h, where
h = t,a. [a]\Lambda y. t,b. [a]x, and compare to:

x =\Phi \Psi  t,a. [a]t,b. [a]x =\Lambda  t,a. [a]\Lambda y. (t,b. [a]x) y =u h.

Given the deS,nitions of hnfs, evaluation, and M (R) forthe standard

\Lambda t,-calculus, the deS,nition of B(R), hnf bisim-ulation up to

\Theta , and extensional hnf bisimilarity are un-changed.

Extensional hnf bisimilarity for the standard \Lambda t,-calculusis a semi sensible equivalence relation that includes the \Omega 
equation (for the new deS,nition of solvability) and satisS,esthe extensionality property ext. It includes extensional hnf
bisimilarity for the pure \Lambda -calculus and the \Xi , \Theta , t,, ff, and fiequations.

The CPS Translation Theorem from the pure \Lambda -calculuscan be extended to the standard

\Lambda t,-calculus.

Theorem 12 (CPS Translation). t \Theta  t\Theta  in the standard \Lambda t,-
calculus iff cps(t) \Theta  cps(t\Theta ) in the \Lambda FP-calculus.

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

Corollary 13. Extensional hnf bisimilarity is a congruence
for the standard \Lambda t,-calculus.

Full abstraction fails for extensional hnf bisimilarity andfor FujitaR^s CPS transform of the standard

\Lambda t,-calculus, aswitnessed by David and PyR^s counter-example to the Separation Property:

0 = \Lambda x. \Lambda y. y
1 = \Lambda x. \Lambda y. x
U0 = t,b. [a]0

W = \Lambda x. t,a. [a]x (t,b. [a]x U0 y) U0

David and Py [6] showed that W [0/y] is solvably equiva-lent to

W [1/y], via a context lemma. However, t,b. [a]x U0 0is not extensional hnf bisimilar (nor solvably equivalent)

to t,b. [a]x U0 1 and therefore W [0/y] is not extensional hnfbisimilar to

W [1/y].
Saurin [20] recovered the Separation Property for the
\Lambda t,-calculus by considering an extended syntax. This sug-gests that full abstraction is attainable for the extended

\Lambda t,-calculus. In the next section we extend the deS,nitions

of head normal forms, head evaluation, solvable equiva-lence, and extensional hnf bisimulation to the extended

\Lambda t,-calculus and prove full abstraction by adapting the B"ohmout technique to the extended \Lambda t,-calculus.

8 The extended \Theta t,-calculus

Saurin extended the standard \Lambda t,-calculus by relaxing thesyntactic coupling between

t,-abstraction to naming:

TERMS t ::= x -- \Lambda x. t -- t1 t2 -- t,a. t -- [a]t
and relaxed the t, and ff equations correspondingly:

(t,a. t1) t2 =u t,a. t1[afflt2], if a /\Lambda  FN(t2) (t,)

[a]t,b. t =\Phi  t[a/b] (ff)

The \Xi , \Theta , and fi equations remain the same as in the standard
\Lambda t,-calculus.

In the sequel "the \Lambda t,-calculus" and "\Lambda t,-terms" refer tothe extended syntax.

The evaluation relation below is based on the \Xi , t,, and
ff equations plus the equations:

[a1][a2]\Lambda x. t =\Omega 1 [a2]\Lambda x. t,b. [a1][b]t,

if a1 j= b /\Lambda  FN(t) (ffi1)
([a]\Lambda x. t1) t2 =\Omega 2 [a]\Lambda x. t,b. ([b]t1) t2,

if x /\Lambda  FV(t2) and b /\Lambda  FN(t1) \Phi  FN(t2) (ffi2)

which can be derived from the \Xi , \Theta , t,, and ff equations.

We extend FujitaR^s CPS transform as follows:

cps(t,a. t) = \Lambda a. cps(t)
cps([b]t) = \Lambda a. cps(t) b a

where a is a fresh variable that does not occur free in thesource terms. (The added

\Theta  redex in the transform of namedterms is analogous to the
\Theta  redex in the variable case.)
We deS,ne the hnfs for the \Lambda t,-calculus as follows:

HNFS h ::= g -- t,a. h
t,-FREE HNFS g ::= f -- \Lambda x. h -- [a]\Lambda x. h
\Lambda -FREE HNFS f ::= x -- f t -- [a]f

DeS,nition 6. Now the syntactic operations [a]h and
h[afflx] map hnfs h to hnfs as follows:

[a]f = [a]f
[a]\Lambda x. h = [a]\Lambda x. h
[a][a2]\Lambda x. h = [a2]\Lambda x. t,b. [a]([b]h), if a j= b /\Lambda  FN(h)
[a]t,b. h = h[a/b]

f[afflx] = f [afflx]
(\Lambda y. h)[afflx] = \Lambda y. h[afflx], if x j= y
([b]\Lambda y. h)[afflx] = [b]\Lambda y. h[afflx], if a j= b, x j= y
([a]\Lambda y. h)[afflx] = [a](h[x/y][afflx])
(t,b. h)[afflx] = t,b. h[afflx], if a j= b

We extend head evaluation to the extended \Lambda t,-calculusby replacing the rules (E5) and (E6) from the standard

\Lambda t,-calculus by the following rules:

(E5) t1 \Theta  t,a. h1 h1[afflt2] \Theta  ht

1 t2 \Theta  t,a. h if a /\Lambda  FN(t2)

(E6) t1 \Theta  [a]\Lambda x. h1 ([b]h1) t2 \Theta  ht

1 t2 \Theta  [a]\Lambda x. t,b. h

if x /\Lambda  FV(t2), b /\Lambda  FN(t1) \Phi  FN(t2)

(E7) t \Theta  ht,a. t \Theta  t,a. h

(E8) t \Theta  h[a]t \Theta  [a]h
Let a closed \Lambda t,-term t be solvable iff

([a] . . . ([a]t \Pi t0) \Pi t1 . . . ) \Pi tm =\Theta u\Phi  \Lambda x. x
for some name a and closed arguments \Pi t0, \Pi t1, . . . , \Pi tm.
Lemma 14. A closed \Lambda t,-term is solvable iff it has a hnf.

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

As before, a relation R on \Lambda t,-terms is semi sensible iff,whenever

R relates two closed terms t and t\Theta , t is solvableiff
t\Theta  is solvable. Solvable equivalence is the greatest semisensible relation.

If we revisit David and PyR^s example from Section 7, weobserve that

W [0/y] and W [1/y] are not solvably equivalentin the
\Lambda t,-calculus, because taking

C = t,a. ([a][ ] t,b. \Lambda z. [b]z) 1 0
we get C[W ] \Theta  t,a. [a]y and therefore C[W [0/y]] \Omega  has hnf
t,a. [a]\Lambda y. y whereas C[W [1/y]] \Omega  has no hnf.We extend the deS,nition of

M(R) from the pure \Lambda -calculus with the additional rules:

(M6) h M (R) h\Theta t,a. h M (R) t,a. h\Theta 

(M7) h M (R) [a]gt,a. h M(R) g if a /\Lambda  FN(g)
(M8) [a]g M(R) hg M(R) t,a. h if a /\Lambda  FN(g)
(M9) f M (R) f \Theta [a]f M (R) [a]f\Theta 
(M10) [a](h[afflx]) M (R) g[afflx][a]\Lambda x. h M(R) g if x /\Lambda  FV(g)
(M11) g[afflx] M (R) [a](h[afflx])g M(R) [a]\Lambda x. h if x /\Lambda  FV(g)
Given the deS,nitions of hnfs, evaluation, and M(R) forthe

\Lambda t,-calculus, the deS,nition of B(R), hnf bisimulationup to

\Theta , and extensional hnf bisimilarity are the same as forthe pure

\Lambda -calculus.Extensional hnf bisimilarity for the extended

\Lambda t,-calculus includes extensional hnf bisimilarity for the standard \Lambda t,-calculus (which in turn includes extensional hnfbisimilarity for the pure

\Lambda -calculus). Moreover, it is a semisensible equivalence relation and includes the \Omega  equation

(for the new deS,nition of solvability) and satisS,es the ex-tensionality property ext.

The CPS Translation Theorem can be extended to theextended

\Lambda t,-calculus:

Theorem 15 (CPS Translation). t \Theta  t\Theta  in the extended \Lambda t,-calculus iff cps(

t) \Theta  cps(t\Theta ) in the \Lambda FP-calculus.

Corollary 16. Extensional hnf bisimilarity is a congruencefor the extended

\Lambda t,-calculus.

We now show that extensional hnf bisimilarity is fullyabstract with respect to solvable equivalence for the

\Lambda t,-calculus. The proof extends our co-inductive proof from

Section 6 with a \Lambda t,-variant of the B"ohm-out technique.

We use the "sub-term selectors" from SaurinR^s proof of theSeparation Property for the

\Lambda t,-calculus but we eschew the"parametric pairs" and "fst-transform".

Let \Lambda t, be the set of all \Lambda t,-terms. Two variable-closedhnfs

h and h\Theta  are equivalent, h ff h\Theta , iff h M(\Lambda t, * \Lambda t,) h\Theta .For arbitrary variable-closed

\Lambda t,-terms t and t\Theta , t ff t\Theta  iff
t B(\Lambda t, * \Lambda t,) t\Theta .

Lemma 17. t ff t\Theta , for all variable-closed solvably equivalent \Lambda t,-terms t and t\Theta .

We deS,ne the t,-permutator Qm, for m >= 0, to be the
\Lambda t,-term:

Qm = t,a1. . . . t,am. \Lambda x. [am] . . . [a1]x
We deS,ne the sub-term selector \Phi m,ni,j , for i >= 1, j >=1
, m >= 0, n >= 0, and (m + 1, n) >= (i, j) lexicographically(that is,

m >= i or m + 1 = i and j >= n), to be the \Lambda t,-term:

\Phi m,ni,j = t,a1 . . . t,aiL/1. \Lambda x1 . . . \Lambda xj.

t,ai . . . t,am. \Lambda y1 . . . \Lambda yn. xj, if m >= i

\Phi m,nm+1,j = t,a1 . . . t,am. \Lambda y1 . . . \Lambda yn. yj, if n >= j

We call t,-permutators and sub-term selectors discrim-inator terms and we deS,ne discrimination contexts as follows:

DISCRIMINATORS \Upsilon  ::= Qm -- \Phi m,ni,j
DISCRIMINATION CONTEXTS\Delta  ::= [ ] -- \Delta 

\Upsilon  -- [a]\Delta  -- [a](t,a. \Delta ) \Upsilon 

We deS,ne the B"ohm-out relation fl for variable-closed
\Lambda t,-terms t and t\Theta  as follows:

t fl t\Theta  iff \Xi \Delta . \Delta [t] ff \Delta [t\Theta ]
On open \Lambda t,-terms fl = \Lambda 

n<\Upsilon  fl

n, where t fln t\Theta  iff

\Xi -x1, . . . , xm"" ffi FV(t) \Phi  FV(t\Theta ). \Xi n1, . . . , nm >= n.

t[Qn1/x1] . . . [Qnm/xm] fl t\Theta [Qn1/x1] . . . [Qnm/xm].

Lemma 18 (B"ohm-out). fl is a hnf bisimulation up to \Theta .

The structure of the proof is the same as in the proof ofthe B"ohm-out Lemma for the pure

\Lambda -calculus

Theorem 19 (Full abstraction). Extensional hnf bisimilarity coincides with solvable equivalence for the extended \Lambda t,-calculus.

Theorems 15, 19, and 10 entail that the CPS transformof the extended

\Lambda t,-calculus is fully abstract.

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006

Acknowledgements Kristian Sto/vring pointed out errorsin drafts of this paper and helped me S,nd literature on the
\Lambda -calculus with surjective pairing. I thank the referees forhelpful comments and Alexis Saurin and Paul Blain Levy
for discussions about this work.

References

[1] S. Abramsky. The lazy lambda calculus. In D. Turner, editor,

Research Topics in Functional Programming, pages 65-116.
Addison-Wesley, 1990.
[2] H. P. Barendregt. The Lambda Calculus: Its Syntax and Semantics. Number 103 in Studies in Logic and the Foundations of Mathematics. North-Holland, revised edition, 1984.
[3] C. B"ohm. Alcune proprieta delle forme \Theta \Lambda -normali nel \Xi Kcalculus. Pubblicazioni 696, Instituto per le Applicazioni del
Calcolo, Roma, 1968.
[4] G. Boudol. On the semantics of the call-by-name CPS transform. Theoretical Computer Science, 234:309-321, 2000.
[5] R. David. Computing with B"ohm trees. Fundamenta Informaticae, 45:53-77, 2001.
[6] R. David and W. Py. \Xi u-calculus and B"ohmR^s theorem.

Journal of Symbolic Logic, 66(1):407-413, 2001.
[7] K. Fujita. A sound and complete CPS-translation for \Xi u-

calculus. In TLCA, volume 2701 of Lecture Notes in Computer Science, pages 120-134. Springer-Verlag, 2003.
[8] J. Hatcliff and O. Danvy. Thunks and the \Xi -calculus. Journal of Functional Programming, 7(3):303-319, 1997.
[9] M. Hofmann and T. Streicher. Continuation models are universal for \Xi u-calculus. In Proc. 12th Annual IEEE Symposium on Logic in Computer Science, pages 387-395, 1997.
[10] D. J. Howe. Proving congruence of bisimulation in functional programming languages. Information and Computation, 124(2):103-112, 1996.
[11] J. M. E. Hyland. A syntactic characterisation of the equality in some models for the lambda calculus. Journal of the
London Mathematical Society, 12(3):361-370, 1976.
[12] S. B. Lassen. Bisimulation in untyped lambda calculus:

B"ohm trees and bisimulation up to context. In MFPS XV,
volume 20 of Electronic Notes in Theoretical Computer Science, pages 346-374. Elsevier, 1999.
[13] S. B. Lassen. Eager normal form bisimulation. In Proc.

20th Annual IEEE Symposium on Logic in Computer Science, pages 345-354, 2005.
[14] S. B. Lassen. Normal form simulation for McCarthyR^s amb.

In MFPS XXI, volume 155 of Electronic Notes in Theoretical Computer Science, pages 445-465. Elsevier, 2005.
[15] C.-H. L. Ong and C. A. Stewart. A curry-howard foundation for functional computation with control. In Proc. 24th
ACM Symposium on Principles of Programming Languages,
1997.
[16] M. Parigot. \Xi u-calculus: An algorithmic interpretation of

classical natural deduction. In A. Voronkov, editor, Proceedings Intl. Conf. on Logic Programming and Automated
Reasoning, LPARR^92, St Petersburg, volume 624 of Lecture Notes in Computer Science, pages 190-201. SpringerVerlag, 1992.

[17] G. D. Plotkin. Call-by-name, call-by-value and the \Xi -

calculus. Theoretical Computer Science, 1:125-159, 1975.[18] G. E. R'ev'esz. Categorical combinators with explicit products. Fundamenta Informaticae, 22:153-166, 1995.[19] D. Sangiorgi. The lazy lambda calculus in a concurrency
scenario. Information and Computation, 111(1):120-153,
1994.[20] A. Saurin. Separation with streams in the

\Xi u-calculus. In
Proc. 20th Annual IEEE Symposium on Logic in Computer
Science, pages 356-365, 2005.[21] K. Sto/vring. Extending the extensional lambda calculus with

surjective pairing is conservative. Logical Methods in Computer Science, 2(2:1):1-14, 2006.[22] C. P. Wadsworth. The relation between computational

and denotational properties for ScottR^s D\Lambda -models of the
lambda-calculus. SIAM Journal on Computing, 5(3):488-
521, 1976.

Proceedings of the 21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)0-7695-2631-4/06 $20.00  (C) 2006