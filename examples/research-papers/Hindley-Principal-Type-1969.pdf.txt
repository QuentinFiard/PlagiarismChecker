

The Principal Type-Scheme of an Object in Combinatory Logic

R. Hindley
Transactions of the American Mathematical Society, Vol. 146. (Dec., 1969), pp. 29-60.
Stable URL:
http://links.jstor.org/sici?sici=0002-9947%28196912%29146%3C29%3ATPTOAO%3E2.0.CO%3B2-C

Transactions of the American Mathematical Society is currently published by American Mathematical Society.

Your use of the JSTOR archive indicates your acceptance of JSTOR's Terms and Conditions of Use, available athttp://www.jstor.org/about/terms.html. JSTOR's Terms and Conditions of Use provides, in part, that unless you have obtained
prior permission, you may not download an entire issue of a journal or multiple copies of articles, and you may use content inthe JSTOR archive only for your personal, non-commercial use.

Please contact the publisher regarding any further use of this work. Publisher contact information may be obtained athttp://www.jstor.org/journals/ams.html.
Each copy of any part of a JSTOR transmission must contain the same copyright notice that appears on the screen or printedpage of such transmission.

The JSTOR Archive is a trusted digital repository providing for long-term preservation and access to leading academicjournals and scholarly literature from around the world. The Archive is supported by libraries, scholarly societies, publishers,
and foundations. It is an initiative of JSTOR, a not-for-profit organization with a mission to help the scholarly community takeadvantage of advances in technology. For more information regarding JSTOR, please contact support@jstor.org.

http://www.jstor.orgTue Dec 4 08:54:38 2007

TRANSACTIONS  OF THE AMERICAN  MATHEMATICAL  SOCIETY 

Volume 146. December  1969 

THE  PRINCIPAL  TYPE-SCHEME  O F  AN  OBJECT  IN  COMBINATORY  LOGIC  

BY  
R.  HINDLEY 

Introduction.  In their  book  Combinatory Logic [I], Curry and Feys introduced 
the  notion  of  "functional  character"  (here called  "type-scheme")  of an object of 
combinatory  logic.  Roughly  speaking,  each  object  of  combinatory  logic  ("ob" 
for short) represents a function or an operator on functions; for instance the ob I 
represents the identity operator,  and  we  have for all obs X, 

One  of  the  aims  of  combinatory  logic  is  to  study  the  most  basic  properties  of 
functions  and  other  concepts,  with  as  few  restrictions  as  possible;  hence  in  the 

simplest  form  of  combinatory  logic  there  is  nothing  to  stop  a  function  being 

applied  to itself; thus XX is an ob for all obs X.  However  it is also natural to look 
at the consequences  of introducing type-restrictions, formulated by assigning types 
to the obs according to certain rules,  to be described  later. 

Each  type is  a  linguistic  expression  representing a  set  of functions,  and for any 
type a the statement "X has type a"  is intended to mean that the ob X represents 
a member  of the set represented  by  a. Given  types a and j3,  the set of all functions 

from  the  set  a  into  the  set  ,l3  is  represented  by  the  type  "Fa,l3"  (using  Curry's 

notation). Now consider the ob I; if  X has type a, then  the ob IX must also have 
type  a. Hence  I represents  a  function  from a into a, and  so it must  be  given  the 
type  Faa, for each type a. Thus  I  has not just  one type, but a whole class of types. 
This might seem strange, but  it comes from the fact that  I represents  the abstract 
notion  of  "identity-function9',  rather  than  one  particular  identity-function  for  a 

particular  set.  The  identity-function  involves  basically  the  same  concept,  no 

matter  what  we  are  applying it to.  Similarly  the  other  two  basic  combinators  S 
and  K  (see  later,  or  [I,  95A1)  represent  certain  simple  operations  which  can  be 
performed  on almost  any  functions,  and  thus  they  too  have  an  infinite  class  of 
types (see $1 later for details, and 95 for comment). 

To denote classes of types,  we  can  use variables  a, b,  c ;  then  the fact that  I has 
every type of form  Faa can be expressed by assigning to I  the type-scheme 

Faa. 

Received by the editors February 22,  1969. 

Copyright  01969, American Mathematical Society 

29 

30  R.  HINDLEY  [December 
We shall see later that all the types which the rules assign to I  have the form  Faa, 
so the types  of  I  are just  those  obtained  by  substituting a  type  a for the variables 
in  the type-scheme  Faa. It will  not be  obvious from the rules  that every ob X has 
a  type-scheme  with  this  property.  If  X  does  have  a  type-scheme  from  which  all 
the  types  of  X  (and  no  extra  types)  can  be  obtained  by  substituting  types  for 
variables,  it will  be  called  a principal  type-scheme of  X(l). 

In 53 of this paper  it will be proved  that every ob X that has a type at all, has in 
fact a principal type-scheme which can be effectively determined from the structure 

of  the  ob. This result  will  apply to the case when  X may  contain variables, which 
are  not  assigned  types  by  the  rules;  in  this case  it  will  say that  if  there  exists  an 
assignment of types to the variables from which a type for X can be deduced, then 
there is a type-scheme  a such that all the types of  X,  for every assignment of types 

t o the variables,  are instances  of  a. 

$4 will  show how the principal  type-scheme  of  [x]. X (defined therein  and in  [I]) 
is related t o the principal type-scheme  of  X. 

Finally,  in  46  it  will  be  shown  that  if  a is a  principal  type-scheme  of  an  ob X, 
then  any  substitution-instance  /3  of  a  is  a  principal  type-scheme  of  some  ob Xg 
(which  is  reducible  to  X  by  the  reduction-rules  for  combinators).  Besides  its 

intrinsic interest, this result goes part of the way towards justifying  a conjecture  of 
Curry's  that the alternative  system  of combinatory  logic with type-restrictions  (in 

which an infinity of  basic combinators is postulated, each with  a  unique type) can 

be defined  in  the system described  here. This point  will be explained in $5. 

Actually,  the main  result  (Theorem  1)  in  93  was  proved  independently,  almost 
simultaneously,  by  Curry  and  myself,  using  different  methods;  the  present  exposition  owes something to both. Curry's  proof (see [2]) does not use the result  of 
J. A. Robinson  [4] which  is needed  here; in fact I  think  his proof  essentially con- 
tains  an  alternative  proof  of  that  result.  The main  result  in  $4  (Theorem  2)  was 
also  proved  almost  simultaneously  by  Curry  and  myself:  since  Curry's  proof 
is shorter, it has been  used here. 

I wish to thank H. Curry for all his help with this paper, both in discussions and 
by permission to use his proof  of Theorem 2. 

1.  Definitions.  The notions  presented  informally  in  the introduction  will now 
be formalized.  The symbol " = " will be used  to denote identity  of obs, types and 
type-schemes, since " = " will denote a defined equivalence relation (roughly, equa- 
lity of  interpretation) between  obs.  Obs will  be  regarded  as  linguistic expressions 

(I)  In  [2] principal  type-schemes  are called  "principal  functional  characters."  In  [I] the 
term  "functional  character"  is  used  in  approximately  the  sense  of  "principal  type-scheme" 
here, but the assumptions  therein  allow that extra types could be assigned to the obs, besides 
the  types  given  explicitly; if  this  were  done  the  functional  characters  stated  in  [I] (e.g.  $8c, 
p.  264) would not be principal. 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF  A N   OBJECT  3 1 
intended  to  represent  functions  or more abstract operations  (like  I in  the  Intro- 
d u c t i ~ n ) ( ~ ) .  

DEFINITION1.  Obs. 
(i)  There  are assumed  to  be  certain  symbols called  ob-atoms,  all  of  which  are 
obs; these atoms may  include two  basic combinators,  S and  K. 

(ii)  If X and  Yare obs, then the result, (XY), of putting X and  Y in parentheses 
with  X on the left  of  Y,  is a  compound ob. 

A  combinator  is  any ob in  which  only the atoms S and  K occur. 
(Notice that  this  definition  is  really  a  sort of definition-scheme:  for each  given 
set  of atoms,  it defines by  induction a  corresponding set of  obs.  The exact nature 

of  the  atoms  is  irrelevant  here  (except  that  S  and  K  will  play  a  special  role). 
Similarly Definitions 2, 4 and  5 are really  definition-schemes.) 

It  is  assumed  that  no compound  ob is  also an  atom,  and  that  if  (XY)=(UV), 
then X=  Yand  Urn  V. Capital Roman letters denote arbitrary obs, and parentheses 

will  be  omitted  in  such  a  way  that  for  instance,  "XYZU"  denotes  (((XY)Z)U). 

DEFINITION2.  Types and Type-schemes. 
(i)  There are assumed to be  certain  symbols called  basic  types (at least  one and 
at most  countably  many);  also a  countably infinite sequence of  type-rariables. All 
these are type-schemes,  called  type-atoms. 

(ii)  If a and j3 are type-schemes,  then  (FaP) is  a  compound type-scheme.  
A  type is  any type-scheme  which contains no  variable^(^).  

It  is  assumed  that  no  compound  type-scheme  is  a  type-atom  and  that  if  (Fa@  
=(%a)  then a r p  and y s  6. Greek letters denote arbitrary type-schemes, and lower 
case Roman letters from the start of the alphabet denote type-variables. The outer- 

most  pair  of  parentheses  on  a  type-scheme  will  usually  be  omitted.  In  denoting 
lists  of variables,  for example  "a,,  . . . ,a,",  it  will  be  assumed  that  the  variables 
are  mutually  distinct  (more  precisely,  i f j implies  a,$ a,),  unless  explicitly  stated 

otherwise. 

In  the  usual  interpretations,  the  ob (XY) represents  the result  of  applying the 
function  X  to  the  argument  Y.  Each  basic  type  represents  a  particular  set  of 
functions, depending on the interpretation one may have in mind, and Fa@ represents 

the set of all functions from a: into j3. Thus each type  represents a  particular set of 
functions. 

The variables are intended  to represent  arbitrary types,  so that a  type-scheme cc 
containing variables  represents  a  class  of  types,  each  type  being  obtained  from a 

by  substituting types for the variables. 

(2) In Curry  [I] the  obs are not  necessarily  linguistic expressions,  but  it is  convenient  to 
think  of them here as such, and this specialization involves no essential loss of generality.  But 
in Definition  1, notice for example that the symbols "S"  and  "K"  need  not  themselves  be  the 

basic combinators; they  only denote them. 

(3) In  (11,  Curry  finds  it  convenient  to  regard  types  as  a  particular  kind  of  ob,  called 
"F-obs";  the results of the present  paper apply to this case. 

32  R.  HINDLEY  [December 

Sequences will  be  denoted  by  angle  brackets,  for example  "(a,,  . . ., a,)",  and 
sets denoted  by  brackets  "(  1". DEFINITION 

a,  and  distinct 3.  Substitution.  For  any  type-schemes  PI,. . ., /3,, 

is defined to be the result of replacing each occurrence of a, in a by pi, simultaneously 

for i=  1. . .n. (If ai does not occur in a, no replacements are made.) Any type-scheme 
with  the  above  form is  called  an  instance of  a. (Hence  a  is  an  instance  of  itself.) 

For any sequence  (a,,  . . .,a,)  of type-schemes, define 

to be the sequence formed by substituting Pi for ai in all of a,,  .. . ,a,,  simultaneously 

for i = l , .  .., n. 

An expression consisting of a type-scheme a beside an ob Xis called a statement, ax.

The statement /3X is called  an instance of a X  iff  p  is an instance of  a. DEFINITION4. 

Type-schemes of  obs.  The  type-scheme  a  is  a  type-scheme  of  X 
iff  the statement UX can be deduced  from the axioms below by the rule (F) below. 

Axiom-schemes.  Each axiom-scheme  is assumed  to be a statement p Y,  where  Y 
is  an  ob-atom,  and  no two  axiom-schemes  contain  the  same  Y.  If  the  ob-atoms 

include  S and  K, then  the axiom-schemes include 

F(Fa(Fbc))(F(Fab)(Fac))S 

Fa(Fba)K 

for  some  (distinct) type-variables  a, b,  c.  The  axioms  are  all the  instances  of  the 
axiom-schemes.  (Including  the  schemes  themselves;  this  is  just  a  notational 

convenience.) 

Rule (F).  From (FyS)X and y Y,  deduce S(XY). 
If  a  contains  no  variables,  and  a X  is  deduced  from  axioms  containing  no 
variables, we  say that a is a  type of  X. DEFINITION5. 

Deductions. Given a set d of  statements, a deduction of  a X  from d
is  a finite set of  statements arranged  as a tree in the usual  way, with a X  at the 
bottom.  Each  statement  in  the  tree  must  either  have  just  two  statements  im- 
mediately  above  it,  and  follow  from  them  by  Rule  (F),  or  else  be  an  axiom  or 
member of d,with nothing above it.  The expression 

means that there exists a deduction of a X  from d ;and 

I- a X  
means that there  is a deduction  of a X  whose branch-tops are all axioms(4). 

(*) We shall only be interested in deductions in which each ob in A is an atom not occurring in the axiom-schemes. Throughout this paper "deduction"  means this kind of deduction. 

19691  THE PRINCIPAL  TYPE-SCHEME  OF  AN  OBJECT  33 

The axiom-schemes for  S  and  K in  Definition  4 are justified  in  11, p.  2631,  by 
their connection with the reduction-rules for these two combinators (see (1 3) later), 
but for the present  section these reduction-rules  are irrelevant.  The restrictions  on 
the unspecified axiom-schemes in  Definition 4 will ensure that no ob-atom has two 
different principal  type-schemes.  Rule  (F)  can  be  interpreted  as saying  that  if  X 
is a function from the set y  into the set 6, and  Y is in y,  then  (XY) is in  S(5). 

Incidentally,  sometimes  the  ob I  of  the  Introduction  is  included  as  an  extra 
basic  combinator, and  sometimes  it  is  defined in  terms  of  S  and  K; the  present 
paper  includes  both  possibilities.  If  I  was  included  as  an  ob-atom,  one  of  the 
unspecified axiom-schemes of  Definition  4 would  be  (Faa)l.  Some theories  based 

on combinatory logic postulate extra axioms (Fa/3)1 for certain distinct types a and 
,8  (meaning  intuitively  that  cc  is  a  subset  of  8).  In  this  case  I  would  not  have  a 

principal type-scheme. In fact if  I  was  an atom the condition  in  Definition  4 that 

no two  axiom-schemes contain  the  same  Y would  not  be  satisfied,  and  if  I  was 
compound, there would he an axiom with a compound ob; thus the present paper 

would not apply. 

From Definitions  4 and 5  it can  be  seen that if  the obs in the statements in d 
are atoms, then  the steps in a deduction 

follow the construction  of  X; if  X i s  an atom, the'deduction  must consist  of  one 

step only, whle if  X i s  (UV), the deduction must  be  the result  of joining  together 
two deductions with the form 

by an application of Rule (F). Hence every ob-atom in X must occur in a statement 
in  d or  in  an  axiom;  and  each  statement  in  d which  actually  occurs  in  the 
deduction must have its ob-atom  occurring in  X [I, 59B,Theorem  11. 

The first two  statements  in this  deduction,  for S and  K,  are axioms  obtained  by 

substituting Fba for b,  and a for c, in  the appropriate axiom-schemes. 

If S and  K  are the only ob-atoms,  and type-variables are prohibited from the axioms, Definition  4 is  equivalent to  the system in  [2], and  to  the  basic theory Fl(K,

S) in  [I,  $9A3] with restricted rule F and rule Eq  omitted. 

34  R. HINDLEY  [December 

DEFINITION  any type-schemes 6.  Instances  of  deductions. For  any  deduction  9, 
p,,  . . ., fin, and  (distinct) type-variables  a,,  . . ., a,, 

is defined to be the result of simultaneously substituting p,,  . . . ,/3,  for a,,  . . . , a,  in 
all the type-schemes in  9,and  it is called  an  instance of  9. 

If the above substitution is denoted by " *  ",it can be seen that if 9is a deduction 
giving 

{a1 Yl, .  . ,ak Yk)  + PX, 

then  9*will  be a deduction giving 

{a? Y,,  . . ., a:  Yk} I- /3*X. 
DEFINITION7.  Principal type-schemes. 
(a)  Suppose each atom in  X occurs in an axiom-scheme; then a type-scheme a is 
a principal type-scheme (p.t.s.)  of  X iff 

(i)  +ax,  and 
(ii)  if  r-/3X, then p is an instance of a. 
(b)  If  X contains  ob-atoms  x,,  . . ., x,  (mutually  distinct)  which  are  not  given 
types by the axiom-schemes, then  a is said to be a p.t.s.  of  X iff 

(i)  for some type-schemes a,,  . . ., a,, 

(ii)  and if  for some type-schemes /3,,  . . . ,/3,,  IS, 
then /3  is an instance of a. 

Note.  Since /3  in  (ii) is any type-scheme, not just  a type,  the notion  of principal 
type-scheme here differs slightly from the introduction, where (ii) was only required 

for types 13.  However Theorem  1 will show that if  X has a type at all, X must have 

a  type-scheme  which  is  principal  in  the  sense  of  Definition  7,  and  hence  in  the 
sense of the Introduction. If the number  of basic types  is infinite, I think the two 
senses are equivalent. 

DEFINITI~N8.  PrincipaI  deductions.  Given  an  ob X,  a  deduction  9 of  a  type- 
scheme of  X from a  set d of  statements  is  said to be  a principal deduction for  X 
iff  all  other  deductions  9 of  type-schemes  of  X  are  instances  of  9 (including 

deductions  9' from  other  sets  a!"  of  statements).  The  existence  of  a  principal 
deduction of a x  from a set d of  statements is denoted by 

d  a x .  
If  X has a principal deduction 

19691  35THE  PRINCIPAL  TYPE-SCHEME  OF  AN  OBJECT 
(where x,,  . .., x,  are the  atoms in  X which  do not  occur  in  the axioms),  then  a 

must be a p.t.s.  of  X; because any deduction 

must  be  an  instance  of  the  principal  deduction,  and  so  P,,  . ..,P,,  p , must  be 
instances  of  a,,  . . ., a,,  a, respectively. (In fact,  the  sequence (PI,. . ., P,,  13)  must 

be an instance of (a,,  . . .,a,,  a).) 

Notice that for any deduction 9, the type-schemes in  its statements can be  laid 
out as a sequence, by  starting at the top of the left-hand  branch, working  down it 
to just  before  it joins  the  next  branch,  and  then  going  to  the  top  of  this  next 

branch,  and  so on.  For instance the  sequence  for  the deduction in  Example  1 is 
(type-scheme  for  S,  first  type-scheme  for  K,  type-scheme  for  (SK),  second  type- 
scheme for  K,  type-scheme  for  (SKK)).  Then a  deduction  is  an  instance  of  9 if 
and  only  if  its  sequence  is  an instance  of  the  sequence  for  .9(by  the  same sub- 

stitution). 

2.  Lemmas on substitution.  These lemmas are stated for substitution into type- 
schemes, but they are also true for substitution into deductions, and into sequences 

of type-schemes. 

LEMMA1.  Any substitution 

can  be performed  by a series  of substitutions  in  which n= 1,  and  any series  of such 

"single"  substitutions can be performed  by one substitution in which n 2 1. 

(See notes 7.4 and  7.6, p. 264 of  [3].) 

COROLLARY.TWO or  more successice substitutions  can be performed  by one srtb- 
stitution; hence an  instance of an  instance  of a type-scheme a is an  instance  of  a. 

LEMMA2.  Any  substitution for  variables  a,,  . . ., a,  in  a  type-scheme  a  can  be 
expressed as a substitution for  all  the variables in  a  (by substituting  themselres for 
the variables distinct from  a,,  . .., a,). 

DEFINITION9.  A  trivial  variant  of  a  type-scheme a is  any type-scheme  with  the 
form  bl, . . . ,bn 

[a,,.  . . , a J a  
where  b,,  .. ., b,  are distinct,  and  a,,  . . ., a,  include all  the  variables  in  a. Trivial 

variants  of  deductions,  and  of  sequences  of  type-schemes,  are defined  similarly. 

LEMMA3.  (a)  The  relation  of  being  a  trivial  oariant  is  rejle.~ive, transitice  and 
symmetric. 

(b)  A  type-scheme /3  is a  triclial variant  of  a  type-scheme a if  and  only  if a and ,B 
are instances of one another. 

36  R. HINDLEY  [December 

LEMMA  a is ap.t.s. of  X,  and4.  (a) If  a is ap.t.s. of  X,  then  any trivial variant of 
any p.t.s.  of  X is a  tricial variant  of  a. 

(b)  Part (a) is also true for  principal deductions.  

DEFINITION 10.  Highest  common  instance. If  a and ,8  are type-schemes, and y is 
an instance of  both  a and IS,  such that any other instance of  both a and ,8  must be 
an  instance  of  y,  then  y  will  be  called  a  highest  common  instance  (h.c.i.)  of  a, ,8. 

Highest  common  instances  of  pairs  of  sequences  of  type-schemes  are  defined 
similarly. 

Notice that  if  trivial variants  are ignored, the h.c.i.  of  a, ,8  is unique.  Also,  if  a 
is  Fala,  and  ,8  is  F,8,,8,,  then  a,  /3  have  a  common  instance  if  and  only  if  the 
sequences (a,,  a,)  and (p,,  P2) have a common instance, and if these two sequences 
have a  h.c.i.  (y,,  y2), then  Fy,y2 will  be  an h.c.i.  of a, 8. 

LEMMA  (a) If  trr~o type-schemes a and ,8  have  an  instance in 5  (J. A.  ROBINSON). 
common, then  they have a h.c.i., y. 

(b)  Furthermore,  given  any variables al, . . ., a,,  y  can be  chosen so as to  contain 
none of  a,,  . . . , a,. 

(c)  Parts  (a)  and  (b)  are  true  also for  any  pair  (a,,  . . ., a,),  (PI,.. ., 6,)  of 
sequences of  type-schemes. 

Proof.  Part  (b)  follows  from  (a)  because  if  y were  an  h.c.i.  of  a, ,8,  any trivial 
variant of y would  also be  an h.c.i.  of  a, 8. 

To prove (a), we  may  assume  that a and ,8  have no variables  in  common, since 
otherwise we  could find trivial variants a'  and ,!I' with  this property and use them 

instead of a and 8. (By Lemma 3, they would have the same common  instances as 
a  and  ,8.)  Let  a,,  . . ., a,  be  all  the  variables  in  a, and  b,,  . . ., b,  be  those  in  j3. 
Then  for any yl, . .., y,,  61,. . ., 6,,  since b,,  .. ., b,  do not occur in  a, we  have 

Y1,.  .,Yrn  Y1,  ..  Ym, 61, . . ., [al,. . ., a J a   [al,  ..., a,,  bl,. . .,b,"1 

a. Similarly, 

thus  we  can  look  at any  common  instance  of  a, ,!I as  having  been  obtained  by 
performing the same substitution  on a as on j3.  Now J.  A.  Robinson in  [4, p.  321 

(Unification Theorem) has given  an algorithm  which  allows us to decide whether 
in the above circumstances, a and ,8  have  an instance in  common,  and if  they  do, 
to construct a h.c.i.  for them.  This proves  (a). 

To  prove  (c),  notice  first  that  if  two  sequences  (a,,. . ., a,)  and  (PI,  . ..,Pa) 
have an instance in common, then they must have the same number of terms. Let 0 

be a basic type,  and define 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF  A N   OBJECT  37 
Then  a and ,6  have  a  common instance if  and  only  if  the  given  sequences  have  a 
common  instance  (since  nothing  can  be  substituted  for  R),  and  if  the  h.c.i.  of  a 

and ,6 is 

Fy,(Fyz(. . . ( F Y , ~ ) .   . .I), 

then the h.c.i.  of the given sequences will  be 

LEMMA6.  Given a sequence (4,, .. .,+,, #,,  . . .,$,)  of type-schemes, let a,,  .. .,a, 
be all  the variables in  (4,,  . . ., 4,)  and  b,,  . . ., b, be  the variables (ifany) that  are 

in ($,,  . . .,4,)  but not  in ($,,  . . .,4,);  let "*"  denote the effect  of substituting for 
a,, . ..,a,  certain  type-schemes  containing none  of  b,,  .. . ,b,.  Then if  (A,, . . ., A,, 

pl ,.  . ., p,,)  is an  instance of  the given  sequence, and  (A,,  . .., A,)  is an  instance of 

(+:,  . .., + f ) ,  the  whole  sequence  (A,,  . . ., A,,  p,,  . . ., p,)  will  be  an  instance  of 

(dT, - - -,47%  # T ,   $3.. .- 9  

Proof.  For ease of reading, suppose m =n = 1. Let a,,  . . .,a, be  the type-schemes 
substituted for a,,  . . . ,a,  respectively by the substitution "* "; let el, . . .,e,  be  all 
the variables in these  type-schemes. Now for some yl, . . ., y,,  S,,  . . ., 6,, 

But also,  for some el, . ...el, 

- a19  . . - 9  a, = [:::: : :::I  [a,, . ..,

Y j l  

- a, ,... , = [a:, .. . ,:I  

where for each i, a; is the result  of substituting el, . . ., e, for el, . . ., e, respectively 
in a,.Therefore by the previous  expression  for (A,,  p,), 

y,  = a;. Hence 

- 1 ,   , T ,  1  7  ,  a,9 . . ., up, bl, . . ., = [el, . . .,e,,  b,,  . . ., 
since  el, . .., e,,  b,,  . . .,b,  are  distinct,  and  a,,  . . ., a,  do  not  contain  b,,  . . ., b,. 
Thus (A,,  p,)  is an instance of (+T, $ T ) .  

38  R. HINDLEY  [December 

3.  Existence  of  principal  type-schemes.  In  future,  whenever  a  list  (e.g. 
4'  x,,  . . ., x,")  of ob-atoms is mentioned, the atoms will  be assumed to be distinct. 

THEOREM1.  Let  X be  an ob, and x,,  . . . ,x, (t 2 0) be  the ob-atoms in  X that are 
not giuen  types bjj the  axiom-schemes; f a  type-scheme for  X can be  deduced from 
some assumptions, then  there exists a principal deduction 9for  X (and hence X has 

a p.t.s.). 

Proof.  We use induction  on the construction  of  X. 
If  X is an atom  occurring in  an axiom-scheme a x ,  choose 9 to be the one-step 
deduction 

aX. 

This is principal because every other deduction  must have the form PX, where P is 

an instance of a. 

If X is an atom not given a type by an axiom-scheme, choose 9to be the one-step 
deduction 

a x ,  

where a  is any type-variable.  This is obviously  principal.  Thus the p.t.s.  of  X is a 
single variable in  this case. 

Now  suppose  X is  (C'V);let  u,,  . .., up be those of x,,  . . ., x, which  occur  in  U 
but not in  V,  w,,. . ., tr,  be those which occur in both  U and  V,  u,,  .. ., uq be those 
which  occur  in  V  but  not  in  U. Let  the  given  deduction  of  a  type-scheme  for  X 
have  the form 

This deduction must be the result  of applying Rule (F)to two deductions with the 
forms 

(2)  (X1~1,.. ., Apup,  VlW1,.  . .,vTwTI  I- F 4 U ,  

a, (3)  ( ~ 1 ~ 1 ,. . ,P*Vq,VlW1,  . .  vrwrl  + a P'. 
By  the  induction  hypothesis,  U  and  V have  principal  deductions  9, and  B2; 
suppose these have the forms 

Let a,,  . . ., a,  be the type-variables  in 59,  that do not occur in  ($,,  . ..,$,,  n), 

b,, . . ., bl be all the type-variables  in  ($,,  . . ., $,,  n), 

c,,  . . ., c,  be  all the type-variables  in  (x,,  . . ., x,,  C), 
dl, .. ., d,, be the type-variables  in  B2that are not in  (x,,  . . ., xr, 5).  Let g be  a 
new type-variable,  distinct from all those above. 

The principal deduction for (UP') is constructed as follows. First choose 9, and 
9, so  that  all the  above variables  are  distinct  (this  is  possible  by  Lemma  4(b)). 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF AN  OBJECT 
Then find an h.c.i.  of the two sequences 

which  contains  none  of  a,,  . . ., a,,  dl,. . ., d,,  (this  is  possible  by  Lemma  5(c), 
since the two sequences have a common  instance (v,,  . . . ,vr, (Farp))  by  (2) and  (3) 
above). Suppose this h.c.i.  is 

(6)  ( ~ 1 , ..., WI,  (For)), 

where  "*" 

$:, .,. . <$T,=   r*), = (xi,  . . ., xtO,  (F50~)) 
denotes  the  substitution  of  certain  type-schemes  for  b,,  . . ., b,  only, 
and " O w   for c,,  . . .,c,  whichonly. Then construct the two deductions i 3 T  and 9;, 
give 

(7)  {OTU,,.. ., e;~,,  g:~,,  . . ., $:w,)  + FUTU, 

(8)  {&vl,  .  ,$iv,,  X:WI,  .  ., xlowr)  + 50 V.  

Since a =  5"  and #,* =x," for each i,  these two deductions can be combined by  Rule  (F) 

to form one deduction, giving 

We  shall  see that  this  is  a  principal  deduction  for  (UV); to  do this,  we  must 
prove  that  any deduction  with  the  form (1)  is  an instance  of  (9)(6). For  this  it  is 

enough to show that the deduction (2) is an instance of (7), and (3) is an instance of 
(8), both  by  the same substitution.  Notice that  since (4) and (5) are principal,  (2) 
and (3) are instances  of (4) and (5) respectively. 

Now  let  Yz, Y3, Y4,Y5  be  the  sequences  for  the  deductions  (2),  (3),  (4),  (5) 
respectively (see the end of $1). To show that (2), (3) are instances of (7), (8) both 

by the same substitution, it is  enough to show that the sequence (Y2, Y3)(formed 
by  putting  the  members  of  Y3  after  the  members  of  Y2) is  an  instance  of  the 
sequence (Y4*, qO),since Y4* is the sequence for (7), and Y5" corresponds to (8). 
We shall  use Lemma 6. 

Since no variables  are common  to (4) and  (5), and  (2), (3) are instances of (4), (9,

the sequence (Y2, Y3) is an instance of  (Y4?Y5). Hence the  sequence 

(%, %, ~ 1 ,. . - vr,  (Fa@), ~ 1 ,  - .,v r ~(Fag)) is an instance of 

(94,95>$1,  - . ., $79  7, XI,  .  >  ~ r 9(FCg)) 
because v,,  . . .,vr, (Forb) occur in Y2at positions corresponding  to $,,  . . .,#,,  r in Y4,

and similarly for the other members.  Also,  by (6), 

( 6 )  Here the relevant  deductions will be called  "(l)," "(9),"  etc.,  though strictly  speaking 
(1) and  (9) are not  deductions  but  only  the  hypotheses  and conclusions of  deductions.  Thus 
for instance,  type-variables  may  occur  in  the deduction  giving (1)  but  not  appear in  (1) itself 

(if they occurred in axioms used  in the deduction); in  Example  1, b is such a variable. 

40  R.  HINDLEY  [December 
where  "  denotes  the  result  of  simultaneously  performing  substitution  *  on+ "  
bl, . . ., bl, and  "  on  c,,  . . ., c,,  and  substituting 7 for g.  By  the definition  of  (6), 
if  there  are any type-variables in  Y4or Y5which do not occur in 

they do not occur  in  the above sequence. Hence by  Lemma 6, 
is an instance  of 

(94+, %+,*:,  . ..,+:,  n+,x:,  . .., x:,  (Ftg)+). 
Hence (Y2, Y3) is an instance  of  (Y4+, Y + ) ;  since this  is the same as  (q,9:) 
the proof  is complete. 

REMARK.In  this  proof  the  p.t.s.  T  of  U  in  (4)  may  be  either  compound  or  a 
variable. (It cannot be a basic type since it has an instance Fa/3 which is compound.) 

The  variable  g  was  introduced just  to  treat  these  two  cases simultaneously,  and 
when .rr  is compound, g is not really  necessary. 

COROLLARY1.1.  There is an  effective  way  of  deciding for  each  X whether  or not 
X has  a  type-scheme, 'and if  it  has  one, for  calculating its p.t.s.,  and its principal 
deduction. (Assuming that atoms can be effectively distinguished from  each other and 
from  compound obs, and that substitutions can be  effectively performed,  etc.) 

Proof.  If  X i s  an atom, then the p.t.s.  of  X either is given by  an axiom-scheme, 
or else is a single type-variable. 

Suppose X is (UV) ;if  U or V has no type-schemes, then X has none. If  U and  V 
have  principal  deductions  with  the  forms  (4)  and  (5), then  Robinson's  theorem 
(Lemma 5) gives an effective test of  whether the h.c.i.  (6) is  constructible;  if  it is, 

the  principal  deduction  for  X is  (9)  and  the  p.t.s.  is  7 therein;  if  not,  X has  no 
type-schemes at all. 

COROLLARY1.2.  For every p.t.s.  a of  X,  there exists a principal deduction of  a x .  
Proof.  By  Theorem  I, X has  a  principal  deduction; let PX be  the statement  it 
deduces. By  Lemma 4(a), ,8  is a trivial  variant  of a, and hence suitable changes of 

the variables in the deduction of ,BX will form a principal deduction of a x .  

The following two corollaries show how to calculate the p.t.s.  of (UV) from those 
of  U and  V,  in  the important case that all atoms common to  U and  V are given 
types by the axiom-schemes. In this  sase r=O  in the proof  of the theorem, and so 
the  principal  deduction  is  constructed  by  finding  an  h.c.i.  of  .rr  and  Ftg,  and 

combining the corresponding deductions (7)  and (8). 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF  A N   OBJECT  41 

COROLLARY1.3.  Suppose  that  all  the atoms common  to  U and  V are given  types 
by the axiom-schemes; if 

and 
and  5, 5  have an  h.c.i.  f * =5"  whbse new  variables (i.e.  those not  in  E )   do not  occur 

in 7,  then  the result  I*,  of making  exactly the same substitutions  in 7  as changed  5 
to  f * ,  is a p.t.s.  of (UV). 

Proof.  By Lemma 4b we may replace the deduction (5a) by one with no variables 
in common with  (4a). Suppose this deduction  gives 

The type-scheme  f*  will  be  an h.c.i.  of .f  and 5'. 

Now  F&*?* is an h.c.i.  of  Ffl  and  Fl'g,  if g does not occur  in  5'.  It is certainly 
a  common  instance.  Also  if  Fap  is  any  other  common  instance,  u  must  be  an 

instance of f *  since 5* is an h.c.i. of f and 5'; hence by Lemma 6, Fup is an instance 
of  Ff*?*.  (Lemma 6 is here  applied to the pairs  (5,  I),  (f*, I*)  and (a,p).) 

To follow  the  construction. in  the  proof  of  Theorem  1,  with  r=O  and  a =  F h  
in the present case, the first step is to find an h.c.i.  of  F577  and  F5'g  that does not 
contain  a,,  . . ., a,,  d l , .  . ., d,,  (see  Theorem  1).  If  Ff*7*  is  not  suitable,  we  can 

find a suitable trivial variant  FYI"  of it. Then the principal deduction (9) for (UV) 

is formed  by  combining certain  instances  of (4a) and (Sa)',  and  shows that 1" is a 
p.t.s.  of  UV.  Hence  ?* is a p.t.s., since it is a trivial variant of I". 

COROLLARY1.4. I f   in  Corollary  1.3  all  the  variables  in  the  hypotheses  of  (4a) 
occur in  Ffl,  and all those in the hypotheses of (5a) occur in  5,  then 

{e:ul,.  . ., e,.u,,  4.,v,,  . . ., 43,> I-,  ?*(UV). 
Proof.  In the proof of Corollary  1.3, a,,  . . . ,a, are the variables in the deduction 
for  U which  do not  occur  in  F h ;  hence  by  the  assumption  they  do not  occur  in 
any of 81, . . .,Bp,  Ff?. Therefore by Lemma 4b a principal deduction can be found 
which still gives (4a) but with a,,  . . .,a,  not occurring in  Ff*?*.  Similarly we  may 
assume that dl, . . . ,d,  in (5a)' do not occur in  F&*I*. Therefore F(*I*  is a suitable 
h.c.i.  for  the proof  of  Corollary  1.3.  To construct the  principal  deduction (9)  for 

UV,  we  first perform  in  (5a)'  the substitution which changes 5'  to 5";  since all the 
variables  in  each 4; occur in  5',  this changes  4; to 4P, giving a deduction 

Next  we  perform  substitution  " * "   in  (4a)  and combine the  result  with  the above 
deduction  by  Rule (F), completing the corollary. 

42  R.  HINDLEY  [December 

COROLLARY  n  Ftr!  and  5~  6,1.5.  If in  (4)  and  ( 5)  of  Theorem  1 ,   has  the form 
$,=X ,  for  all  i  (these being  the  only  exceptions  to  the  assumption  that  ( 4 )  and  ( 5 ) 
have  no  uariables  in  common),  then  a  principal  deduction for  U V   is  obtained  by 
sinzply  applying  Rule  ( F )  to ( 4 )  and  (5). 

Proof.  To construct  a  principal  deduction as in  Theorem  1, first change  all the 
variables in ( 5 )that occur in  5, x,,  . . .,X,  to distinct new  ones not occurring in  (4). 
This leaves ( 4)  and (5 )  with  no variables  in  common. Then  in  (6),take " * "   to be 
the identity substitution and """  to be the reverse of the above change of variables, 

and  T = ? .   Then  (7)  and  (8) are the given ( 4 ) and ( 5 ) ;hence the result. 

EXAMPLE2.  Let  x ,  y,  z  be  distinct  ob-atoms  not  given  types  by  the  axiom- 
schemes; then 

{Fab x ,  a y, a z )  I-,b(K(xy)(xz)). 
Proof.  Let a,  b,  c, d, e, g,,  g ,   be distinct type-variables. Principal deductions for 
x  and y  are 

c X ,   a y. 

To get  a  principal  deduction  for  ( x y )  by  the  construction  in  Theorem  1, notice 
that an h.c.i.  of  c and  (Fag,) is just  (Fag,) itself; hence,  replacing c by  (Fag,) and 
combining  the two deductions by  Rule (F) gives a principal  deduction 

A principal  deduction for  K is the one step  Fg,(Fbg,)K;  combining  this with  (10) 
by  Corollary  1.5 gives the principal  deduction 

Now just  as for ( x y ), a  principal  deduction for ( x z )  is 

Fedx   e z  

To  obtain  the  result,  combine  (1 1 )   and  (12).  No  type-variables  are  common  to 

both,  and  the  only  ob-atom  they  have  in  common  is  x ;  hence  we  must  find  an 
h.c.i.  of the sequences 

All  variables  in  (10) and  (11) occur  in  these  sequences,  so there  is no restriction 

on the h.c.i.  we  can use.  A  suitable  one is 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF AN  OBJECT  43 
obtained  by  substituting  b for g,  in  the  former  sequence,  and  a, b,  b  for  c,  d, g, 
in  the  latter  sequence.  Making  the  same substitutions in  (11) and  (12)  and  com- 
bining  by  Rule (F) gives the principal deduction 

EXAMPLE  SKK, then  I-,Faal.3.  If  I E  Proof. 

By  the axiom-schemes,  

By  Corollary 1.3, since  Fa(Fba) is  an h.c.i.  of  Fa(Fbc) and  Fa(Fba),  substituting  a 
for c in  the p.t.s.  of  S and applying Rule (F) gives 

I-,F(Fab)(Faa)(S K). 
Now Fa(Fba) is an h.c.i.  of Fab and Fa(Fba), so by Corollary 1.3 again (substituting 

Fba for b in the  p.t.s.  of  SK), 

But  we  can  say  more  than  this:  in  the  first  application  of  Corollary  1.3 above, 
there  are  no  a,,  . . ., a,,  d l , .  . ., d,  to worry  about  in  the  proof  of  the  corollary, 
and similarly for the second  application  (since every variable in  the  deduction  for 

SK  occurs  in  its  conclusion),  so  the  above  proof  actually  gives  us  a  principal 
deduction  for SKK. This deduction  is  the same as in  Example  1. 

EXAMPLE4.  The ob SII has no type-schemes at all.  Proof. 

By  Example 3,  

+,  F(Fa(Fbc))((Fab)(Fac))S,  +,  Faal. 
Now  F(Fbc)(Fbc) is  an  h.c.i.  of  Fa(Fbc)  and  Faa,  so  by  Corollary  1.3 and  sub- 
stituting Fbc for a, 

I-,F(F(Fbc)b)(F(Fbc)c)(Sl). 

If  SII had any type-schemes, the construction  in Theorem  1 would  give us a p.t.s. 

But this construction  involves finding an h.c.i.  of 

and the existence of such an h.c.i.  would imply that 

F(Fbc)b,  Faa 
have  instances  in  common,  which  is  impossible.  Thus  the  construction  fails,  so 

Sll has no type-schemes. 

4.  The  principal  type-scheme  of  [x].?M.  The  main  result  of  this  section  is  a 
lemma for use  in  the proof  of Theorem 3,96.  From now  on the ob-atoms will be 
assumed to include  S and  K,  together  with some ob-variables, which are not given 

44  R.  HINDLEY  [December 

types  by  the  axiom-schemes. (These variables can  be  adjoined as  extra  ob-atoms 
if  they  are  not  already  present.)  Letters  "u",  "v",  "nl",  "x",  "y",  "z"  will 
denote  these  variables, and  for  ease  of  reading  it  will  be  assumed  that  all  the 
ob-atoms which  do not  occur in  the axiom-schemes are variables. 

DEFINITION11.  Reduction and equality. An ob Xis said to reduce to  Y (" X h  Y") 
iff  either  Y E  X or  else  Y  is  the  result  of  applying to  X a  series of  replacements 
with the forms (for any  U,  V,  W): 

SUVW may be  replaced by  U W(  V W), 

KUV may be  replaced by  U. 
The properties and  purpose  of  reduction  are explained in  [I]. The phrase  "X is 
equal to  Y"  (" X=  Y")  is defined to mean  that  Y is  the result of  applying to X a 

series of  replacements as above, and reversed  replacements. 

It is  proved in  11,  $9C2, Theorem 21  that 

(13)   if  X 2 Y and { a , ~ , ,  . . ., a,~,) I- /3X, then {alxl,. . ., a,x,)  I- BY. 

DEFINITION12.  [XI. M.  For  each  ob-variable x  and  each  ob M,  an  ob  called 
" [XI.M"  can  be  defined as follows, by  induction on the construction of  M. 

(i)  [x].x=I, that is,  SKK; 
(ii)  [XI. M r  KM if  M does not contain x ;  
(iii)  [x].(U V) =((S[x]. U)[x] . V)  if  (UV) contains x.  
This definition has the property that for all x, M, N,  

(14)  ([XI. M)N 2 [NIxlM,  
where  [N/x]M is just  the result of  substituting N for  every occurrence of  x in M.  

Thus  [XI. M  represents the  function  of  x  defined  by  M; see  [I, $6A] for  details.  

Since [XI. M represents a function of  x, we  should expect to be  able to prove that  
if  M has type  q,  deduced  by  giving  x  a  type  f ,  then  1x1. M has  type  Ffq.  More  
precisely, letting y,,  . . ., y,  be  the other ob-variables in  M,  

(15)  if for Some types a,,  . . ., an, 6, 7, { ~ I Y I ,  .- ., any,,  5x1 + TM, then {alyl,. . ., any,) 

I-- FSq([xl.M). 

This is actually proved in [I, $9D, Corollary 1.11; the theorem below is its analogue 
for principal deductions. 

THEOREM2.  (a) Suppose that x, y,,  . . .,y,  are the only ob-variables in  M. If 

{ a l ~ l ,  - 9   any,,  6x1 I--,  TM, then 

{ a l ~ l ,.  ., an~n>I-PF~T([xI 
(b)  Suppose that  M contains only y,,  .. .,y,  and not x ;  if  

{ ~ I Y I ,.. - 9   ~ y n )+p  vM,  then 

{ ~ I Y I ,- ., any,)  +p  Fed[xI - M )  
where e is any type-variable not occurring in  q. 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF AN  OBJECT 

Proof.  For part (b) : [x].M is  KM, and 

Therefore by the given deduction and Corollary  1.3, since 77  is an h.c.i.  of 77  and a, 

For part (a) we use Curry's proof (see an earlier comment). Firstly, since M has a 
type-scheme it must have a type, since all the type-variables in a deduction can be 
replaced by basic types. Therefore by  (1 5), [x].M has a type.  Every type of  [XI. M 

must  be  compound; this is true if  M is x, since then  [x] .M is  I ;when  M has the 
form  UV,  then 

[x].M E (S[x].U)[x] .V 

and  by  the  axiom-scheme for  S,  the  p.t.s,  of  this  ob (if  it  has  one) must  be  an 
instance of (Fac), which  is compound. Hence the p.t.s.  of  [XI. M is compound, so 

the principal deduction for  [XI. M must have the form 

(16)  {BlYl,. . . ,rBnyn1  r-p  FyG([xl  MI.a 
By  (15) and the given deduction for M we  have a deduction 

(17)  {alrl, . . . ,any,> r- F t ~ ( [ x l.MI. 
This must be an instance of (16), since (16) is principal;  hence 

(18)  (a,,  .. ., a,,  (F57))  is an instance of (PI,.  . .,P,,  (Fy6)). 

Now  by  (16) and Rule (F), 

(PIYI,.. - 3  Bnyn, YXI+ a(([xlaM)x), 
and so by  (14) and (13), 

This deduction must  be  an  instance of  the given  principal deduction  for  M,  and 

hence  (PI,. . .,/3,,  (Fy6))  is  an  instance of  (a,,  .. ., a,,  (Fh)).  Therefore by  (18) 
these  two  sequences  are  trivial  variants  of  one  another.  Now  we  construct  a 
principal deduction with the same hypotheses and conclusion as (17). To do this, 

replace all type-variables in  the deduction (16) which  do not  occur in 

(81,. .  Bn,  ( h a ) )  
by  distinct new  variables not  occurring in  (a,,  . . ., a,,  (Ffq)),  and then  make  the 
substitutions which  change (PI, .,. ., /I,,  (Fy8))  to (a,,  . ..,a,,  (Fh)).  The result is 
a deduction giving (17), and it is principal because  it is a trivial variant  of (16). 

COROLLARY2.1.  If the only  ob-variables in  M are x,,  .. .,x,  (n 2 I), and 

46  R.  HINDLEY  [December 
then 

+P  (Fnal. . -anB)([x1,. . .,xnl .M ) ,  where 

(Fa@,. . - an@  is  Fal(Fa2(. . .(Fa$)  . )) 
or just  /3  when  n=0,  and 

or just  M when  n =0. 

EXAMPLE5.  Define   A  = 

[x, y, z]. K(xy)(xz):  

then by  Example 2 and Corollary 2.i, 

REMARK.H. Curry has pointed  out that if  the definition of  [XI. M included, as 
it usually does, the clause 

(iv)  [XI. (Ux)  = U  when  U does not contain x 
(and clause (iii) were  only applied when .(iv) was  not applicable), then Theorem 2 
would be  false. For example the deduction 

is a principal one for (yx), and by  (iv), 
so Theorem 2 would  say that 

Fab y  +,  Fab y, 

which is false because the one-step deduction 

Fab y 
is  not  a  principal one  for y.  The proof  of  Theorem 2  breaks  down  when  (iv) is 
used  because  then  the p.t.s.  of  [XI. M may  not  be  compound;  but  this  does not 

mean that Theorem 2 is useless; see the proof  of  Theorem 3  later. 

Incidentally, Theorem 2 can  be  proved  by  induction  on the construction of  M 
without  using  (14)  and  (15); though  this  proof  is  longer  than  the  above  one,  it 
does give an alternative proof of (15), because (15) follows from Theorems 1 and 2. 

5.  An  alternative  approach  to  typed  combinators.  Now  besides  the  formal 
system  set  up  in  Definitions  1 to  4,  there  is  another  way  of  introducing  type- 
restrictions  into  combinatory  logic.  In  Definition  1,  instead  of  postulating  two 
basic combinators S and K, we could postulate an infinite set of basic combinators. 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF  A N   OBJECT  47 
For each ordered triple a, 13,  y  of types there would be a distinct basic combinator 
S,,,,  and for each pair a, 13 there would be a distinct basic K,,;  the axiom-schemes 
for S and  K in  Definition 4 would  be replaced  by  the infinite set of axioms 

The type-variables in  Definition  2 would  not be used  at all. 

It can  be  seen that each combinator  in  this  alternative  system  would  have just 
one type (if  it had  a type at all), in  contrast to the infinite number of types given 
to each combinator  in the former system.  Hence it is easier to give a  set-theoretic 
interpretation  to the  combinators  in  the  alternative  system  than  in  the  original 
system; for  instance  K,,  is  interpreted  as the  function f such  that  (in  the  usual 

function notation) 

C ~ ( X ) ) ( Y )= x 

for each member x of the set or,  and each member y of 8. Thisf changes its argument x 

into a constant-valued  function.  But in the former system, the basic combinator 
K did not represent a particular functionf, but rather the abstract notion of forming 
a constant function  from any object; this is much harder to interpret set-theoreti- 
cally. For instance K can be  applied to itself; [more precisely, (KK) is a combinator 
and it even has a p.t.s.  Fa(Fb(Fcb))] but the set-theoretic meaning of applying K to 
itself is not so clear. Actually the combinators perform their tasks without needing 
any such interpretation (compare the parentheses and punctuation symbols in the 

usual  forms of predicate  calculus),  but if  a  set-theoretic interpretation is  wanted, 
then it seems more convenient to use the system based on an infinity of combinators 

SUB,, K,,  (see  [5], for example). However,  most of the fundamental syntactical properties  of the combinators in 

this alternative system are independent  of the types of the particular S,,,  and  K,, 
involved.  So  for  discussing  these  fundamental  properties  the  original  system  is 
more natural. 

In the alternative system, reduction and equality are defined as in  Definition  11, 
except that (K,,UV)  may be replaced  by  U only when 

r - aU   and  r-/3V, 
and (S,,,UVW)  may  be replaced  by  UW(VW) only when 

I- Fa(F/3y) U  and  I- FaPV  and  t- cr W. 
These  conditions ensure  that  an  ob with  a  type  is  replaced  by  another  with  the 
same type; hence  if  X 2 Y or X= Y,  then  X and  Y both  have  the same type (and 

if  either has a type,  the other does). 

Now it looks as if  it might be possible to find a subsystem of the original system 
based  on  S  and  K to  correspond  to  the  infinite-based  system,  by  using  the  fact 

48  R.  HINDLEY  [December 
that each ob with a type has a unique  p.t.s.  (neglecting trivial variants) and some- 
how making principal type-schemes in the original system do the work  of types in 
the infinite-based system. An  ob in  the finite-based system whose p.t.s.  is a  type a 
can have  only  one  type,  since all  its  types  are  instances  of  a, which  contains  no 
variables. Therefore we could try to set up a correspondence between infinite-based 

obs,  and  finite-based  obs  whose  principal  type-schemes  are  types.  One  way  of 
doing this  is  as  follows (letters  " X",  " Y"  will  denote finite-based  obs here,  and 
"M",  "N",  "P"  infinite-based  obs). 

Firstly,  suppose we  could  prove  

If  I- ax in the system of $1, then  there is  (19) 
an ob Xu such that  I-,ax,  and  Xu h  X. 

Then applying (19) to K and  S would  give us, for each triple a, P,  y  of types, two 

obs  K:#  and S L Y  with the principal  type-schemes, respectively, 

F 4 v a ) ,   F(Fa(FPy))(F(FaP)(Fay)). 
These two type-schemes contain  no variables,  so they  are the only types that  Kz8 

and  S Z Y  could  have.  Hence to each  combinator P (with a  type  6)  in the  infinite- 
based  system,  would  correspond  a  finite-based  ob P T  whose  only  type  was  6; 
P Twould  be  defined thus: 

(SaBy)'  SZj3y,  (KaBIT  (MN)T E (MTN T). 
To complete the embedding of the infinite-based system in the finite-based one, we 

would  only need to show that 

(20)  M  2 N in the infinite-based system iff  M T  2 N T  in the finite-based system. 

Half  of  this  equivalence  follows  from  (19);  in  fact,  to  show  that  M L  N  implies 
M T1NT, it is enough to show that for all M, N, P, 

S,*ByMTNTPT2 MTPT(NTPT),  KZBMTNT2  M T  
in the finite-based system. These are true, because 

K,*BMTNT>=  KMTNT   by (19) 2 

M  by Definition  11, 

and similarly for SZ6y. 

The embedding can also be  seen to be  one-to-one,  using the actual structure of 
KZD and SzBY given by the proof  of (19) in the next section. 

However I do not know if  the converse half  of (20) is true(7). 

( I ) The main use  of  the  alternative system (with each  atom  having a  unique type)  is  to represent certain sets S of functionals (see 

[ 5 ]  for example). We represent each 4 in S with type 
a  by  an  ob [4] with  the  same type,  such that  [4][$]=[+($)]  if  4 has type  Fpy and  $ is  in  S with type j and +($) is in S. One purpose of  the above embedding (suggested by  Curry) is to 

show that every 4 which can be represented as above can also be represented by  a finite-based ob 141'  such that  [4]'[$]'=  [+($)]'. For  this result  we  do not  need  the  converse  half  of  (20); 
we simply define [+I' to be  [4IT. 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF AN  OBJECT  49 

The proof of (19)will be given in the next section (Corollary  3.1). Although it is 
only  used  in  the  above  argument in  the  case  that  a is  a  type,  it  seems easiest  to 
prove it first for the case that  a  contains only variables,  and then  extend  it to the 

other case. This extension  assumes that each basic type is the p.t.s.  of at least one 
ob (not necessarily an ob-atom). 

6.  Every  type-scheme  is a p.t.s.  The main  purpose  of  this  section  is  to  verify 
(19), which  seems  interesting  in  its  own  right,  besides  its  application  in  the 
preceding  section. 

The obs of this section are those of $1-4,not the alternative system in 95. Typevariables denoted  by  distinct letters will  be  assumed  to be  distinct,  and calling  a 

variable  "new"  will  mean  that  it does  not  occur  in  any type-scheme  mentioned 
earlier in the section. 

LEMMA7.  Given any distinct type-variables b, c, d, e, define 

6,  = F(Fde)c  7,  = Fdc 6,  = 

F(Fde)c  rl2 = Fec 6,  = 

Fb(Fde)  7,  = Fbd 6, 
E Fb(Fde)  7~ = Fbe. 

Then there exist  combinators B,,  . . . , B,  such  that for  i=  1 ,  . . . ,4, 

Also  there is a combinator C such  that 

Proof.  Tedious; see the end of the section. 
THEOREM3.  If X  is an  ob whose  atoms are all given  types by  the axioms, and 

for  some a containing only variables, then there exists an  ob Xa such  that 

Xa  2 X  and  +,axa; 
if X  is a combinator, then so  is X,. 

Proof.  First  suppose  that  for  each  a  containing  only  variables  there  exists  a 
combinator  V, such that 

I-,Faa Va. 

Then using the ob A  from Example  5, $4, define 

Xa = S(AI)VaX. 
Then 

Xa  2 AIX(VaX) 2 K(IX)(I(VaX))

c by  (14)and the def.  of A 2 x. 

50  R.  HINDLEY  [December 
Also we  have by  Examples 5 and  3, 

I-,F(Fab)(Fa(Fab))A  I-,Faal. 
Therefore by  Corollary  1.3, substituting a for b, 

I-,Fa(Faa)(A I). 
Now  by the axiom-schemes, 

I-,F(Fa(Fbc))(F(Fab)(Fac))S. 
Hence by  Corollary  1.3, substituting a for b and c, 

(21)  I-,F(Faa)(Faa)(S(Al)). 
Therefore by  Corollary  1.3 again, substituting a for a, 

I-,Faa(S(A1) V,). 
Now by Theorem 1 X has a p.t.s.  a,,  and a is an h.c.i.  of a and a,,  so by Corollary 

1.3,  I-,a(S(A1) VuX). 

It only remains to prove the existence of  V,  for all a ;  this is done by  induction 
on the number  of  occurrences of  F in  a (called the "length"  of a). 

Basis.  If  a is a variable, choose  Va= I. 

Induction  step.  Suppose  a  is  Ffiy  for  some  j3,  y.  We  shall  construct  V,  by 
induction  on the number  of variables common to 8 and y. 

Basis.  Suppose there  are no such variables. By  the  hypothesis of  the  induction 
on a we  have 

k~Fflfivb',  + P F / Y ~ Y ~  

Then using the  C from Lemma 7, define 

va = cv,v,. 
By  Lemma 7, for new variables b and  c, 

I-,F(Fbb)(F(Fcc)(F(Fbc)(Fbc)))C. 
Hence by  Corollary  1.3, substituting j3  for b, 

I-, F(Fcc)(F(FPc)(FPc))(CVb'). 
Now an h.c.i. of  Fcc and  Fry is  Fry, so by Corollary 1.3 again, substituting y for c, 

+,  F(F~Y)(FFY)(CVBVY) 
as required. Notice that if  a variable was common to fi and y, Fyy would not satisfy 
the conditions for  5"  in  Corollary  1.3. 

Induction  step.  Suppose  there  is  a  variable  h  which  occurs  in  both  8 and  y. 
Let g be a new  variable, and define 

8'  = [glhlS. 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF  AN  OBJECT 
Then j3' has one less variable in common with y  than ,6  has,  and 

P  = [hlglP'. 
By  the induction hypothesis there  is a  V such that 

(22)  I-, F(FP'Y)(FPIY) v. 
We shall now construct a  Vasuch that 

I-P  F(FPy)(FISy)va.  
Case  1.  When both P and y  are variables, then /3  =y =h  and we  need  

I-,  F(Fhh)(Fhh) V,. 
Define  V, to be S(AI)  and use  (21). 

Case 2.  When  /? is  compound, say ,BE  F6e,  and h  occurs  in  6.  Then IS'=  FS'e' 
and g occurs in  6'  (but not in y).  Now  FSy  is shorter than a because a is  F(FSe)y, 
so by the hypothesis of the induction on a there exists  Vlsuch that 

I-,  F ( F ~ Y ) ( F ~ Y )Vl. Also by (22), 

I-,F(F(FS'e')y)(F(FS'e')y)  V. 
Now  by  Lemma 7,  where 5, is F(Fde)c for new  variables c,  d, e, 

Define  Va=B1VV,. 

Substituting a',  e',  y  for d, e, c changes  into F(F6'e')y  which is  FP'y.  Hence by 
Corollary  1.3, 

+P  V ) .F(F(F~'Y)(F~'Y))(F(F~~'Y)(FP'Y))(B~  

Now  S=[h/g]6'  and  g  does  not  occur  in  y,  so  F(FGy)(FGy)  is  an  instance  of 

F(F6'y)(F6'y).  Also  every variable  in  the former  type-scheme occurs  in  the latter 
one (since h  occurs in  y).  Therefore Corollary  1.3  can be  applied  to B,V  and  V,, 
with  [*  = 

[ = F(FGy)(FGy), 

7* = F(FPY)(FPY). Thus we obtain 

+P  F(FPY)(FPY)(Bl V V l )  as required. 
Case 3.  When ,l3  is compound, say ,BEFSe,  and h  occurs in  e  but not in  6. Then 
j3'  is  F6e1 and g  occurs  in  e'.  Now  Fey  is  shorter than a, so  by  hypothesis  of  the 

induction  on a there exists  V, such that 

+ p   F(F&Y)(F&Y)v2, Define  Va=B2VV2. 

52  R.  HINDLEY  [December 

By  Lemma 7, where  6, is  F(Fde)c for new variables  d, e, c, 

Therefore  by  Corollary  1.3, substituting 6 ,  e',  y for d, e, c, 
Similarly to Case 2, F(Fq)(Fq) is an instance of  F(FE'Y)(FE'Y)and every variable 
in  the former also occurs in  the latter.  Therefore by  Corollary  1.3, substituting h 

for g,  +,

F(FPY)(FPY)(B2 VV2) as required. 

Case 4.  When y is compound, say y~  F6e, with h occurring in 6. The scheme FP6 
is shorter than ct, so we  have a  V3such that 

+,  F(FP~)(FP~)VS. Also by (22), 

I-,F(F~'(FSe))(F/?'(FSe))V. 
Define  V , = B, VV3. 

By  Lemma 7, where  6,  is  Fb(Fde) for new variables  b, d, e, 

Therefore by Corollary  1.3, substituting P',  6, e  for b, d, e, 

And as in  the previous  cases we  get 
by  substituting h for g  and using Corollary  1.3. 

Case 5.  When y  is  F ~ Eand h  occurs in e but not in  6. Then  FPE is shorter than a, 
so we  can get a  V4such that 

+P  F(FPe)(Ffi&)V4. Define  V , = B4 VV4. 

By  Lemma  7,  where  6,  is  Fb(Fde) for new variables b, d, e, 

As in  Case 4, two applications of Corollary  1.3 give 
completing the proof  of Theorem 3. 

COROLLARY3.1.  The  theorem  remains  true  if  a  contains  basic  types, provided 
that  to each  basic  type  B  corresponds at  least  one  ob 2,(not necessarily an  atom) 
such that  I-,02,. 

19691  53THE  PRINCIPAL  TYPE-SCHEME  OF  AN  OBJECT 

Proof.  It is  enough  to prove the existence of  a  V, for the case when  a contains 
basic types.  Let  8,,  . .., 8,  be the basic  types in  a, and let a,  be  the result  of sub- 
stituting a distinct new type-variable  a, for each Oi  in a. Then a will be the result  of 
substituting  01,  . . ., 8,  for a,,  . . ., a,  in  a,.  By  a  nonprincipal  deduction  obtained 
by  substituting  a,  for a  in  Example  1, $1, 

Now  by  the axiom-scheme  for  K, 

+ F(Faoao)(~an(~ao~o))K, 
so by  Rule (F),  + 

Fan(Faoao)(Kl). 

Repeating this argument, we get 

I- (F,al.  . . a,(Faoao))(K(K(.  - (Kl) .  a))). 

Therefore by Theorem 3  there exists a combinator  U such that 

Now  by the assumption, there exist obs Z,,  . . .,Z,  such that for each i, 
Therefore by Corollary  1.3 used n times, 

so we can choose  V, to be  (UZ, . . .Z,),  completing the proof. 

REMARK.Equality and types. It might at first sight be hoped that if  X2 Y,  then 
X and  Y would  have  the same principal type-scheme. Theorem 3 shows that this 
is false, and the following example  of Curry's, 

shows  that  X does  not  need  to have  a  type  at all,  even  though  Y has types.  All 
that we can say is that if  X B  Y and  X has types, then by (13), the p.t.s.  of  X i s  an 
instance of that of  Y. 

When  X = Y in general, the situation is even less tidy; in fact there exist such X 
and  Y which have  no type-schemes in common at all. For example,  define 

then  by  Theorem 3  there exist combinators I, and I,  such that 

54  R. HINDLEY  [December 
Hence  11=12, but  any  type-scheme  possessed  by  both  I,  and  I,  would  have  to 
have both the forms 

which is  impossible. Proof  of  Lemma  7. 

The  following  is  one  way  of  constructing  the  combinators Bl, . . ., B4, C. 

First  define  D  = [ X I .   KI(Ax). 

Then 

Proof.  By  Example 5, $4,  we  have 
A one-step principal deduction for x  gives us 

d x  I-,d x .  
Now an h.c.i. of d and  Fab is  Fab itself, so by  Corollary 1.4, substituting Fab for d 
and combining the above two deductions gives 

Fab x  I-,  Fa(Fab)(Ax). 
By  the axiom-schemes and  Example 3, 

so by  Corollary  1.3, substituting  FCC  for a, 
An  h.c.i.  of  d  and  Fa(Fab) is  Fa(Fab), so  by  Corollary  1.4, substituting  Fa(Fab) 
for d in  (24),  Fab x 

I-,  Fcc(KI(Ax)). 

Finally Theorem 2  gives the result. Next  define 

E= [x, y ] .  D(Ai(Ky)x)y. Then 

Proof.  First of  all, we  have 

I-,  Fb(Fab)K, 

b y  I-,  b y .  

Therefore by  Corollary  1.5, 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF  A N   OBJECT 
By  the start of  the proof  of  Theorem 3, 
(26)  +,  Fc(Fcc)(Al). 
Therefore by  Corollary 1.4,  substituting Fab  for c, 

b y  I-,F(Fab)(Fab)(AI(Ky)). 
Now  c x  t-,  c x, so by  Corollary 1.4,  substituting Fab  for c, 
(27)   Fab x, b y  r-,  Fab(AI(Ky)x). 

Therefore by  (23) and Corollary 1.5, 

Fab x, b y  r-,  Fcc(D(AI(Ky)x)). 
Now  for a new  variable e, 

eY  t-Pe y .  

To combine the above two deductions by the proof of Theorem 1 we  need an h.c.i. 

of  the two sequences 

( b, Fee)  (e, Feg). 

A suitable h.c.i. is (b, Fbb), so we can substitute b for c and e in the two deductions 

and combine them to get 

Fab  x, b y  +,  b(D(AI(Ky)x)y). 
The result follows by  Corollary 2.1. 

Define  G= [x, y ] .  AI(Ky)x. Then Corollary 2.1  applied to (27) gives us 

Define  H E  [u,x, y, z]. K(Kz)(G(SK)y.u)(E,u(uz)).  Then 
(29)  +,   F(Fac)(F(Fbc)(F(Fbb)(Faa)))H. 

Proof.  By  the proof of  Example 3, $3, 

I-,F(Fbc)(Fbb)(SK). 
Therefore by  Corollary  1.3, substituting Fbc  for a and  Fbb  for b in (28), 

t-,  F(Fbb)(F(Fbc)(Fbb))(G(SK)). 
Now d y  t-,  d y.  Therefore by  Corollary 1.4, substituting Fbb  for d, 

Fbb y  +,  F(Fbc)(Fbb)(G(SK)y). 
Similarly, 

(30)  Fbb y,  Fbc x  t-, Fbb(G(SK)yx). 

Now by  (25), 

t-, F(Fbc)(Fcc)E. 

56  R. HINDLEY  [December 
Therefore by  Corollary  1.4, 

Fbc x  t-,  Fcc(Ex). 

Also  Fac u, a z I-,  c(uz). Therefore by  Corollary  1.5, 

(31)  Fbc x,  Fac u, a z  +,  c(Ex(u.7)). 
Now  for new variables a, d, e, we have 

Therefore by  Corollary  1.5, 

a z  +,  Fda(Kz). 

Also  I-,  Fb(Feb)K. Therefore by  Corollary 1.4, substituting Fda for b, 

a z I-,Fe(Fda)(K(Kz)). 
To combine this with (30) by the proof  of  Theorem 1 we  need an h.c.i.  of 

Fe(Fda),  F(Fbb)g. 
A suitable h.c.i.  is  F(Fbb)(Fda), since all its variables occur in  Fbb or in  Fe(Fda); 
then substituting Fbb for e in the above deduction and combining with (30) gives 

Fbb y, Fbc x, a z I-,  Fda(K(Kz)(G(SK)yx)). 
To combine this with (31) by  the proof  of Theorem 1 we  need an h.c.i.  of 

(Fbc, a, Fda)  and  (Fbc, a, Fcg). 
A suitable h.c.i.  is  obtained by  substituting c for d and a for g; making the same 
substitution in  the above deduction and combining with (31) gives 

Fac u, Fbb y, Fbc x, a z  +,a(K(Kz)(G(SK)yx)(Ex(uz))). 
The result follows by  Corollary 2.1. Now  suppose that  for each i= 1, . . ., 4 there exist two combinators L, and  Mi 

and a type-scheme yt such that 

t-P FSiyiLt,  t-P h.lt~tMt 
and yi contains all the variables in 7,. Then we  can d e h e  

This has the required p.t.s.,  namely 

I-,  F(F5i6i>(F(bi7d(F5i5i))Bt. 
Proof.  By  Corollary  1.3, substituting 6, for a and n for c in (29) and assuming 
that the b therein is a new  variable not occurring in  5, or yi 

19691  57THE  PRINCIPAL  TYPE-SCHEME  OF  AN  OBJECT 
Now an h.c.i.  of Fbyi and FViyi  is Fyiyi,and this satisfies the conditions of Corollary 

1.3  since every variable in 7, is in y,,  so by that corollary, 

Then the result follows by  (28)and Corollary  1.3, substituting FrliTi  for a and Ff ,& 
for b in (28). 

Thus to construct B1, . . .,B,,  it only now remains to construct L, and Mifor  each i. When 

i=  1 : let y1  be  F(Fde)(Fcc) and define 

L,  = [x, y, z] .Al([u].Duz)xy,  
M ,   = Ex, Y I  .E(tzl. Kl(yz)(xz)).  Then 

and 

Proof.  For L,;  by (23),  I-,F(Fde)(Fcc) D. 
Also a u I-,  a u. Therefore by  Corollary  1.4,  substituting  Fde  for a, 

Fde u I-,Fcc(Du). 
Hence by  Corollary  1.5,  c 

z,  Fde  u I-,~ ( D u z ) .  
Therefore by  Theorem 2,  c z  c-,  F(Fde)c([u].Duz). 

Now  by (26), 

I-,Fa(Faa)(AI), 

so by  Corollary  1.4, substituting F(Fde)c for a, 

c z  I-,F(F(Fde)c)(F(Fde)c)(Al([u] .Duz)). 
Then using Corollary  1.4  twice we  get 

F(Fde)c x, Fde y, c z  I-,c(Al([u].Duz)xy) 
and the result for L, follows by  Corollary 2.1. 

For M I ; by  (24) we  have  I-,Fe(Fcc)(KI).Also 

Fde y, d z  I-,e( yz). 
Therefore by Corollary  1.5, 

Fde y, d z  I-,Fcc(Kl(y2)). 
Similarly, by Corollary  1.5 again, 

Fdc x, Fde y, d z  I-,c(Kl(yz)(xz)). 

58  R.  HINDLEY  [December 
Therefore by  Theorem 2, 

Fdc  x ,  Fde p  i-, Fdc([z]. Kl (yz)(xz)). 
Now  by  (25), 

I-,F(Fdc)(Fcc)E, 
so by  Corollary  1.5, 

Fdc  x ,  Fde y  I-,Fcc(E([z]. Kl (y z) (x z)))  
and  the result  for M I  follows by  Corollary 2.1. 

When i=2;  let y2 be  Fe(Fcc) and define 

M 2  = [x,y]. Al( xy) . 
Then  +,  F(F(Fde)c)(Fe(Fcc))L, 

and 

I-,F(Fec)(Fe(Fcc))M2. 

Proof.  For L 2; we  have  

eY   I-, e y ,    
I-,Fe(Fde)K,  

therefore by  Corollary  1.5, 

e y  I-,Fde(Ky). 
Now  a x  

+ , a x ;  

to combine these two deductions by the proof  of Theorem  1 we  need an h.c.i.  of a 

and  F(Fde)g; since  F(Fde)c itself is a suitable h.c.i., substituting  F(Fde)c for a  and 

applying Rule (F) gives us 

Therefore by  (26) and  Corollary  1.5, 
and the  result for L 2  follows by  Corollary 2.1. 

For M 2; we  have 

Fec x, e y  I-,c(xy). 

Therefore by  (26) and  Corollary  1.5, 

Fec x ,  e y  i-, Fcc(Al(xy)) 
and the result follows by  Corollary 2.1. 

When i=  3 ;  let y,  be  Fb(Fdd) and define 

19691  THE  PRINCIPAL  TYPE-SCHEME  OF AN  OBJECT 
Then 

and 

Proof.  For M,,  use the result for M,.  

For L,;by  the proof  of  Example 3, $3,  

I-,F(Fde)(Fdd)(SK). 
Also  Fbc x, b y 

I-,c(xy). 

Tocombine these two deductions by the proof of Theorem 1,  notice that F(Fde)(Fdd) 
is  a suitable h.c.i.  of  F(Fde)(Fdd)and  Fcg,  and substitute  Fde  for c, giving 

The result for L, follows by  Corollary 2.1. When 

i= 4 ;  let y4 be  Fb(Fee) and define 

Then 
and 

I-,F(Fbe)(Fb(Fee))M4. Proof. 
For L4;  Fbc  x, b y  

I-,c(xy) 
and  by  (25), 

I-,F(Fde)(Fee)E. 

By  the  proof  of  Theorem  1,  since  F(Fde)(Fee) is  a  suitable  h.c.i.  of  Fcg  and 

F(Fde)(Fee),we  can substitute  Fde  for c and combine the above two deductions to 

The result follows by  Corollary 2.1. The construction of  B,,  . . . , B4 

is now  complete, and  only  C remains to be found. 
Define  C  = 

[u, x, y, z]. Hxyu(yz). 
Then 

I-,  F(Fbb)(F(Fcc)(F(Fbc)(Fbc)))C. 

Proof. By  (29) Corollary  1.4 used three times, 

Fac x, Fbc y, Fbb u +,  Faa(H,uyu). 
Now  Fde y, d z 

I-,e(yz). 

60  R.  HINDLEY 
To combine these two deductions by  the proof  of Theorem  1 we  need  an h.c.i.  of 
the sequences 

(Fbc,  Faa)  (Fde,  Feg). 

A  suitable  h.c.i.  is  (Fbc,  Fcc),  so  substituting  c  for  e  and  a,  and  b  for  d  and 
combining the deductions gives 

Fcc x,  Fbc y, Fbb u, b z  I-,c(Hxyu(yz)). 
Corollary 2.1  then  gives the result, completing the proof  of Lemma 7. 

REFERENCES 
1.  H. B. Curry and R. Feys,  Combinatory logic, North-Holland, Amsterdam, 1958. 2.  H. B. Curry, Modified basic functionality  in  combinatory  logic, Dialectica  (to appear). 

3.  -,  On  the  definition  of  substitution,  replacement  and  allied  notions  in  an  abstract formal  system, Rev. Philos.  de Louvain 50 (1952), 251-269. 
4.  J.  A.  Robinson,  A  machine-oriented  logic  based  on  the  resolution  principle,  J .   Assoc. Comput. Mach. 12 (1965), 23-41. 

5.  A. Grzegorczyk, Recursive objects in allfinite types, Fund.  Math. 54 (1964), 73-93. 