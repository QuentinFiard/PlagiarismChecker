

FEEDBACK SET PROBLEMS
PAOLA FESTA, PANOS M. PARDALOS, AND MAURICIO G.C. RESENDE
ABSTRACT. This paper is a survey of feedback set problems (FSP). FSP originated from
applications in combinatorial circuit design, but have found their way into numerous other
applications, such as deadlock prevention in operating systems, constraint satisfaction and
Bayesian inference in artificial intelligence, and graph theory. Directed and undirected
feedback vertex set problems are considered, including polynomially solvable cases, approximation algorithms, exact algorithms, and practical heuristics. The relationship between the feedback vertex set and feedback arc set problems is examined and the state of
the art of feedback arc set problems is surveyed. Applications of feedback set problems
are described. Finally, future directions in feedback set problem research are mapped out.

1. INTRODUCTION
Not long ago, there appeared to be a consensus in the literature that feedback set prob-lems, which originated from the area of combinational circuit design, were the least understood among all the classical combinatorial optimization problems due to the lack ofpositive results in efficient exact and approximating algorithms. This picture has been
totally changed in recent years. Dramatic progress has occurred in developing approxima-tion algorithms with provable performance; new bounds have been established one after
the other and it is probably fair to say that feedback set problems are becoming among themost exciting frontend problems in combinatorial optimization.

The most general feedback set problem consists in finding a minimum-weight (or min-imum cardinality) set of vertices (arcs) that meets all cycles in a collection C of cycles in a
graph \Gamma  G\Delta  w\Theta  , where w is a nonnegative function defined on the set of vertices V \Gamma  G\Theta  (on theset of edges E \Gamma  G\Theta  ). This kind of problem is also known as the hitting cycle problem, since
one must hit every cycle in C. It generalizes a number of problems, including the minimum
feedback vertex (arc) set problem in both directed and undirected graphs, the subset mini-mum feedback vertex (arc) set problem and the graph bipartization problem, in which one

must remove a minimum-weight set of vertices so that the remaining graph is bipartite. Infact, if

C is the set of all cycles in G, then the hitting cycle problem is equivalent to theproblem of finding the minimum feedback vertex (arc) set in a graph. If we are given a

set of special vertices and C is the set of all cycles of an undirected graph G that containssome special vertex, then we have the subset feedback vertex (arc) set problem and, finally, if C contains all odd cycles of G, then we have the graph bipartization problem. Allthese problems are also special cases of

vertex (arc) deletion problems, where one seeksa minimum-weight (or minimum cardinality) set of vertices (arcs) whose deletion gives a

graph satisfying a given property.There are different versions of

feedback set problems, depending on whether the graphis directed or undirected and/or the vertices (arcs) are weighted or unweighted. Yannakakis

[88] has given a general NP-hardness proof for almost all vertex and arc deletion problems

Date: February 18, 1999, Revised April 2, 1999.
AT&T Labs Research Technical Report: 99.2.2.

1

2 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
restricted to planar graphs. These results apply to the planar bipartization problem, theplanar (directed, undirected, or subset) feedback vertex set problems, already proved to be
NP-hard [45, 32]. Furthermore, it is NP-complete for planar graphs with no indegree oroutdegree exceeding three [45], general graphs with no indegree or outdegree exceeding
two [45], and edge-directed graphs [45].

2. NOTATION AND GRAPH REPRESENTATION
Throughout this chapter, we use the following notation and definitions.A

graph G \Lambda  \Gamma  V\Delta  E \Theta  consists of a finite set of vertices V \Gamma  G\Theta  , and a set of arcs E \Gamma  G\Theta \Pi \Xi V \Gamma  G\Theta \Upsilon \Sigma  V \Gamma  G\Theta  . An arc (or edge) e \Lambda  \Gamma  v

1\Delta  v2 \Theta  of a directed graph (digraph) G \Lambda  \Gamma  V\Delta  E \Theta  is anincoming arc to v
2 and an outgoing arc from v1 and it is incident to both v1 and v2.If G is undirected, then e is said only incident to v

1 and v2.For each vertex i \Phi  V \Gamma  G\Theta  , let in\Gamma  i\Theta  and out \Gamma  i\Theta  denote the set of incoming and outgoing

edges of i, respectively. They are defined only in case of a digraph G. If G is undirected, wewill take into account only the degree \Delta 

G\Gamma  i\Theta  of i as the number of edges that are incident toi in G. \Delta \Gamma  G\Theta  denotes the maximum degree among all vertices of a graph G and it is called

the graph degree. A vertex v \Phi  G is called an endpoint if it has degree one, a linkpoint if ithas degree two, while a vertex having degree higher than two is called a branchpoint.

A path P in G connecting vertex u to vertex v is a sequence of arcs e1\Delta \Omega \Psi \Omega \Psi ff\Psi fi\Delta  er in E \Gamma  G\Theta  ,such that e

i \Lambda  \Gamma  vi\Delta  vifl 1 \Theta  , i \Lambda  1\Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  r with v1 \Lambda  u and vrfl 1 \Lambda  v. A cycle C in G is a pathC \Lambda  \Gamma  v
1\Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  vr \Theta  , with v1 \Lambda  vr.A subgraph Gffli\Lambda  \Gamma  Vfflj\Delta  Effl`\Theta  of G \Lambda  \Gamma  V\Delta  E \Theta  induced by Vffl is a graph such that Effli\Lambda  E ' \Gamma  V fflfi\Sigma 

V ffl`\Theta  . A graph G is said to be a singleton, if ^ V \Gamma  G\Theta *^_\Lambda  1. Any graph G can be partitionedinto isolated connected components G

1\Delta  G2\Delta \Omega \Psi ff\Psi \Omega \Psi ffi\Delta  Gk and the partition is unique. Similarly,every feedback vertex set Vffl of G can be partitioned into feedback vertex sets F

1\Delta  F2\Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  Fksuch that F
i is a feedback vertex set of Gi. Therefore, following the additive property anddenoting by u\Gamma  G\Delta  w\Theta  the weight of a minimum feedback vertex (arc) set for \Gamma  G\Delta  w\Theta  , we

have:

u\Gamma  G\Delta  w\Theta *\Lambda 

ka*

i, 1 u\Gamma  Gi\Delta  w\Theta *ss

3. THE FEEDBACK VERTEX SET PROBLEM
Most of the known results on vertex deletion problems deal with the feedback vertex setproblem, that can be easily understood by the following deadlock prevention example in

computer systems. Consider an operating system which schedules different processes withrequests on different resources, which they need to use exclusively before being released
by the process. A directed graph modeling these resource requirements has a node i foreach process

i with directed arc e\Gamma  i\Delta  j\Theta  implying that process i requests a resource alreadyallocated to process j. Therefore, if there is a directed cycle in such a graph, a deadlock

occurs and every process in the cycle will wait for the requested resource and will neverrelease the resources already allocated to it. To break such cycles, one can remove some
processes from the graph and put them in a waiting queue. It is clear that we want tominimize the number of processes removed.

Formally, the feedback vertex set problem can be described as follows. Let G \Lambda  \Gamma  V\Delta  E \Theta be a graph and let

w : V \Gamma  G\Theta oeae Rfl be a weight function defined on the vertices of G. A
feedback vertex set of G is a subset of vertices Vfflo/\Xi  V \Gamma  G\Theta  such that each cycle in G contains
at least one vertex in Vffl . In other words, a feedback vertex set Vffl is a set of vertices of G

FEEDBACK SET PROBLEMS 3
such that by removing Vffl from G along with all the edges incident to Vffl , results in a forest.The weight of a feedback vertex set is the sum of the weights of its vertices, and a

minimumfeedback vertex set of a weighted graph (G,w) is a feedback vertex set of G of minimum

weight. The weight of a minimum feedback vertex set will be denoted by u\Gamma  G\Delta  w\Theta  . The
minimum weighted feedback vertex set problem (MWFVS) is to find a minimum feedbackvertex set of a given weighted graph \Gamma  G\Delta  w\Theta  . The special case of identical weights is called

the unweighted feedback vertex set problem (UFVS).
3.1. Mathematical model of the feedback vertex set problem. The feedback vertex setproblem is a specific type of set covering problem, as the objective is to cover all cycles with a minimum cost collection of vertices. A simple polynomial reduction proce-dure from the vertex cover problem to the feedback vertex set problem is described in
[2]. As a covering-type problem, it admits an integer zero-one programming formulation. Given a feedback vertex set Vffl for a graph \Gamma  G\Delta  w\Theta  , G \Lambda  \Gamma  V\Delta  E \Theta  , and a set of weights
w \Lambda OEAE w\Gamma  v\Theta ffO/ v V ! G" , let x \Lambda #AE xvO/ v V ! G" be a binary vector such that xv \Lambda  1 if v \Phi  Vffl , and
xv \Lambda  0 otherwise. Let C be the set of cycles in \Gamma  G\Delta  w\Theta  . The problem of finding the mini-mum feedback vertex set of G can be formulated as an integer programming problem as

follows:

(MFVS)

min a*

v V ! G" w\Gamma  v\Theta  x

v

s.t. a*

v V ! \Gamma " x

v $ 1 % \Gamma  \Phi  C

0 & xv & 1 integer, v \Phi  V \Gamma  G\Theta 'ss
If one denotes by Cv the set of cycles passing through vertex v \Phi  V \Gamma  G\Theta  , then the dual of thelinear programming relaxation of (MFVS), is a packing problem:

(DMFVS)

max a*

\Gamma  C y\Gamma s.t. a*

\Gamma  Cv y\Gamma  & w\Gamma  v\Theta (% v \Phi  V \Gamma  G\Theta y
\Gamma  $ 0 % \Gamma  \Phi  Css

3.2. Polynomially solvable cases. As it is unlikely that there exist polynomial time al-gorithms to solve NP-hard problems, to obtain polynomial time algorithms one has to

restrict these problems to special classes of graphs. Perfect graphs are a class of graphs onwhich polynomial time algorithms have been found for a variety of problems. Because the
subclasses of perfect graphs form hierarchies, one problem of interest is to determine thelargest class of graphs on which such problems remain polynomially solvable. Therefore,
given the NP-completeness of the feedback vertex set problem, one approach is to identifythose specially structured problems which can be solved in polynomial time. Research
along this line started with the pioneering work of Shamir [76], in which a linear timealgorithm was proposed to find a feedback vertex set for a reducible flow graph. Wang,
Lloyd, and Soffa [87] developed an O\Gamma  ^ E \Gamma  G\Theta *^i\Psi )^ V \Gamma  G\Theta *^ 2 \Theta  algorithm for finding a feedbackvertex set. The class of graphs known as

cyclically reducible graphs, which is shown tobe unrelated to the class of quasi-reducible graphs. Although the exact algorithm proposed

by Smith and Walford [80] has exponential running time in general, it returns an optimalsolution in polynomial time for certain types of graphs. A variant of the algorithm, called
the Smith-Walford-one algorithm, selects only candidate sets F of size one and runs in
O\Gamma  ^ E \Gamma  G\Theta *^)\Psi i^ V \Gamma  G\Theta ff^ 2 \Theta  time. The class of graphs for which it finds a feedback vertex set iscalled Smith-Walford one-reducible.

4 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE

In the following, consider a set of operations called contraction operations. These op-erations contract the graph while preserving all the important properties relevant to the
minimum feedback vertex set. An important property associated with these operations isthe so-called Church-Rosser property which implies that the order by which a sequence of
operations is performed will not affect the final graph. The basic contraction operationsare as follows:

Reduction Procedures
Let \Gamma  G\Delta  w\Theta  be a vertex (arc) weighted graph and let Vffl be a feedback vertex (arc) set ofG, then
IN0(i) - OUT0(i):

if ^ out \Gamma  i\Theta *^*\Lambda  0 or ^ in\Gamma  i\Theta *^)\Lambda  0, then i \Phi  Vffl .reduction: V \Gamma  G\Theta +\Lambda  V \Gamma  G\Theta -,.AE iO/ ;

E \Gamma  G\Theta +\Lambda  E \Gamma  G\Theta -,.AE \Gamma  x\Delta  y\Theta *^ x \Lambda  i or y \Lambda  iO/ .LOOP(i):
if \Gamma  i\Delta  i\Theta /\Phi  E \Gamma  G\Theta  , then i \Phi  Vffl .

reduction: V \Gamma  G\Theta +\Lambda  V \Gamma  G\Theta -,.AE iO/ ;E \Gamma  G\Theta +\Lambda  E \Gamma  G\Theta -,.AE \Gamma  i\Delta  j\Theta  or \Gamma  j\Delta  i\Theta 0% j \Phi  V \Gamma  G\Theta *O/ .

IN1(i):if ^

in\Gamma  i\Theta *^i\Lambda  1 and \Gamma  j\Delta  i\Theta 1\Phi  E \Gamma  G\Theta  ,reduction: V \Gamma  G\Theta +\Lambda  V \Gamma  G\Theta -,.AE iO/ ;

out \Gamma  j\Theta -\Lambda  out \Gamma  j\Theta -2 out \Gamma  i\Theta  ;E \Gamma  G\Theta +\Lambda  E \Gamma  G\Theta -23AE \Gamma  j\Delta  k\Theta *^ k \Phi  out \Gamma  i\Theta *O/.,.AE \Gamma  i\Delta  k\Theta ff^ k \Phi  out \Gamma  i\Theta ffO/ .
OUT1(i):if ^

out \Gamma  i\Theta *^*\Lambda  1 and \Gamma  i\Delta  j\Theta 1\Phi  E \Gamma  G\Theta reduction: V \Gamma  G\Theta +\Lambda  V \Gamma  G\Theta -,.AE iO/ ;

in\Gamma  i\Theta +\Lambda  in\Gamma  i\Theta o/2 in\Gamma  j\Theta  ;
E \Gamma  G\Theta +\Lambda  E \Gamma  G\Theta -23AE \Gamma  k\Delta  j\Theta *^ k \Phi  in\Gamma  i\Theta *O/.,.AE \Gamma  k\Delta  i\Theta ff^ k \Phi  in\Gamma  i\Theta *O/fiss

Levy and Lowe [55] proposed these operations and proved the following properties.
Definition 1. Let G \Lambda  \Gamma  V\Delta  E \Theta  be a directed graph, and let G45\Lambda  \Gamma  V46\Delta  E47\Theta  be a directed graphresulting from G by repeated applications of the contraction operations until no further

contraction is possible. G4 is called a contracted graph of G.
Theorem 1. If G contains no parallel edges, then the contracted graph G4 of G is unique.
Theorem 2. Let G \Lambda  \Gamma  V\Delta  E \Theta  be a directed graph. (1) If G is contracted into G4 by any of
the operations IN0\Gamma  v\Theta  , OUT0\Gamma  v\Theta  , IN1\Gamma  v\Theta  , or OUT1\Gamma  v\Theta  , and if S4 is a minimum feedbackvertex set of G4 , then S4 is a minimum feedback vertex set of G. (2) If G is contracted into

G4 by LOOP\Gamma  v\Theta  and S4 is a minimum cutset of G4 , then S \Lambda  S4528AE vO/ is a minimum feedbackvertex set of G.

It should be noted that for a directed graph with every node having at least two in-edges and two out-edges, the set of contraction rules does not apply and all the above
mentioned algorithms will fail to find an optimal feedback vertex set. In other words,this class of algorithms is only optimal for specially structured and very sparse graphs.
Nevertheless, this line of work has significant impact in the study of feedback vertex setfor the following two reasons. First, a class of graphs of increasing size is computed,

FEEDBACK SET PROBLEMS 5
where the feedback vertex set of each graph can be found exactly. Second, most proposedheuristics and approximation algorithms use the reduction schemes discussed above.

3.2.1. The feedback vertex set problem on chordal, permutation, and interval graphs. An-other line of research on polynomially solvable cases focuses on other special classes,
including chordal and interval graphs, permutation graphs, convex bipartite graphs, cocomparability graphs and on meshes and toroidal meshes, butterflies, and toroidal butterflies.The feedback vertex set on chordal and interval graphs can be viewed as a special instance of the generalized clique cover problem, which is solved in polynomial time onchordal graphs [21, 89] and interval graphs [63]. For permutation graphs, an algorithm
due to Brandst"adt and Kratsch [7] was improved by Brandst"adt [8] to run in O\Gamma  ^ V \Gamma  G\Theta ff^ 6 \Theta time. More recently, Liang [57] presented an

O\Gamma  ^ V \Gamma  G\Theta ff^)\Psi )^ E \Gamma  G\Theta *^9\Theta  algorithm for permuta-tion graphs that can be easily extended to trapezoid graphs while keeping the same time

complexity. A graph G \Lambda  \Gamma  V\Delta  E \Theta  is called trapezoid if and only if it is the intersection graphof some trapezoid diagram, where a

trapezoid diagram T consists of two parallel linescalled top and bottom lines and some trapezoids, each having two corner points on the top

line and two on the bottom line. The intersection graph of a trapezoid diagram is the graphwhose vertices have a one-to-one correspondence with the trapezoids in T and two vertices
in G are adjacent if and only if the corresponding trapezoids in T intersect, i.e. their areasoverlap. Both permutation and interval graphs are special trapezoid graphs.

On interval graphs, Lu and Tang [17] developed a linear-time algorithm to solve theminimum weighted feedback vertex set problem using dynamic programming. Interval
graphs are special graphs that admit a so called interval representation F. An intervalgraph corresponds to a set of intervals (interval representation) in the real line. Each interval corresponds to a vertex and there is an edge between two vertices if and only ifthe corresponding intervals intersect. Such a representation of an interval graph can be
obtained in O\Gamma  ^ V \Gamma  G\Theta ff^):;^ E \Gamma  G\Theta *^9\Theta  time, assuming sorted endpoints. Lu and Tang observed
that a subset Vffl of V \Gamma  G\Theta  is a feedback vertex set of G if V \Gamma  G\Theta !, Vffl is a cycle-free vertex set (CVS) of G. When G is weighted, V ffl is a minimum feedback vertex set of G if
and only if V \Gamma  G\Theta !, Vffl is a maximum weighted CVS of G. Consequently, given an inter-val representation

I of a weighted interval graph G with sorted endpoints, and assumingwithout loss of generality, that no two intervals share a common endpoint, the linear-time

algorithm of Lu and Tang finds the maximum weighted CVS of G to solve the minimumweighted feedback vertex set problem of

G. At the same time, it also solves the maxi-mum weighted 2-colorable subgraph problem and the maximum weighted 2-independent

set problem, which are equivalent on chordal graphs.
3.2.2. The feedback vertex set problem on cocomparability graphs. Coorg and Rangan[20] present an

O\Gamma  ^ V \Gamma  G\Theta *^ 4 \Theta  time and O\Gamma  ^ V \Gamma  G\Theta *^ 4 \Theta  space exact algorithm for cocomparabilitygraphs, which are a superclass of permutation graphs. In more detail, a graph

G\Gamma  V\Delta  E \Theta is said to be a cocomparability graph if and only if its complement graph is transitively

orientable, i.e. its edges can be oriented to get a directed graph ~G \Lambda  \Gamma  V\Delta  ~E \Theta  such that\Gamma 

i\Delta  j\Theta *\Delta  \Gamma  j\Delta  k\Theta 1\Phi  ~E \Lambda ?= \Gamma  i\Delta  k\Theta /\Phi  ~E ss
The authors proved that to solve the minimum feedback vertex set problem on cocompara-bility graphs is equivalent to finding a minimum cycle-free set of the given graph. The key

idea is that a cycle-free subgraph of G is a collection of trees, because it does not containany cycle. Therefore, a

cycle-free subgraph is bipartite and admits a planar embedding,

6 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
i.e. a mapping of its n vertices to a set of n points on the plane and a mapping from its medges to a set of

m line segments on the plane such that:?

there exists a line segment @ p1\Delta  p2A if and only if \Gamma  v1\Delta  v2 \Theta B\Phi  E \Gamma  G\Theta  , where v1 and v2 aremapped to p

1 and p2, respectively;? any two line segments @ p

1\Delta  p2A and @ p3\Delta  p4A intersect only at their endpoints.
A natural way to embed a cycle-free subgraph on the plane is the canonical ordering of
the vertices of the transitively oriented graph Gffl ffl obtained from G through its complement
Gfflffi\Lambda  \Gamma  Vfflj\Delta  Effl7\Theta  which can be done in O\Gamma  n2 \Theta  time using topological sort. An ordering of the
vertices of Gffl ffl is canonical if and only if\Gamma 

i\Delta  j\Theta \Upsilon \Phi  E \Gamma  Gffl ffl \Theta -\Lambda ?= i C jss
For Gffl ffl such an ordering always exists, because Gffl ffl is a directed acyclic graph. Once a pla-nar embedding is obtained, the algorithm of Coorg and Rangan conceptually triangulates

the planar graph so that the cycle-free subgraph can be considered as a set of triangles,each having three vertices of G. In more detail, the cycle-free subgraph is incrementally
built, starting from the empty set and adding one triangle at time. At each step it main-tains the incremented subgraph cycle-free. The authors prove that the cycle-free property
can be maintained by checking only the last inserted triangle. They model this process byconstructing a directed graph

H, whose vertices correspond to the triangles and an edge\Gamma  u\Delta  v\Theta  exists whenever the algorithm can safely add triangle v to the set immediately after

u has been added. A directed path of length k in H corresponds to a cycle-free subgraph of
G having k : 3 vertices and the minimum feedback vertex set problem is reduced to thatof finding the longest path in a directed graph, which can be easily solved. In fact, to find

the longest path in H takes time proportional to the number of the edges in H, by using,for example, depth-first search. Since there are at most

O\Gamma  n\Theta  neighbors for each vertex in
H, the number of edges in H is bounded by O\Gamma  n4 \Theta  and since to construct H requires O\Gamma  n4\Theta time, the complexity of the algorithm due to Coorg and Rangan remains

O\Gamma  n4\Theta  .More recently, Liang and Chang [13] developed a polynomial time algorithm, that by

exploring the structural properties of a cocomparability graph uses dynamic programmingto get a minimum feedback vertex set in

O\Gamma  ^ V \Gamma  G\Theta  2^+^ E \Gamma  G\Theta ff^D\Theta  time.

3.2.3. The feedback vertex set problem on meshes and butterflies. A recent line of researchon polynomially solvable cases focuses on special undirected graphs having bounded degree and that are widely used as connection networks, namely meshes and toroidal meshes,
butterflies and toroidal butterflies.

Definition 2. An m \Sigma  n mesh is a graph MmE n \Lambda  \Gamma  V\Delta  E \Theta  , where V \Lambda FAE vij ^ 0 & i & m G 1\Delta  0 &

j & n G 1O/ and E \Lambda HAE \Gamma  vi j\Delta  vi! jfl 1" \Theta '\Delta  \Gamma  vij\Delta  v! ifl 1" j \Theta ff^ i \Lambda  0\Delta \Omega \Psi ff\Psi \Omega \Psi ffi\Delta  n G 2\Delta  j \Lambda  0\Delta I\Psi ff\Psi \Omega \Psi ffi\Delta  m G 2O/ .

Definition 3. A toroidal m \Sigma  n mesh is a graph T Mmn \Lambda  \Gamma  V\Delta  E \Theta  obtained from a meshM!

mfl 1"*! nfl 1" identifying the vertices v0 j with vm j, 0 & j & n and v j0 with v jn, 0 & j & m.

In a mesh MmE n, Luccio [61] obtained a trivial lower bound on the size of the minimum
feedback vertex set Vffl equal to \Gamma \Omega \Gamma  m G 1\Theta  \Gamma  n G 1\Theta *: 1\Theta 'J 4, by observing that every submesh
M22 is a cycle of 4 vertices to be broken and one vertex of Vffl breaks at most 4 such cycles.
Luccio proved the stronger lower bounds ^ V ffl6^ $ \Gamma \Omega \Gamma  m G 1\Theta  \Gamma  n G 1\Theta fi: 1\Theta 'J 3 in a mesh Mmn and\Gamma  mn : 2\Theta *J 3 in a toroidal mesh T M

mn. In [61], upper bounds for meshes of size \Gamma  2r : 1\Theta \Upsilon \Sigma \Gamma  2r : 1\Theta  and toroidal meshes T M
2r2r are derived. These bounds either match the lowerbounds or are very close to them. The proofs of the upper bounds are constructive, in the

sense that an algorithm that derives them also finds a minimum feedback vertex set Vffl for

FEEDBACK SET PROBLEMS 7
the given graph, simply by investigating their topological characteristics. In more detail, in
the case of meshes M! 2rfl 1"*! 2rfl 1" , V ffl is formed by patterns of vertices lying on the diagonal
lines that constitute the boundaries of diamonds of varying sizes 2 j : 1, 0 & j & r G 2, each
having exactly one vertex not belonging to V ffl . By applying this algorithm to M! nfl 1"*! nK 1"

and removing the \Gamma  n : 1\Theta  th row and the \Gamma  r : 1\Theta  th column, on which no vertex of Vffl lies,one can obtain a minimum feedback vertex set for

T M2r2r . This algorithm can be stillapplied to arbitrary values of m and n. Actually, Luccio showed that to obtain a minimum

feedback vertex set for a mesh Mmn, 2rK 1 : 1 C m & 2r : 1, 2sK 1 : 1 C n & 2s : 1, r\Delta  s $ 0,
t \Lambda  maxAE r\Delta  sO/ , it is enough to apply the proposed algorithm to build Vffl for M! 2tfl 1"*! 2tfl 1" ,

and then the required minimum feedback vertex set for Mmn is the portion of Vffl lying in
the upper left submesh Mmn. To get a minimum feedback vertex set Vffl ffl for T Mmn it ispossible to do the same, with the only difference that now additional vertices are needed

to be inserted along the external boundary of V ffl ffl in order to break possible cycles betweenthe first and the last row and the first and the last column, thus increasing the upper bound
by an additional linear term.For

butterfly and toroidal butterfly graphs, Luccio [61] found upper bounds to the sizeof a minimum feedback vertex set.

Definition 4. A k-dimensional butterfly is a graph Bk \Lambda  \Gamma  V\Delta  E \Theta  having \Gamma  k : 1\Theta  2k vertices
organized in k : 1 levels of 2k vertices each. Vertex vij denotes the jth vertex at level i,
0 & i & k, 0 & j & 2k G 1, and for i L 0 it is connected with the two vertices v! iK 1" j andv!

iK 1" ji, where ji is the integer whose binary representation differs from that of j in onlythe ith least significant bit.

Definition 5. A toroidal butterfly T Bk is a k-dimensional butterfly in which the kth level
coincides with level 0.

In a k-dimensional butterfly, the vertices in every two adjacent levels form 2kK 1 cycleswith two vertices in the upper level and two in the lower level. The lower bound of the size

on a minimum feedback vertex set _V for this graph is

^ _V ^ $ 2kK 1 M \Gamma  k : 1\Theta 2 N \Delta 
because each vertex at level i, 1 & i & k G 1, belongs to exactly two cycles: one betweenlevel

i G 1 and i and one between i and i : 1. The upper bound is

^ _V ^ffi& \Gamma  2kK 2 : 2kK 4 : 2kK 5 : 1\Theta  k\Delta 
found by applying an algorithm that for each vertex v! iK 1" j adds to _V either vij or vijiconnected with v!

iK 1" j at the next level.Similar results to those obtained for butterflies B

k can also be obtained for toroidalbutterflies T B
k. In fact, T Bk has k2k vertices and the vertices belonging to the \Gamma  k G 1\Theta  thlevel are connected to those of level 0. Therefore, such kinds of graphs contain 2k cycles

wrapped around each column. To break all of them, it is necessary to remove at least

maxAE \Gamma  2kK 1\Theta  M k : 12 N \Delta  2k O/
vertices, where 2k is significant only for k & 2. To find a minimum feedback vertex set _V ,the same algorithm as for

Bk can be applied, by including in _V all vertices belonging to the\Gamma 
k G 1\Theta  th level.

8 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
3.2.4. The feedback vertex set problem on cube connected cycle networks. Luccio [61]solved the minimum feedback vertex set problem also for another important bounded
degree network, the k-dimensional cube connected cycle (CCCk), that has k levels of 2kvertices each. The only difference between

T Bk and CCCk is that any vertex vij is now
connected with v! iK 1" j and vi! jfl 1" , 0 & i & k G 1, 0 & j & 2k G 1, and the operations on
i are computed modulo k. Observing that the vertices in every two adjacent levels form2kK 2 cycles of length 8 (4 in the upper level and 4 in the lower level) and that each vertex

belongs exactly to two such cycles, at least 2kK 2 M \Gamma  k : 1\Theta  2N vertices have to be removed inorder to break all such cycles. Moreover, because

CCCk also contains 2k cycles wrappedaround each column, a lower bound on the minimum number of vertices to be removed is

given by

maxAE 2k\Delta  2kK 2 M \Gamma  k : 1\Theta 2 N O/ffi\Delta 

where 2k is insignificant for k & 6. The upper bound found by Luccio is 2kK 1 M ! kfl 1"2 N ,obtained by building a minimum feedback vertex set using a variant of the algorithm that
finds a minimum feedback vertex set for T Bk. In this case, for each level i \Lambda  1\Delta I\Psi ff\Psi ff\Psi ffi\Delta  k,incrementing

i by 2, 2kK 1 vertices are inserted in the feedback set to break all cycles with avertex at the lower level i G 1. The remaining vertices belonging to level k G 1 are inserted

in the feedback set.
3.2.5. The feedback vertex set problem on convex bipartite graphs. Liang and Chang [13]solved in polynomial time the feedback vertex set problem in a special kind of bipartite

graph, called the convex bipartite graph, whose definition is given next.
Definition 6. A bipartite graph G \Lambda  \Gamma  A\Delta  B\Delta  E \Theta  with two distinct sets of vertices A and B is
convex if there exists a total ordering on A such that for any vertex b \Phi  B the set of vertices
of A connected to b forms an interval in this ordering.

Liang and Chang [13] proposed a polynomial time algorithm having time complexityO\Gamma  ^ A^ 3 :O^ A^ 2^ E ^9\Theta  . Their algorithm assumes a convex bipartite graph G \Lambda  \Gamma  A\Delta  B\Delta  E \Theta  is given

by specifying the total ordering on A \Lambda PAE a1\Delta  a2\Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  anO/ with a1 C a2 CQ\Psi ff\Psi ff\Psi RC an. Thealgorithm is based on dynamic programming techniques and the special structure of the
graph.
3.3. Approximation algorithms and provable bounds. The feedback vertex (arc) setproblem has found applications in many fields, including deadlock prevention [87], program verification [76], and Bayesian inference [2]. Therefore, it is natural that in the pastfew years there have been intensive efforts on approximation algorithms for these kinds of
problems, for the cases that are not known to be polynomially solvable.To quantify the quality of an approximation, several criteria have been established and
certain classes of approximation schemes have been defined. The family of approximationalgorithms that guarantees the best approximate solution is the so called

fully polynomialapproximation scheme (FAS). It is a family of algorithms AE A

e O/ that for a maximizationproblem finds an approximate solution at least \Gamma  1 G e\Theta  times the optimal solution in time

polynomial in the length of the input and in 1J e. In case of a minimization problem, the al-gorithm is guaranteed to find an approximate solution at least \Gamma  1 : e\Theta  times the value of the
optimal solution. The next family of "good" approximation algorithms is the polynomialapproximation scheme (PAS). It contains approximation algorithms that produce a solution
at least \Gamma  1 : e\Theta  times the optimal solution in time polynomial in the length of the input forfixed e.

FEEDBACK SET PROBLEMS 9
When an approximation algorithm does not have any of the aforementioned characteris-tics, it can still be "evaluated" as well. In fact, to test the quality of the approximate solution
there are special quantities called performance ratios, defined as follows. Suppose A is anapproximation algorithm that finds a feedback vertex set

VA (arc set EA) for any given ver-tex (arc) weighted graph \Gamma 
G\Delta  w\Theta  . Denoting the sum of weights of vertices (arcs) in VA (EA)by w\Gamma  V

A\Theta  and the weight of a minimum feedback vertex (arc) set for \Gamma  G\Delta  w\Theta  by u\Gamma  G\Delta  w\Theta  ,then the performance ratio of A for \Gamma  G\Delta  w\Theta  is defined by

RA \Gamma  G\Delta  w\Theta +\Lambda  w\Gamma  VA \Theta 'J u\Gamma  G\Delta  w\Theta 'ss
When u\Gamma  G\Delta  w\Theta +\Lambda  0, RA\Gamma  G\Delta  w\Theta +\Lambda  1 if w\Gamma  VA \Theta -\Lambda  0 and RA \Gamma  G\Delta  w\Theta *\Lambda  e^ if w\Gamma  VA \Theta SL 0.In other words, the performance ratio of an approximation algorithm is the worst-case

ratio between the weight of the algorithm's output and the weight of an optimal solution.The performance ratio r

A \Gamma  n\Delta  w\Theta  of A for w is the supremum of RA\Gamma  G\Delta  w\Theta  over all graphsG with n vertices and for the same weight function w. If w is the constant function (w\Gamma  i\Theta -\Lambda 

1), rA \Gamma  n\Delta  1\Theta  is called the unweighted performance ratio of A. The performance ratio rA \Gamma  n\Theta of A is the supremum of r

A \Gamma  n\Delta  w\Theta  over all weight functions w.Many approximation algorithms for feedback set problems have been proposed in the

last two decades. We consider approximation algorithms for undirected and directed graphsnext.

3.3.1. Undirected graphs. A 2 log2 ^ V \Gamma  G\Theta ff^ -approximation algorithm for the unweightedminimum feedback vertex set problem on undirected graphs is contained in a lemma due
to Erd"os and Posa [26]. This result was improved by Monien and Schulz [64] to obtain a
performance ratio of O\Gamma  log ^ V \Gamma  G\Theta ff^9\Theta  .Bar-Yeruda, Geiger, Naor, and Roth [2] gave an approximation algorithm for the unweighted undirected case having ratio less than or equal to 4 and two approximation al-gorithms for the weighted undirected case having ratios 4 log

2 ^ V \Gamma  G\Theta *^ and 2\Delta 2\Gamma  G\Theta  , respec-tively. A slight generalization of the unweighted case was used to reduce the complexity

of a Bayesian inference procedure as will be discussed in Section 5. In their algorithm, itis assumed that the set of vertices

V \Gamma  G\Theta  is partitioned into a nonempty set A\Gamma  G\Theta  of allowedvertices and a possibly empty set B\Gamma  G\Theta  of blackout vertices. For a valid graph G a feedback

vertex set exists if and only if every cycle in G contains at least one allowed vertex. Notethat if

B\Gamma  G\Theta -\Lambda  /0, then the problem reduces to the classical unweighted feedback vertex set.Before giving a description of their algorithm, the following definitions are needed.

Definition 7. A 2-3-subgraph of a valid graph G is a subgraph H of G such that the degree
in H of every vertex in V \Gamma  G\Theta  is either 2 or 3. A maximal 2-3-subgraph of G is a 2-3-
subgraph of G that is not a subgraph of any other 2-3-subgraph.

A maximal 2-3-subgraph of G always exists if G is a valid graph that is not a forest.
Definition 8. A linkpoint v in a 2-3-subgraph H is said to be a critical linkpoint if it is an
allowed vertex and there is a cycle \Gamma  in G such that

V \Gamma  \Gamma \Theta -' V \Gamma  H \Theta -' E \Gamma  G\Theta -\Lambda TAE vO/fiss
In this case \Gamma  is called a witness cycle of v.
Definition 9. A cycle in a valid graph G is branchpoint-free if it does not pass through any
allowed branchpoint, i.e. a branchpoint-free cycle is made of only blackout vertices and
allowed linkpoints of G.

10 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE

The algorithm in [2] takes as input a 2-3-subgraph of the given valid graph G and givesas output a feedback vertex set of

G, containing the set X of all critical linkpoints, the setY of allowed branchpoints in the maximal 2-3-subgraph of G, and the vertices of a set W

covering all branchpoint-free cycles of H not covered by X. The set X can be found byapplying depth-first search on

G and the set Y by applying breadth-first search. The com-plexity of the algorithm is linear in the number of edges of G. To speedup the algorithm,

Bar-Yeruda et al. show how to preprocess the input valid graph by applying the corre-sponding undirected versions of the reduction transformations given in Subsection 3.2, by
being careful during the process in not generating any blackout vertex cycle that violatesthe validity property of the reduced graph.

In more detail, in the undirected case, the reduction procedures described in Subsection 3.2 degenerate to the following. A reduction graph Gffl of a graph G is a graph obtainedfrom

G by a sequence of the following transformations:?

Delete an endpoint and its incident edges.? Connect two neighbors of a linkpoint v (other than a self-looped singleton) by a new

edge and remove v from the graph with its incident edges.
It was proved in [2] that any valid reduction graph Gffl of a graph G is such that u\Gamma  Gffl \Delta  w\Theta *\Lambda u\Gamma  G\Delta  w\Theta  . Moreover, if the reduction graph GU of G is minimal, i.e. it is valid and any proper

reduction graph Gffl of GU is not valid, it is shown that GU does not contain any blackoutlinkpoints and that any of its feedback vertex sets contains all allowed vertices of

GU . Inthis case, if it is possible to obtain a valid graph GU without any blackout linkpoints and

any endpoints, as the reduction transformations do, then for every feedback vertex set Vfflof

GU containing all linkpoints of G, we have that^

V \Gamma  G\Theta *^o/& \Gamma  \Delta \Gamma  G\Theta +: 1\Theta *^ Vffl ^V\Delta 
where \Delta \Gamma  G\Theta  is the largest degree among all vertices in G.In [2], the weighted feedback vertex set problem for undirected graphs was also solved

by proposing two approximation algorithms having performance ratios 4 log2 ^ V \Gamma  G\Theta *^ and2\Delta 2\Gamma 

G\Theta  , respectively. Both of the algorithms use reduction graph transformations. The firstalgorithm finds at each iteration a minimal weighted reduction graph GU of the input graph\Gamma 

G\Delta  w\Theta  , i.e. a minimal reduction graph such that any of its reduction graphs Gffl is equal to
GU . Such a graph is necessarily branchy, that is, it does not contain any endpoints and itsset of linkpoints induces an independent set (i.e. each linkpoint is either an isolated selfloop or it is connected to two branchpoints). Note that transforming a graph into a branchygraph takes

O\Gamma  ^ E \Gamma  G\Theta ff^D\Theta  time. The algorithm then proceeds to find a cycle \Gamma  in the minimalweighted reduction graph with the smallest number of vertices of length less than or equal

to 4 log2 ^ V \Gamma  G\Theta ff^ . Next, the algorithm subtracts from the weight of each vertex in V \Gamma  \Gamma \Theta  theminimum among the weights of vertices in V \Gamma  \Gamma \Theta  . The vertices whose weights become zero
are added to the building feedback vertex set V ffl and deleted from the graph. These steps areiterated until the graph is exhausted. It has been proved that this algorithm can be applied
even on planar graphs achieving a performance ratio less than or equal to 10. The secondalgorithm for the weighted feedback vertex set problem in its undirected version is based
on the property that every feedback vertex set Vffl of a branchy graph GU contains a number
of vertices less than or equal to 2\Delta 2\Gamma  G\Theta W^ Vffl`^ . This is a greedy algorithm that achieves aperformance ratio less than or equal to 2\Delta 2 \Gamma 

G\Theta  for any graph G. It starts each iteration i byfinding the minimal weighted reduction graph \Gamma 

Hi\Delta  wHi \Theta  of the graph \Gamma  HiK 1\Delta  wHiX 1 \Theta  , where\Gamma 
H0\Delta  wH0 \Theta S\Lambda  \Gamma  G\Delta  w\Theta  and by computing ai, the minimum weight among those associated

with the vertices of Hi. It then proceeds by adding to the feedback vertex set V ffl all the

FEEDBACK SET PROBLEMS 11
vertices in Hi having weight ai and removing them from Hi. These steps are iterated untilthe reduced graph

Hi becomes a forest.For the feedback vertex set problem in general undirected graphs, two slightly different

2-approximation algorithms are described in Becker and Geiger [3] and by Bafna, Berman,and Fujito [1]. These algorithms improve the approximation algorithms of Bar-Yeruda et
al. [2], who also give a reduction procedure from the loop cutset problem to the minimumweighted feedback vertex set problem. The proposed algorithms also can find a loop cutset
which, under specific conditions explained in more detail in Section 5, is guaranteed in theworst case to contain less than four times the number of variables contained in a minimum
loop cutset. Subsequently, Becker and Geiger [4] applied the same reduction procedurefrom the loop cutset problem to the minimum weighted feedback vertex set problem of
Bar-Yeruda et al. [2], but their result is independent of any condition and is guaranteed inthe worst case to contain less than twice the number of variables contained in a minimum
loop cutset. Becker and Geiger [4] propose two approximation algorithms for finding
the minimum feedback vertex set V ffl in a vertex-weighted undirected graph \Gamma  G\Delta  w\Theta  . The
simplest of them is a greedy algorithm that starts with a graph Gffl , after removing fromthe original graph

G all vertices i \Phi  V \Gamma  G\Theta  with degree \Delta G \Gamma  i\Theta  equal to 0 or to 1 and then, it
repeatedly chooses to insert a vertex v in the feedback vertex set V ffl , if the ratio between
v's weight w\Gamma  v\Theta  and its degree \Delta Gffl \Gamma  v\Theta  in the current reduced graph Gffl is minimal across all

vertices in Gffl . When v is selected, it is removed from Gffl along with all its incident edgestogether with all vertices of degree equal to 0 or to 1 after those removals. This step is

iterated until the current reduced graph is exhausted. It is proved that the performance ratioof this algorithm is bounded by 2 log\Delta \Gamma 

G\Theta o/: 1, where \Delta \Gamma  G\Theta o/\Lambda  maxv V ! G" \Delta G \Gamma  v\Theta  is the degree of

graph G. The second algorithm is a modified greedy algorithm having performance ratiobounded by the constant 2. It consists of two phases:

1. The first phase proceeds as in the greedy algorithm, but now, when a vertex v ischosen to be removed from the graph with all its incident edges and to be inserted in

the building feedback vertex set V4 , the ratio r\Gamma  v\Theta  between its weight and its degreeis saved. After the removal from the current graph of all vertices having degree 0 or
1, along with their incident edges, for every removed edge \Gamma  u1\Delta  u2 \Theta  the ratio r\Gamma  v\Theta  issubtracted from the weight of its endpoints u

1 and u2.2. The second phase, on the other hand, is completely new. It starts after exhausting the

current reduced graph, i.e. when a feedback vertex set V ffl is already found, and tries
to remove from Vffl redundant vertices vi by checking if every cycle in G that passes
through vi intersects with VfflY,.AE viO/ .

By using a Fibonacci heap, the complexity of the algorithm is O\Gamma  m : n logn\Theta  , wherem \Lambda Q^ E \Gamma  G\Theta ff^ and n \Lambda T^ V \Gamma  G\Theta *^ . A vertex is identified and retrieved from such a heap ^ V \Gamma  G\Theta *^

times, with each operation taking O\Gamma  log ^ V \Gamma  G\Theta ff^D\Theta  time. The vertex weights are decreased^

E \Gamma  G\Theta *^ times at a constant amortized cost each. Moreover, the complexity of the secondphase does not increase the total complexity of the algorithm.

In [18], Chudak, Goemans, Hochbaum, and Williamson showed how the algorithmsdue to Becker and Geiger [3] and Bafna, Berman, and Fujito [1] can be explained in terms
of the primal-dual method for approximation algorithms that are used to obtain approxi-mation algorithms for network design problems. The primal-dual method starts with an
integer programming formulation of the problem under consideration. It then simultane-ously builds a feasible integral solution and a feasible solution to the dual of the linear
programming relaxation. If it can be shown that the value of these two solutions is within a

12 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
factor of a, then an a-approximation algorithm is found. The integrality gap of an integerprogram is the worst-case ratio between the optimum value of the integer program and the
optimum value of its linear relaxation. Therefore, by applying the primal-dual method itis possible to proof that the integrality gap of the integer program under consideration is
bounded. In fact, Chudak et al., after giving a new integer programming formulation of thefeedback vertex set problem, provided a proof that its integrality gap is at most 2. They
also gave the proofs of some key inequalities needed to prove the performance guaranteeof their new 2-approximation algorithm, which is a simplification of the algorithm due to
Bafna et al. [1].
Theorem 3. Let Vffl denote any feedback vertex set of a graph G \Lambda  \Gamma  V\Delta  E \Theta  , E Z\Lambda  /0, let t
denote the cardinality of the smallest feedback vertex set for G, and let E \Gamma  S\Theta  denote thesubset of edges that have both endpoints in S \Xi  V \Gamma  G\Theta  , b\Gamma  S\Theta o/\Lambda T^ E \Gamma  S\Theta *^*G[^ S^i: 1. Then

a*
v Vffl @ \Delta 

G\Gamma  v\Theta -G 1A!$ b\Gamma  V \Gamma  G\Theta ff\Theta (1)

a*
v Vffl \Delta 

G\Gamma  v\Theta  $ b\Gamma  V \Gamma  G\Theta \Omega \Theta +: tss(2)

If every vertex in G has degree at least two, and Vffl M is any minimal feedback vertex set
(i.e. % v \Phi  Vffl M \Delta  Vffl M ,oeAE vO/ is not a feedback vertex set), then

a*
v Vffl M \Delta 

G \Gamma  v\Theta /& 2 \Gamma  b\Gamma  V \Gamma  G\Theta ff\Theta +: t\Theta -G 2ss(3)

Definition 10. A feedback vertex set Vffl is almost minimal if there is at most one vertex
v \Phi  Vffl such that V fflY,.AE vO/ is a feedback vertex set.

Definition 11. A cycle is semidisjoint if it contains at most one vertex of degree greater
than 2.

Theorem 4. If every vertex has degree at least 2 and the graph does not contain semidisjoint cycles or is itself a cycle, and Vffl AM is any minimal feedback vertex set, then

a*
v Vffl AM @ \Delta 

G \Gamma  v\Theta -G 1A & 2 b\Gamma  V \Gamma  G\Theta ff\Theta -G 1ss(4)

Note that the inequalities 2 and 3 imply

a*
v Vffl M \Delta 

G \Gamma  v\Theta \Upsilon & 2 a*

v Vffl \Delta 

G \Gamma  v\Theta -G 2\Delta (5)

while inequalities 1 and 4 imply

a*
v Vffl AM @ \Delta 

G \Gamma  v\Theta -G 1A & 2 a*

v Vffl @ \Delta 

G \Gamma  v\Theta o/G 1A G 1ss(6)

The condition under which the inequality 4 holds is satisfied if the graph is 2-vertex-connected. As Corollary of inequality 1, Chudak et al. proved the following result:

Theorem 5. Let Vffl be any feedback vertex set. Then, for any S \Xi  V \Gamma  G\Theta  such that E \Gamma  S\Theta oeZ\Lambda  /0,
we have that

a*
v Vffl]" S@ \Delta 

S \Gamma  v\Theta -G 1A!$ ^ E \Gamma  S\Theta ff^*G;^ S^i: 1 \Lambda  b\Gamma  S\Theta 7ss(7)

FEEDBACK SET PROBLEMS 13
Inequalities 3 and 4 are needed to prove the performance guarantee of the proposedapproximation algorithm, while 1 and 2 are used in the new integer programming formulation. The standard cycle formulation of the problem is given in Subsection 3.1. Even,Naor, Schieber, and Zosin [27] showed that the integrality gap of that integer program is
\Omega \Gamma  logn\Theta  . The new integer programming formulation given by Chudak et al. [18] is asfollows:

(IP)

min a*

v V ! G" w\Gamma  v\Theta  x

v

s.t. a*

v S\Gamma  \Delta S \Gamma  v\Theta -G 1\Theta  xv $ b\Gamma  S\Theta  S \Xi  V \Gamma  G\Theta  : E \Gamma  S\Theta ^Z\Lambda  /0x
v \Phi .AE 0\Delta  1O/ v \Phi  V \Gamma  G\Theta *ss

The linear programming relaxation is:

(LP)

min a*

v V ! G" w\Gamma  v\Theta  x

v

s.t. a*

v S\Gamma  \Delta 

S \Gamma  v\Theta -G 1\Theta  xv $ b\Gamma  S\Theta  S \Xi  V \Gamma  G\Theta  : E \Gamma  S\Theta ^Z\Lambda  /0

xv $ 0 v \Phi  V \Gamma  G\Theta *ss
and its dual is:

(D)

max a*

S b\Gamma  S\Theta  y

S

s.t. a*

S:v S\Gamma  \Delta 

S \Gamma  v\Theta -G 1\Theta  yS & wv v \Phi  V \Gamma  G\Theta 

yS $ 0 S \Xi  V \Gamma  G\Theta  : E \Gamma  S\Theta ^Z\Lambda  /0ss
The algorithm proposed by Chudak at al. constructs a feasible solution of the linearprogramming relaxation (LP) and it is essentially the algorithm proposed by Bafna et al.

In [1], Bafna et al. developed an algorithm that starts with a feedback vertex set Vfflo/\Lambda  /0,the feasible dual solution

y \Lambda  0, and the original graph GU/\Lambda  \Gamma  V U`\Delta  E Ui\Theta R\Lambda  \Gamma  V\Delta  E \Theta  . Given a
set Vffl , if it is not a feedback vertex set, there must exist a cycle in GU . The algorithmfirst recursively removes from GU all vertices having degree equal to one and their incident

edges and then chooses some set S corresponding to a violated constraint of (IP). S iscalled the violated set. To choose S the algorithm uses a subroutine called VIOLATION,
that first looks for a semidisjoint cycle in GU . If it finds such a cycle, it lets S correspondto the vertices of the cycle and returns

S. Otherwise, it returns S \Lambda  V U . The algorithm thenincreases as much as possible the dual variable y

S, until some dual inequality becomes tightfor some vertex in S, that is added to Vffl and removed from GU together with its incident

edges. The algorithm continues repeating these steps until Vffl is a feedback vertex set. It
then goes through the vertices in V ffl in the reverse of the order in which they were added andremoves any extraneous vertices. The simpler 2-approximation algorithm of Chudak et al.

uses a different VIOLATION subroutine, that avoids searching for semidisjoint cycles by adifferent choice of

S. Given a decomposition of GU into its 2-vertex-connected components,their algorithm sets

S to be an endblock, so that S contains at most one cutvertex.Another 2-approximation algorithm is due to Vazirani [86], who also found a lower

bound on the optimal solution for special vertex weight functions. Before describing hisalgorithm, the following definitions are needed.

14 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
Definition 12. Let GF @ 2A i be the set of all binary vectors having i components. Then
the characteristic vector of a cycle C in G is a vector in GF @ 2A m, m \Lambda P^ E \Gamma  G\Theta *^ , whosecomponents are equal to 1, if they correspond to edges in C, 0 otherwise.

Definition 13. The cycle space of G is defined as the subspace of GF @ 2A m, spanned by thecharacteristic vectors of all cycles in G.
Definition 14. The cyclomatic number cyc\Gamma  G\Theta  is the dimension of the cycle space and it isgiven by

cyc\Gamma  G\Theta *\Lambda a^ E \Gamma  G\Theta ff^*G;^ V \Gamma  G\Theta ff^i: k\Gamma  G\Theta *\Delta 
where k\Gamma  G\Theta  denotes the number of connected components of G.

The removal of an edge i from G decreases its cyclomatic number by 1, unless i isa bridge, i.e. an edge whose removal increases the number of connected components.

Similarly, the decrease in the cyclomatic number caused by removing a vertex v equals themaximum number of edges incident to v that can be successively removed so that none of
them is a bridge at the moment of its removal.
Definition 15. Let dG \Gamma  v\Theta  be the decrease in cyclomatic number caused by removing the
vertex v from G. A weight function is cyclomatic if it assigns to each vertex v the weight
c \Psi  dG\Gamma  v\Theta  , for some c L 0.

Since the removal of a feedback vertex set V ffl \Lambda bAE v1\Delta I\Psi ff\Psi \Omega \Psi ffi\Delta  v f O/ decreases the cyclomaticnumber of

G down to 0, then

cyc\Gamma  G\Theta +\Lambda 

fa*

i, 1d

GiX 1v\Gamma  i\Theta *\Delta 

where G0 is the original graph and, for i L 0, Gi \Lambda  G ,oeAE v1\Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  viO/ .Since a non-bridge edge in an induced subgraph cannot be a bridge in the larger graph, for
each vertex v the following inequalities hold

dGi \Gamma  v\Theta S& dG \Gamma  v\Theta *\Delta 
cyc\Gamma  G\Theta S& a*

v Vffl d

G \Gamma  v\Theta *ss

Therefore, if the weight function defined on the vertices of G is cyclomatic, then c \Psi  cyc\Gamma  G\Theta is a lower bound on the optimal solution and a straightforward factor 2 algorithm for cyclomatic weights functions is given by the following lemmas:
Lemma 1. If Vffl is a minimal feedback vertex set of G, then

a*
v Vffl d

G \Gamma  v\Theta S& 2 \Psi  cyc\Gamma  G\Theta 7ss

Lemma 2. Let w be a cyclomatic weight function defined on V \Gamma  G\Theta  and let Vffl be a minimumfeedback vertex set of G. Then

w\Gamma  Vffl \Theta \Upsilon & u\Gamma  G\Delta  w\Theta 'ss
In [86], Vazirani solves the feedback vertex set problem also in the case of arbitraryweights. The proposed 2-approximation algorithm consists of two phases: a

decompositionphase and an extension phase. During the decomposition phase, the algorithm decomposes

the original graph G into a sequence of induced subgraphs, Gk c GkK 1 c \Psi \Omega \Psi ff\Psi  c G0 \Lambda  G,where

Gk is acyclic. On the vertices of each graph Gi, i C k, a weight function is defined

FEEDBACK SET PROBLEMS 15
such that the sum of the weights of a vertex among these subgraphs is equal to its originalweight, i.e.

a*i:v V ! G

i"

wi \Gamma  v\Theta +\Lambda  w\Gamma  v\Theta *ss

When the decomposition phase terminates, Vffl k is a minimal feedback vertex set of Gk. Thealgorithm proceeds then executing the extension phase. For each

Gi, i C k, it computes
a minimum feedback vertex set Vffl i by adding to Vffl ifl 1 a minimal set of vertices from
V \Gamma  Gi\Theta -G V \Gamma  GiK 1 \Theta  . The set V ffl 0 is output as a feedback vertex set for G.

Regarding the maximum size of a feedback vertex set Vffl in cubic graphs, Speckenmeyer[81] proved that for a connected undirected cubic graph

G of order n and girth g (girth isthe length of a shortest cycle in
G)

^ Vffl ^o/& \Gamma  g : 1\Theta \Gamma  4g G 2\Theta  : \Gamma  g G 1\Theta \Gamma  2g G 1\Theta  ss
Bondy, Hopkins, and Staton [5] proved that for a connected cubic graph G of girth at least 4

^ Vffl ^fi&Qd 1J 3 ^ V \Gamma  G\Theta *^ eo/ss
An improvement was made by Zheng and Lu, who in [92] found that if the girth of G is atleast 4 and if ^

V \Gamma  G\Theta *^SZ\Lambda  8, then

^ V ffl ^ffi& M 1J 3 ^ V \Gamma  G\Theta *^ N
and the bound is sharp. These results were improved by Liu and Zhao [58], including theresult due to Zheng and Lu, resulting in

^ Vffl ^o/& g4\Gamma  g G 1\Theta  n : \Gamma  g G 3\Theta \Gamma  2g G 2\Theta 
for a large class of cubic graphs of order n $ 4 and girth g.For the subset feedback vertex problem, Even, Naor, Schieber, and Zosin [27] showed
that it can be approximated in polynomial time by a factor of minAE 2 \Delta \Gamma  G\Theta *\Delta  8 log\Gamma  ^ V4`^5:1\Theta '\Delta  O\Gamma  logtUi\Theta *O/ , where tU denotes the value of the optimal fractional solution. In [27] the
authors also proposed a technique, called bootstrapping, that enhances the O\Gamma  log ^ V46^9\Theta  to afactor of

O\Gamma  logtU J b\Theta  , where b denotes the minimum weight of a vertex. The bootstrappingtechnique iteratively uses a graph partitioning algorithm. The output of each iteration is by

itself a subset feedback vertex set and is used as part of the input of the next iteration. AfterO\Gamma  log ^ V46^D\Theta  iterations, the algorithm produces as output a subset feedback vertex set having
weight at most O\Gamma  tU logtUi\Theta  . Even, Nor, and Zosin [29] improved this result proposing a8-approximation algorithm. The main tool that they used in developing their approximation algorithm and its analysis is a new version of multicommodity flow, called relaxed
multicommodity flow, a hybrid of multicommodity flow and multiterminal flow. In multi-commodity flow, the arc capacity constraints apply to the total flow of all the commodities,

while in multiterminal flow, the arc capacity constraints apply to each commodity sepa-rately. A relaxed multicommodity flow is a multiterminal flow with additional constraints,
called intercommodity constraints. For each arc, the authors considered the maximum flow,among all the commodities, which is shipped along it. They required that for each vertex
v \Phi  V \Gamma  G\Theta  the sum of the maximum flows shipped along its incident arcs is bounded by fourtimes the capacity of v. By considering the multicommodity flow, the vertices for which
the intercommodity constraints are tight play an important role from the point of view ofthe connectivity of the graph. They are called

intersatured vertices. The main result of

16 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
Even et al. is a theorem that bounds the weight of the vertices that must be intersatured, soas to realize a given demand vector by the sum of demands.

3.3.2. Directed graphs. In general, problems on undirected graphs are relatively easier tohandle than problems on directed graphs, since more graph theory can be utilized. Not surprisingly, the approximation results obtained so far for the undirected version are strongerthan those for the directed version. In fact, none of the algorithms referred to in the previous subsections apply to the feedback vertex set problem in directed graphs and, in contrastwith the undirected version, no analytical results are known for the directed case.

A very recent direction of research on approximation algorithms in the directed ver-sion focuses on the complete equivalence among all feedback set (and/or feedback subset)
problems and among these and the directed minimum capacity multicut problem in circu-lar networks. An exhaustive description of the procedures that reduce any feedback set
problem to any other or any of them to the directed minimum capacity multicut problemand vice versa will be given in Subsection 4.2. These reduction procedures are formalized
and used by Even, Naor, Schieber, and Sudan [28] to obtain an approximation algorithmfor the subset feedback arc set problem of a weighted directed graph G \Lambda  \Gamma  V\Delta  E \Theta  , where
the interesting cycles to be hit are contained in a set of special vertices X \Xi  V \Gamma  G\Theta  , where^

X ^Y\Lambda  k. The weight of the feedback arc set found by their approximation algorithm is
O\Gamma  tU log2 ^ X ^9\Theta  , where tU is the weight of an optimal fractional feedback set. More detailis provided in Subsection 4.3. Nevertheless, their approach can be used to solve any other

feedback set problem as well as the directed minimum capacity multicut problem.Even et al. [28] also proposed an algorithm for approximating the minimum weighted
subset vertex set problem in the weighted and directed case, leading to a result that holdsfor any other feedback set problem as well. Their approach is an algorithmic adaptation
of a theoretical result due to Seymour [75], who proved that the integrality gap in thecase of the unweighted feedback vertex set problem can be at most O\Gamma  log tU log logtUi\Theta  ,
where tU is defined as above. Even et al. observe that all existence arguments containedin the proof of Seymour's statement can be made constructive and thus, with some additional operations, an algorithm for the unweighted feedback vertex set problem havingan approximation factor of

O\Gamma  log tU log logtUi\Theta  can be obtained. Further modifications ofthe algorithm lead to a polynomial time approximation scheme applicable to the weighted

problem. In O\Gamma  ^ E \Gamma  G\Theta *^_\Psi _^ V \Gamma  G\Theta *^ 2 \Theta  time the algorithm finds a feedback vertex set havingweight

O\Gamma  minAE tU logtU loglogtU*\Delta  tU log ^ V \Gamma  G\Theta *^ log log ^ V \Gamma  G\Theta ff^VO/-\Theta  . All the observations contained in [28] improve the O\Gamma  log2 ^ V \Gamma  G\Theta *^9\Theta  -approximation algorithm for this case due toLeighton and Rao [53].

In the case of directed planar graphs, Stamm [83] presented an O\Gamma  ^ V \Gamma  G\Theta ff^ log ^ V \Gamma  G\Theta *^9\Theta  -ap-proximation algorithm, whose performance guarantee is bounded by the maximum degree
of the graph and an O\Gamma  ^ V \Gamma  G\Theta *^ 2 \Theta  time approximation algorithm with performance guaranteeno more than the number of cyclic faces in the planar embedding of the graph minus 1.

Cai, Deng, and Zang [10] obtained a 2ss 5-approximation algorithm for the minimumfeedback vertex set problem on tournaments, improving the previously known algorithm
with performance guarantee of 3 by Speckenmeyer [82]. Let H be the triangle-vertexincidence matrix of a tournament

T and let e be the all-one vector. In [10], necessary andsufficient conditions are established for the linear system AE x ^ Hx $ e\Delta  x $ 0O/ to be a totally

dual integral system (TDI).
Definition 16. A rational linear system AE x ^ Hx $ e\Delta  x $ 0O/ is called totally dual integral,
if the optimization problem maxAE yT b ^ yT A & cT \Delta  y $ 0O/ has an integral optimum solution
y for every integral vector c for which the maximum is finite.

FEEDBACK SET PROBLEMS 17
It has been shown that any rational polyhedron P has a TDI System P \Lambda QAE x : Ax & bO/representation with

A integral, and that, if P is full-dimension, there is a unique minimalTDI System P \Lambda fAE x : Ax & bO/ with A and b integral if and only if P is integral. In [11]

the authors have extended this approach to the feedback vertex set problems and the cyclepacking problem in

bipartite tournaments, where a bipartite tournament is an orientationof a complete bipartite graph. For the aforementioned problems they have found strongly

polynomial time algorithms, which are a consequence of a min-max relaxation on packingand covering directed cycles.

3.4. Exact algorithms. In contrast to the numerous approximation schemes that havebeen studied, relatively few exact algorithms for the feedback vertex set problem have
been proposed. To our knowledge, the first algorithm to find an exact minimal cardinalityFVS is due to Smith and Walford [80]. Although it solves the problem in an arbitrary
directed graph in exponential running time, it returns an optimal solution in polynomialtime for certain types of graphs. Before giving its description, the following definitions are
needed.
Definition 17. A maximal strongly connected component of a graph is abbreviated as
MSC.

Definition 18. A set of vertices S of graph G with the property that each loop of G containsat least one element of S is called a complete set. The number of elements in the set S is

referred to as the set measure ^ S^ .
Definition 19. A complete set S of minimal size is called an optimum set and its measureis defined as the index of G denoted by I \Gamma  G\Theta  .

The algorithm proposed by Smith and Walford is based on the following idea of partitionimplication. Given a graph

G, an arbitrary subset of vertices F may imply a 2-subgraphpartition \Gamma  G

F \Delta  GR \Theta  such that
1. Each vertex of GF is contained in at least one loop in G and only in loops of G alsocontaining an element of F. G

R contains all remaining vertices of G;2. If G is strongly connected, then all elements of any possible set F will be in G

F ;3. By removing from G all vertices in G
F ' F all loops in G containing a vertex of GFare eliminated from from G
F ;4. Loops in G
F and loops in GR are independent, i.e. they do not contain any commonvertex.

The authors proved the following results used by their algorithm.
Theorem 6. If S1\Delta  S2\Delta I\Psi ff\Psi \Omega \Psi ffi\Delta  Sk are optimal feedback vertex set for partitions P1\Delta  P2\Delta \Omega \Psi \Omega \Psi ff\Psi fi\Delta  Pk ofgraph G, and if the set S given by S \Lambda T2 k

i, 1Si is complete for G, it is also optimal for G.
Theorem 7. If I \Gamma  GF \Theta -\Lambda H^ F ^ , then F is a subset of an optimal feedback vertex set of G.

Theorem 8. Each element of an optimum set S must belong to at least one loop of G not
containing any other element of S.

The running time of the Smith-Walford algorithm reported in the following depends onthe cardinality of the partitions of the graph.

INPUT: a digraph G\Gamma  V\Delta  E \Theta  ;OUTPUT: a minimum feedback vertex set for

G.1) Find the MSC subgraphs of the graph under test, store them on push down stack;

18 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE

2) Pop top MSC from push down stack. If the stack was empty, then exit;3) Generate next trial

F set for MSC;4) Calculate implied partitions G

F and GR;5) If I \Gamma  G
F \Theta -\Lambda T^ F ^ , then go to 3);6) Make F part of minimal feedback vertex set;

7) Break GR subset into its MSC subgraphs;8) Store them on the push down stack and go to 2).

Later exact algorithms of enumerative nature often used the graph reduction proceduresto speed up the process. One study by Cheng [16] essentially used direct enumeration
plus reduction and reported satisfactory computational results for a set of partial scan de-sign test problems. Orenstein, Kohavi, and Pomeranz [65] proposed a somewhat more
involved exact enumerative procedure based on graph reduction and efficient graph parti-tioning methods. In addition to the reduction procedures due to Levy et al., Orenstein et
al. developed a further type of operation designed double reduction, which involves edgesdeletion:

DOUBLE(v,w):: If the vertices v and w form a 2-edged directed cycle in the graph G,then except for \Gamma  v\Delta  w\Theta  and \Gamma  w\Delta  v\Theta  , remove from G all edges included in directed cycles

going through both v and w.
If v and w satisfy the hypotheses of the DOUBLE reduction, then at least one of themmust be included in the feedback vertex set and all cycles passing through both

v and w willbe covered. Therefore, taking into account only the smallest cycle involving v and w will

have no influence on the optimum feedback vertex set solution. The algorithm proposedby Orenstein et al. has been designed for identifying a minimum feedback vertex set in a
digital circuit. It is based on the following recursive steps:

1. Building the topological graph associated with the input sequential circuit;

Definition 20. A digraph G \Lambda  \Gamma  V\Delta  E \Theta  is called a topological graph for a circuit S ifeach vertex in G represents a flip-flop, and a directed edge \Gamma  u\Delta  v\Theta  exists if and only if

there is a path from the flip-flop u to the flip-flop v through combinatorial logic. A
topological graph does not contain parallel edges.

2. Reduction operations;3. Partition: this step is executed after no more reduction operations can be applied. The

graph G is partitioned into subgraphs, which are solved separately and recursivelyby using this 3-step procedure.
The authors proposed four different partition techniques:(a) The partition into MSC, already proposed in [80];

(b) The partition into two independent subgraphs. The locality of the circuit is suchthat the circuit can be divided into small subcircuits with limited communication

among them;(c) An

extended partition which uses loop locality. A digital circuit generally con-tains many non-nested loops. This property causes the generation of two-edged

loops after reduction procedures are performed on the corresponding topologicalgraph;
(d) Vertex elimination following a Branch-and-Bound procedure is applied when noother partition are possible.

All partitions above described can be performed in polynomial time by usingvariations of depth-first search and/or breadth-first search.
4. Merging: in this step the solutions computed in step 2 are merged.

FEEDBACK SET PROBLEMS 19
The algorithm proposed by Orenstein et al. is efficient in random graphs, even if incliques or graphs that are

almost cliques it has an exponential behavior, since the reductionand partition techniques cannot be applied.

Somewhat surprising, the exact algorithm for feedback vertex set based on mathematicalprogramming formulation is quite few. Recently, Funke and Reinelt [31] considered a
special variant of feedback problems, namely the problem of finding a maximum weightnode induced acyclic subdigraph. They discussed valid and facet defining inequalities
for the associated polytope and developed a polyhedral-based exact algorithm presentingcomputational results obtained by applying a branch-and-cut algorithm.

3.5. Practical heuristics. Although the approximation algorithms guarantee a solution ofa certain quality, for many practical real world cases, heuristic methods can lead to better solutions in a reasonable amount of CPU time. As Gr"otschel and Lov'asz [38] pointedout, fast construction heuristics combined with local improvement techniques tailored for
special applications have been the "workhorse" of combinatorial optimization in practice.Over the years, a number of metaheuristics, including genetic algorithms, simulated annealing, greedy randomized adaptive search procedures (GRASP), Lagrangean relaxation,and others were developed with successful computational performance on a wide range of
combinatorial optimization problems. Interestingly, however, feedback vertex set problemsseem to be an exception. So far, relatively few practical heuristics have been developed for
this family of problems, even fewer have reported computational results. Furthermore,most of the heuristics that seem to be quite successful computationally are greedy type
heuristics or generalized greedy type heuristics (e.g. GRASP).Almost all the efficient heuristics developed so far employ the solution-preserved reduction rules studied by Levy and Lowe [55], which were presented in Subsections 3.2and 3.3.1. It has been observed in practice that this group of heuristics greatly reduces the
cardinality of the graph not only at the beginning of the algorithm, but also dynamicallyduring the execution of node deletion type heuristics. A recent line of research on heuristic
approaches is due to Pardalos, Qian, and Resende [68] where three variants of the so called
Greedy Randomized Adaptive Search Procedure (GRASP) metaheuristic are proposed forfinding approximate solutions of large instances of the feedback vertex set problem in a

digraph. GRASP is a multistart method characterized by two phases: a construction phaseand a local search phase, also known as a local improvement phase. During the construction phase a feasible solution is iteratively constructed. One element at time is randomlychosen from a Restricted Candidate List (RCL), whose elements are sorted according to
some greedy criterion, and is added to the building feedback vertex set and removed fromthe graph with all its incident arcs. Since the computed solution, in general, may not be
locally optimal with respect to the adopted neighborhood definition, the local search phasetries to improve it. These two phases are iterated and the best solution found is kept as an
approximation of the optimal solution.To improve the efficiency of the method, Pardalos et al. incorporated in each iteration
of their algorithm solution-preserving graph reduction techniques in their directed versionand that can be used also to check if a digraph is acyclic, returning an empty reduced graph
in case of positive answer.The authors employed the following three greedy functions used to select the node with
the maximum G\Gamma  i\Theta  values:

1. GA \Gamma  i\Theta +\Lambda  in\Gamma  i\Theta +: out \Gamma  i\Theta  ;2.

GB \Gamma  i\Theta +\Lambda  in\Gamma  i\Theta -g out \Gamma  i\Theta  ;3.
GC \Gamma  i\Theta *\Lambda  maxAE in\Gamma  i\Theta *\Delta  out \Gamma  i\Theta ffO/ .

20 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
Greedy function GA assigns equal weight to in- and out-degrees. GB favors the balance be-tween in- and out-degrees.

GC only considers the largest value of the degrees. As demon-strated in Pardalos et al., G

B produced the best computational results. GRASP was testedon two randomly generated problem sets, finding the optimal solutions to all the problems

in the first set, where the optimal values are known (computed by Funke and Reinelt [31]).Furthermore, this GRASP dominates the pure greedy heuristics in all the test instances
with comparable running time. Fortran subroutines for finding approximate solutions ofthe directed feedback vertex set problem suing GRASP are given in Festa, Pardalos, and
Resende [30].

4. THE FEEDBACK ARC SET PROBLEM
Several versions of the feedback vertex set problem have been discussed in Section 3.It is possible to consider their arc counterparts. More specifically, given a graph G \Lambda \Gamma 

V\Delta  E \Theta  and a nonnegative weight function w : E \Gamma  G\Theta 1ae Rfl defined on the arcs of G, find
a minimum-weight subset of arcs EfflR\Xi  E \Gamma  G\Theta  that meets every cycle in a given collectionC of cycles in \Gamma  G\Delta  w\Theta  . As in the vertex case, this leads to the minimum feedback arc set

problem (MWFAS) in both directed and undirected graphs, the minimum weighted graph
bipartization problem via arc removals, and so on.

4.1. Mathematical model of the feedback arc set problem. Given an arc weightedgraph \Gamma  G\Delta  w\Theta  , G \Lambda  \Gamma  V\Delta  E \Theta  and the set C of all cycles in G, the minimum weighted feedback arc set problem can be formulated as the following integer programming problem:

(MFAS)

min a*

e E! G" w\Gamma  e\Theta  x

e

s.t. a*

e \Gamma xe $ 1 % \Gamma  \Phi  Cx
e \Phi hAE 0\Delta  1O/i% e \Phi  E \Gamma  G\Theta 'ss

In its relaxation, the constraints xe \Phi .AE 0\Delta  1O/ , % e \Phi  E \Gamma  G\Theta  are replaced by xe $ 0, % e \Phi  E \Gamma  G\Theta  ,obtaining a fractional feedback arc set.

As with the feedback vertex set problem, the feedback arc set problem is a coveringproblem and its (linear programming) dual is called a

packing problem. In the case of thefeedback arc set problem this means assigning a dual variable to all interesting cycles to

be hit in the given graph, such that for each arc the sum of the variables corresponding tothe interesting cycles passing through that arc is at most the weight of the arc itself.

4.2. Relation between the feedback vertex set and the feedback arc set problems.Feedback arc set problems tend to be easier than their vertex counterparts, especially for
planar graphs. In the directed case feedback vertex and feedback arc set problems are eachreducible to one another. In all reductions, there is a one-to-one correspondence between
feasible solutions and their corresponding costs. Therefore, an approximate solution toone problem can be translated to an approximate solution of the other problem reducible to
this problem. Because most of the reduction procedures can be performed in linear time,these problems can be viewed as different representations of the same problem. Hence,
as feedback vertex sets are reduced into feedback arc sets with the same weight and viceversa, all of these problems are equally hard to approximate.

Even, Naor, Schieber, and Sudan [28] showed how to perform reductions among feed-back set problems and feedback subset problems and vice versa, preserving feasible solutions and their costs. In the following, we report some of these reduction procedures, whereFVS and FAS denote the feedback vertex set problem and the feedback arc set problem,

FEEDBACK SET PROBLEMS 21
respectively, and BLACKOUT-FVS denotes an extension of the general feedback vertexset problem already referred to in the Subsection 3.3.1 (see also [2]). Recall that in the
blackout feedback vertex set problem an additional subset of blackout vertices B \Xi  V \Gamma  G\Theta is given and that the objective is to compute a minimum feedback vertex set that does not
contain vertices of B.

[FAS = FVS]: Given the graph G \Lambda  \Gamma  V\Delta  E \Theta  , construct its directed line-graph Gffl \Lambda \Gamma 

V ffl \Delta  Effl \Theta  as follows:

1. Set V ffl \Gamma  Gffl \Theta -\Lambda  E \Gamma  G\Theta  ;
2. An arc in Effl \Gamma  Gffl \Theta  connects the vertices \Gamma  v1 ae v2\Theta ^\Phi  Vffl \Gamma  Gffl \Theta  and \Gamma  v3 ae v4\Theta ?\Phi 

V ffl \Gamma  Gffl \Theta  if and only if v2 \Lambda  v3.In the weighted version, a correspondence among the weights of the arcs of

G and
the weights of the "vertices" of the corresponding graph Gffl is required as follows:

3. The weight of the "vertex" \Gamma  v1 ae v2\Theta 1\Phi  Vffl \Gamma  Gffl \Theta  is equal to the weight of the arc\Gamma  v

1 ae v2 \Theta \Upsilon \Phi  E \Gamma  G\Theta  .A subset of arcs F \Xi  E \Gamma  G\Theta  is a feedback arc set for G if and only if it is a feedback

vertex set for Gffl .[FVS = FAS]: Given the graph G \Lambda  \Gamma  V\Delta  E \Theta  , construct a graph Gffl \Lambda  \Gamma  Vffl \Delta  Effl \Theta  as follows:

1. For every v \Phi  V \Gamma  G\Theta  insert in Vffl \Gamma  Gffl`\Theta  two vertices v1 and v2;
2. For every v1 and v2 inserted in Vffl \Gamma  Gffl \Theta  after splitting a vertex v \Phi  V \Gamma  G\Theta  insert in

Effl \Gamma  Gffl'\Theta  an arc \Gamma  v1 ae v2 \Theta  , all the arcs that enter v in G connecting them to v1 in
Gffl , and all the arcs that emanate from v in G emanating them from v2 in Gffl .In the case of weights we also have:

3. For every arc effl \Lambda OE@ \Gamma  v1 ae v2 \Theta j^ v \Phi  V \Gamma  G\Theta  A , set w\Gamma  effl \Theta R\Lambda  w\Gamma  v\Theta  . All other arcs in

Effl \Gamma  Gffl \Theta  have infinite weight.This establishes a one-to-one correspondence between the finite weighted feedback arc sets of the new graph Gffl and the feedback vertex sets of the original graph
G.

[BLACKOUT-FVS = FVS]: A very simple reduction procedure could consist of as-signing infinite weight to each blackout vertex. However, in some cases a more

formal reduction among these two similar problems could be needed. What can bedone is to bypass each blackout vertex in B. For each blackout vertex v \Phi  B:

1. Connect arcs between every two vertices that have a path of length two, con-necting them, where

v is the middle vertex;2. Remove the blackout vertex v from the graph.

A subset of vertices F \Xi  V \Gamma  G\Theta  is a feedback vertex set that does not contain anyblackout vertices from

B if and only if it is a feedback vertex set of the graph obtainedby the reduction.

Note that only the reduction [BLACKOUT-FVS = FVS] requires more than linear timeto be performed.

4.3. State of the art of feedback arc set problems. In the literature of feedback set prob-lems most of the proposed algorithms are designed to solve the problem in vertex-weighted
graphs. One of the pioneering papers on feedback arc set problems is due to to Ramachan-dran [73], where it is proved that finding a minimum feedback arc set in an arc-weighted
reducible flow graph is as difficult as finding a minimum cut in a flow network. The proposed algorithm has complexity O\Gamma  m n2 log\Gamma  n2m \Theta \Omega \Theta  , where m \Lambda T^ E \Gamma  G\Theta *^ and n \Lambda T^ V \Gamma  G\Theta *^ . Thealgorithm was adapted to solve the problem in the vertex-weighted case. Shamir's linear

22 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
time algorithm [76], used for the unit-weighted case, cannot be applied to solve the arc-weighted problem, because any reduction between arc and vertex set problems does not
preserve the reducibility property.

Given a directed graph G \Lambda  \Gamma  V\Delta  E \Theta  , a dijoin Effl \Xi  E \Gamma  G\Theta  is a set of arcs such that the graph
Gffl5\Lambda  \Gamma  V\Delta  B\Theta  , B \Lambda  E 2kAE \Gamma  v\Delta  u\Theta S^ \Gamma  u\Delta  v\Theta 0\Phi  Effl`O/ is strongly connected. Given nonnegative weights
we, e \Phi  E \Gamma  G\Theta  , the minimum-weight dijoin problem is to find the dijoin with minimumweight. The feedback arc set problem in planar digraphs is reducible to the problem of

finding a minimum-weight dijoin in the dual graph, which is solvable in polynomial time[37]. Stamm [83] proposed a simple 2-approximation algorithm for the minimum weight
dijoin problem by superposing two arborescences. It is interesting to observe that, whentranslated to the dual graph, all these problems lead to problems of hitting certain cutsets
of the dual graph, problems which can be approximated within a ratio of 2 by the primal-dual method. Goemans and Williamson [36] proposed a primal-dual algorithm that finds a

94 -approximate solution to feedback sets problems in planar graphs.

The first approximation algorithm for the feedback arc set problem was given by Leightonand Rao [53]. Their approximation factor is

O\Gamma  log2 n\Theta  in the unweighted case, where n isthe number of vertices of the input graph. This bound was obtained by using a

O\Gamma  log n\Theta approximation algorithm for a directed separator that splits the graph into two approximately equally-sized components. This separator can be found by approximating spe-cial cuts called

quotient cuts. This result was improved by Seymour [75], who gave aO\Gamma  logn loglogn\Theta  -approximation algorithm that solves the linear relaxation of the feedback

arc set mathematical model and then interprets the optimal fractional solution xU as a lengthfunction defined on the arcs. Systematically, in a recursive fashion, it uses this length function to delete from the graph G all arcs between S and _S. Note that the linear program canbe solved in polynomial time by using the ellipsoid or an interior point algorithm. Hence,
the quality of the bound in this approach depends on the way the graph is partitioned.Seymour in [75] proved the following lemma:

Lemma 3. For a given strongly connected digraph G \Lambda  \Gamma  V\Delta  E \Theta  , suppose there exists a
feasible solution x to the feedback arc set problem. If f is the value of the optimal fractional solution xU , then there exists a partition \Gamma  S\Delta  _S\Theta  such that, for some e, 0 C e C 1,the following conditions hold: If dfl \Gamma  S\Theta 1\Lambda iAE \Gamma  u\Delta  v\Theta 8^ \Gamma  u\Delta  v\Theta ?\Phi  E \Gamma  G\Theta *\Delta  u \Phi  S\Delta  v \Phi  _SO/ and

dK \Gamma  S\Theta -\Lambda HAE \Gamma  v\Delta  u\Theta 1^ \Gamma  v\Delta  u\Theta \Upsilon \Phi  E \Gamma  G\Theta *\Delta  u \Phi  S\Delta  v \Phi  _SO/ , then

a*e E ! S" w\Gamma  e\Theta  x\Gamma  e\Theta \Upsilon & ef(8)
a*
e E ! _S" w\Gamma  e\Theta  x\Gamma  e\Theta \Upsilon & \Gamma  1 G e\Theta  f(9)

and either

a*e dl0! S" w\Gamma  e\Theta \Upsilon & 20eflog\Gamma  1e \Theta  log logf(10)
or

a*e dX ! S" w\Gamma  e\Theta \Upsilon & 20eflog\Gamma  1e \Theta  log log fss(11)
Furthermore, the partition \Gamma  S\Delta  _S\Theta  can be found in polynomial time.

FEEDBACK SET PROBLEMS 23
The previous lemma admits a constructive proof as has been shown by Even, Naor,Schieben, and Sudan [28]. The algorithm proposed by Even et al. finds a feedback arc
set having weight O\Gamma  tU log2 ^ X ^9\Theta  , where X is a special set of vertices defining the cyclesto be hit and tU is the weight of an optimal fractional feedback set. They had the idea
of reducing the problem to the directed minimum capacity multicut problem in circularnetworks and of adapting the undirected

sphere growing technique described in [34] todirected circular networks. They decomposed the graph in the following way. A fractional

and optimal solution to the directed feedback set problem induces a distance metric on theset of arcs (on the set of vertices)

E \Gamma  G\Theta  . Their approximation algorithm arbitrarily picks avertex
v \Phi  X and solves the shortest path tree problem rooted at v with respect to the metricinduced by the fractional solution. The procedure that finds the shortest path tree defines

layers with respect to the source v. Each layer is a directed cut that partitions the graph intotwo parts. The next step of the approximation algorithm is to choose a directed cut and to
add the cut to the feedback set constructed so far. The algorithm continues recursively ineach part and ends when the graph does not contain any interesting cycles. The key of the
algorithm is the choice of the criterion to select the directed cut that partitions the graph.Even et al. decided to relate the weight of the cut to the cost of the fractional solution.

More recently, Even, Naor, Schieber, and Zosin [27] showed that, for any weight func-tion defined on the arcs, the subset feedback arc set problem can be approximated in polynomial time by a factor of two. The approximation algorithm consists of successive com-putations of minimum cuts. Its approximation factor is estimated by considering the capacities of minimum cuts as flow paths. When new minimum cuts are computed, previousflow paths are updated according to the decomposition of the graph induced by an optimal
solution.

5. APPLICATIONS
Feedback set problems were originally formulated in the area of combinatorial circuitdesign, where cycles can potentially cause a problem called a "racing condition", where

some circuit node may receive new inputs before it stabilizes [43]. To avoid such a condi-tion, a (clocked) register is placed at each cycle in the circuit. However, the delay in the
circuit speed is proportional to the number of registers placed along a path. Therefore, theobjective is to minimize the number of nodes (registers) to be placed so that the total delay
can be minimized.Another application of the feedback set problem is in deadlock prevention in computer
systems [59, 78]. Consider an operating system which schedules different processes withrequests on different resources, which need to use exclusively before being released by the
process. A directed graph modeling these resource requirements is to have a node i for eachprocess i and a directed arc e\Gamma  i\Delta  j\Theta  denotes process i requests a resource already allocated
to process j. Therefore, if there is a directed cycle in such a graph, a deadlock occursand every process in the cycle will wait for the requested resource and never releases the
resources already allocated to it. To break such cycles, one can remove some processesfrom the graph and put them in a waiting queue. It is clear that the objective is to minimize
the number of removed processes.In recent years, there have been intensive research efforts in the VLSI testing community
on the feedback vertex set problem due to the following application [9, 49, 52]. A circuitcan be modeled by a directed graph whose vertices represent gates computing Boolean
functions and the directed arcs represent wires that connect gates. In this case, finding aminimum feedback arc set helps to reduce the hardware overhead required for testing the

24 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
circuit by using scan-design techniques. One problem with this architecture is the cost ofadditional hardware. To reduce this overhead, partial scan methods have been proposed,
which only scan a subset of flip-flops in the tested circuit. This way, the hardware overheadof the scan-design can be significantly reduced.

Luccio [61] describes applications of the feedback vertex set problem in synchronoussystems [69, 70]. Typically, a synchronous system can be modeled by a network, whose
vertices can be colored white or black and at each step a vertex changes its color accordingto the majority of its neighbors implying that it is receiving the correct information. In
a "monotone" synchronous system only white vertices can change their color. It can beeasily seen that in a toroidal mesh a feedback vertex set of black vertices causes all vertices
to become black after some steps and that a minimum feedback vertex set is an initialconfiguration of minimum cardinality that stabilizes the system.

Two notable applications of the unweighted feedback vertex set problem in artificial in-telligence are the constraint satisfaction problem and Bayesian inference. The application
in the constraint satisfaction problem is due to Dechter [23] and Dechter and Pearl [22]. Aset of variable AE

x1\Delta  x2\Delta \Omega \Psi ff\Psi \Omega \Psi fi\Delta  xnO/ is given, where each variable xi belongs to a finite domainD

i. For every i C j a constraint subset Rij \Xi  Di \Sigma  Dj is constructed, defining pairs of val-ues allowable for the pair of variables \Gamma  x

i\Delta  x j \Theta  . The objective is to find an n-tuple of values\Gamma  v
1\Delta  v2\Delta \Omega \Psi ff\Psi \Omega \Psi fi\Delta  vn \Theta  to be assigned to AE x1\Delta  x2\Delta I\Psi ff\Psi ff\Psi o/\Delta  xnO/ , such that all the constraints Rij are satis-fied. With each instance of the problem an undirected graph G can be associated whose

vertices are the variables AE x1\Delta  x2\Delta \Omega \Psi \Omega \Psi ff\Psi fi\Delta  xnO/ and whose arc set contains the arc \Gamma  xi\Delta  x j \Theta  if andonly if R

ij c Di \Sigma  D j. G is called a constraint network and represents a constraint satisfac-tion problem. It can be easily solved by applying a backtracking method, that repeatedly

assigns values to the variables in an order previously defined and backtracks wheneverreaching a dead end. This exponential method can be improved, leading to another exponential technique, but in the size of a feedback vertex set of the constraint network. Itfirst finds a feedback vertex set of the constraint network and then arranges the variables
so that variables in the feedback vertex set precede all other variables. The backtrackingprocedure is applied, and as soon as values of the variables in the feedback vertex set are
determined, a polynomial time algorithm solves the constraint satisfaction problem in theremaining forest. In case of success a solution is found. Otherwise, a new backtracking
phase occurs.The application of the feedback vertex set problem to Bayesian inference is due to BarYeruda, Geiger, Naor, and Roth [2]. They reduced the weighted loop cutset problem to theweighted blackout-feedback vertex set problem in a directed graph G and gave a 2\Delta 2\Gamma  G\Theta  approximation algorithm for solving any of these two problems, where \Delta \Gamma  G\Theta  is the degreeof

G. This algorithm reduced the computational complexity of Bayesian inference. Given aprobability distribution P\Gamma  u

1\Delta  u2\Delta I\Psi ff\Psi ff\Psi fi\Delta  un \Theta  , where ui belongs to a finite domain Di, a directedacyclic graph G is called a Bayesian network of P if there is a one-to-one correspondence

between AE u1\Delta  u2\Delta \Omega \Psi \Omega \Psi ff\Psi fi\Delta  unO/ and V \Gamma  G\Theta  such that each ui is associated with the vertex i forwhich the following holds:

P\Gamma  u1\Delta  u2\Delta I\Psi ff\Psi \Omega \Psi ffi\Delta  un \Theta -\Lambda 

nO~

i, 1 P\Gamma  ui^ ui

1 \Delta  ui2 \Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  uiji \Theta *\Delta 

where i1\Delta  i2\Delta \Omega \Psi ff\Psi \Omega \Psi ffi\Delta  iji are the tail vertices of the edges in G whose head is i. The updating problem is that of finding for each value of i the probability P\Gamma  ui^ \Gamma  v1 \Lambda  u1 \Theta *\Delta  \Gamma  v2 \Lambda u

2\Theta *\Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  \Gamma  vl \Lambda  ul \Theta ff\Theta  given that the values AE u1\Delta  u2\Delta \Omega \Psi \Omega \Psi ff\Psi ffi\Delta  ul O/ are assigned to some variablesAE v

1\Delta  v2\Delta \Omega \Psi ff\Psi \Omega \Psi ffi\Delta  vl O/ among AE u1\Delta  u2\Delta \Omega \Psi \Omega \Psi ff\Psi fi\Delta  unO/ . Pearl [71] solved this problem as follows. A trailt in a Bayesian network G is a subgraph whose underlying graph is a simple path. A

FEEDBACK SET PROBLEMS 25
vertex b is a sink with respect to a trail t if there exist two consecutive arcs \Gamma  a ae b\Theta  and\Gamma 

b ae c\Theta  on t. The arc t is said to be "active" by a set of vertices Z if every sink withrespect to t either belongs to Z or has a descendant in Z, and every other vertex of t does

not belong to Z. Pearl's algorithm first selects a set of vertices S such that any pairs ofvertices in

G are connected by at most one active trail t \Phi  S 2 T , where Z is any subsetof vertices. Then, for each combination of value assignments to the variables belonging

to S, a procedure given in [50] is applied. This solves the updating problem by view-ing each vertex as a processor repeatedly sending messages to each of its adjacent vertices.
When equilibrium is reached, each vertex i contains the conditional probability distribution
P\Gamma  ui^ \Gamma  v1 \Lambda  u1 \Theta *\Delta  \Gamma  v2 \Lambda  u2 \Theta '\Delta I\Psi ff\Psi ff\Psi fi\Delta  \Gamma  vl \Lambda  ul \Theta ff\Theta  . At the end all the obtained results are combined.This technique, called the conditioning method, is exponential in the size of S. Bar-Yeruda

et al. showed that S is a loop cutset of the Bayesian network and hence is computable byapplying their algorithms.

The approximation algorithms for the weighted feedback vertex set problem have appli-cations in areas of computer science other than areas of artificial intelligence. The leading
inference Bayesian algorithm is the clique tree algorithm [51] and Shachter et al. [77] haveshown that the weight of the largest clique is bounded by the weight of the union of the
loop cutset and the largest parent set of a vertex in a Bayesian network.Even, Naor, Schieber, and Sudan [28] showed that on a special network called circular
network any feedback vertex set problem is equivalent to another important NP-hard com-binatorial optimization problem, called the

directed multicut problem, defined by Hu [41]as follows. Given a capacitated network and a set of k source-sink pairs, find a minimum

capacity set of edges whose removal disconnects all the source-sink pairs. The relationbetween feedback set problems and multicut problems was pointed out by Leighton and
Rao [53]. Even et al. [28] described a simple procedure that reduces an instance of thefeedback arc subset problem to an instance of the minimum multicut problem in circular
networks, which are networks such that for each source-sink pair \Gamma  si\Delta  ti \Theta  an infinite capac-ity edge

ti ae si is defined. The approximation algorithms for the feedback set problemsproposed in [28], and discussed in Subsection 3.3.2, have been developed by the authors to

improve the state of the art of ratios of approximation algorithms for the directed multicutproblem.

In a very recent paper by Pachter and Kim [66], a connection between the feedback arcset problem and the forcing problem in square grids has been established. Given a graph G
admitting a perfect matching M, the forcing number of M is the smallest number of arcs in asubset S c M, such that S is in no other perfect matching. A subset S having this property is
said to force M. The concept of forcing arises in combinatorial chemistry [47, 48] leadingto extensive study of forcing in hexagonal systems [15, 39, 56]. Pachter et al. [66] solved
the forcing problem in special square grid graphs denoted by Rn \Lambda  P2n \Sigma  P2n, where \Sigma  is theCartesian graph product and

P2n is the path on 2n vertices. They used a result of Lucchesiand Younger [60] stating that, for a finite planar directed graph, a minimum feedback

set has cardinality equal to that of a maximum disjoint collection of directed cycles. Adirected graph

G has the cycle-packing property if the maximum size of a collection ofedge disjoint cycles equals the minimum size of a feedback set. This property still holds

for an undirected graph if every orientation of the edges results in a directed graph with thecycle-packing property. Starting from a perfect matching

M of a bipartite graph G havingthe cycle-packing property, Pachter et al. constructed a directed graph D\Gamma  M\Theta  having the

same vertex set of G partitioned into two sets A and B and whose arc set contains an arc edirected from

A to B if e \Phi  M, from B to A otherwise. They proved that there is a one-to-one correspondence between alternating cycles in M and directed cycles in D\Gamma  M\Theta  and that

26 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
for every feedback set in D\Gamma  M\Theta  there is a forcing set in M of the same cardinality and viceversa.

Some recent papers due to Isaak [42] and Charon et al. [14] examined tournamentsproblems as a generalization of the feedback arc set problem for digraphs. A (roundrobin) tournament T \Lambda  \Gamma  X \Delta  U \Theta  is a complete asymmetric graph such that for every x\Delta  y \Phi  Xthere is a unique arc \Gamma  x\Delta  y\Theta  or \Gamma  y\Delta  x\Theta  . A weighted tournament is a tournament for which a
weight function w is defined on U with values from the positive set of natural numbers. Aclassical NP-hard tournament problem is the following: Given a weighted tournament

T ,find a minimum weighted set of arcs of T such that reversing these arcs makes T transitive.

Consider any digraph D \Lambda  \Gamma  X \Delta  V \Theta  as tournament T \Lambda  \Gamma  X \Delta  U \Theta  , with V c U weighted by w.The weights w are defined on U by w\Gamma  u\Theta R\Lambda  1 if u \Phi  V and w\Gamma  u\Theta B\Lambda  0 if u \Phi  U , V . Any
optimal solution of the feedback arc set problem on D gives an optimal solution to thetournament problem on

D and vice versa.

6. FUTURE DIRECTIONS
Despite the large body of work on feedback vertex set, many interesting problems re-main to be answered.

Recent advances in approximation algorithms seem to push the boundary closer to thelimit. For undirected feedback vertex set, the worst case bound 2 cannot be improved
unless the vertex cover problem can approximated within a bound less than 2, which hasbeen conjectured by Hochbaum [40] to be NP-complete. The picture is still less clear
for the directed case, where despite the arduous efforts of several researchers, the bestknown approximation bound is still

O\Gamma  log n loglogn\Theta  , and no approximation algorithmwith constant ratio bound has been reported. Yannakakis [88] conjectured that there is a

gap between the approximation of the directed and the undirected cases for feedback vertexset. This remains the biggest open question in the approximation of feedback vertex set
problems.Traditionally, the major tool used to attack feedback vertex set has been graph theory,
whereas the application of mathematical programming is relatively limited. Recently, Goe-mans and Williams use a primal-dual formulation to model and establish uniform worst
case bounds for a wide range of node-deletion problems. They established a bound of 9J 4.However, it is still inferior to the best known bound, and Goemans and Williamson posed
the open question of whether the bound by a primal-dual method can match the best boundof 2 for undirected graphs. Funke and Reinelt [31] developed a polyhedral based integer
programming algorithm to exactly solve the feedback vertex set problem. Given the powerof mathematical programming to other combinatorial optimization problems, it appears
that much work needs to be done along this direction, both with regard to approximationand exact algorithms.

On the specially-structured polynomially solvable cases, Levy and Lowe's result [55]seems to push the study along this line to the limit, at least for flow type graphs. Recent
applications in partial scan design report successful applications of the even somewhatbrute force exact enumeration methods. All of these methods are used in conjunction with
problem reduction techniques, which is quite unique to feedback vertex set. It would beinteresting to further investigate the impact of these reduction techniques on the computational complexity of exact or approximate algorithms. In addition, it may also be possibleto identify new classes of polynomially solvable feedback set problems (e.g. in VLSI design and circuit testing).

FEEDBACK SET PROBLEMS 27
In contrast to the approximation literature, computational studies of feedback vertex setproblems seem to be still in their embryonic stage. No modern metaheuristics, except the
GRASP procedure recently developed by Pardalos, Qian, and Resende [68] have ever beenapplied to the feedback vertex set problem. The dimensions of the general problem that
can be handled are still quite limited. It seems that this area of computational research hasthe greatest potential for progress and impact in the coming years. It is also worth noting
that, since detecting cycles is a relatively expensive operation, the local search of feedbackvertex set appears to be even more difficult than other notorious combinatorial problems
like the traveling salesperson or set covering problems. The design of efficient local searchprocedures will also be a key to the effective computational procedure for feedback vertex
set.

ACKNOWLEDGMENT
The research of Paola Festa was supported in part by the Italian Ministry of ScientificResearch (MURST) - Research Project MOST 97. The research of Panos Pardalos was

supported in part by DIMACS and by National Science Foundation Grants DMI-9622200and BIR-9505919.

REFERENCES
[1] V. Bafna, P. Berman, and T. Fujito, Constant ratio approximations of the weighted feedback vertex set

problem for undirected graphs, in ISAAC95, Algorithms and Computation, J. Staples, P. Eades, N. Katoh
and A. Moffat Eds., Lecture Notes in Computer Science Vol.1004, Springer-Verlag (1995) pp. 142-151.
[2] R. Bar-Yehuda, D. Geiger, J. Naor, and R.M. Roth, Approximation algorithms for the vertex feedback set

problem with applications to constraint satisfaction and Bayesian inference, A preliminary version of this

paper appeared in the Proc. of the 5th Annual ACM-SIAM Symp. on Discrete Algorithms, pp. 344-354,
(1994) and subsequently published in SIAM J. Comput. Vol.27 No.4 (1998) pp. 942-959.

[3] A. Becker, and D. Geiger, Approximation algorithm for the loop cutset problem, in Proceedings of the 10th

Conference on Uncertainty in Artificial Intelligence Morgan Kaufman (1994) pp. 60-68.
[4] A. Becker, and D. Geiger, Optimization of Pearl's method of conditioning and greedy-like approximation

algorithms for the vertex feedback set problem, Artificial Intelligence Vol.83 (1996) pp. 167-188.
[5] J. A. Bondy, G. Hopkins, and W. Staton, Lower bounds for induced forests in cubic graphs, Canad. Math.

Bull. Vol.30 (1987) pp. 193-199.
[6] D.P. Bovet, S. de Agostino, and R. Petreschi, Parallelism and the feedback vertex set problem, Information

Processing Letters Vol.28 (1988) pp.81-85.
[7] A. Brandst"adt, and D. Kratsch, On the restriction of some NP-complete graph problems to permutation

graphs, in Proc. of Fundamentals of Computing Theory, Lecture Notes in Comp. Sci. Vol.199 (L. Budach,
Ed. Springer-Verlag, Berlin, 1985) pp. 53-62.

[8] A. Brandst"adt, On improved time bounds for permutation graph problems, in Proc. of the 18th Workshop

on Graph-theoretic concepts in computer science, (Wiesbaden-Naurod, 1992) Springer-Verlag LNCS 657
(1993) pp. 1-10.

[9] M.A. Breuer, and R. Gupta, BALLAST: A methodology for partial scan design, in Proc. of the 19th Int.

Symposium on Fault-Tolerant Computing (1989) pp. 118-125.
[10] M. Cai, X. Deng, and W. Zang, A TDI system and its application to approximation algorithm, in Proc. of

the 39th Annual Symposium on Foundations of Computer Science, Palo Alto, California, November 8-11,
(1998).
[11] M. Cai, X. Deng, and W. Zang, A min-max theorem on feedback vertex sets, to appear in Integer Programming and Combinatorial Optimization: Proceedings 7th International IPCO Conference, Lecture Notes in
Computer Science Springer-Verlag (1999).
[12] S. Chakradhar, A. Balakrishnan, and V. Agrawal, An exact algorithm for selecting partial scan flip-flops,

Manuscript (1994).
[13] M.S. Chang, Y.D. Liang, Minimum feedback vertex sets in cocomparability graphs and convex bipartite

graphs, Acta Informatica Vol.34 (1997) pp. 337-346.

28 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
[14] I. Charon, A. Guenoche, O. Hudry, and F. Wairgard, New results on the computation of median orders,

Discr. Math. Vol.165/166 (1997) pp. 139-153.
[15] R. Chen, X. Guo, and F. Zhang, The z-transformation graphs of perfect matchings of hexagonal system,

Discr. Math. Vol.72 (1988) pp. 405-415.
[16] K.T. Cheng, and V.D. Agrawal, A partial scan method for sequential circuits with feedback, IEEE Transactions on Computers Vol.39 No.4 (1990) pp. 544-548.
[17] Chin Lung Lu, and Chuan Yi Tang, A linear-time algorithm for the weighted feedback vertex problem on

interval graphs, Information Processing Letters Vol.61 (1997) pp. 107-111.
[18] F.A. Chudak, M.X. Goemans, D. Hochbaum, and D.P. Williamson, A primal-dual interpretation of two 2-

approximation algorithms for the feedback vertex set problem in undirected graphs, Operations Research
Letters Vol.22 (1998) pp.111-118. Vol.4 (1979) pp. 233-235.
[19] V. Chv'atal, A greedy heuristic for the set covering problem, Mathematics Of Operations Research Vol.4

(1979) pp. 233-235.
[20] S.R. Coorg, and C.P. Rangan, Feedback vertex set on cocomparability graphs, Networks Vol.26 (1995) pp.

101-111.
[21] D.G. Corneil, and J. Fonlupt, The complexity of generalized clique covering, Discr. Appl. Math. Vol.22

(1988) pp. 109-118.
[22] R. Dechter, and J. Pearl, The cycle cutset method for improving search performance in AI, in Proc. of the

3th IEEE on AI Applications Orlando FL (1987).
[23] R. Dechter, Enhancement schemes for constraint processing: Backjumping, learning, and cutset decomposition, Artif. Intell. Vol.41 (1990) pp. 273-312.
[24] J. Donald, J. Elwin, R. Hager, and P. Salamon, A bad example for the minimum feedback vertex set problem,

IEEE Transactions on Circuits and Systems Vol.32 (1995) pp. 491-493.
[25] R.G. Downey, and M.R. Fellows, Fixed-parameter tractability and completeness I: Basic results, SIAM

Journal on Computing Vol.24 (1995) pp. 873-921.
[26] P. Erd"os, and L. Posa, On the maximal number of disjoint circiuts of a graph, Pubbl. Math. Debrecen Vol.9

(1962) pp. 3-12.
[27] G. Even, S. Naor, B. Schieber, and L. Zosin, Approximating minimum subset feedback sets in undirected

graphs, with applications, in the Proc. of the 4th Israel Symposium on Theory of Computing and Systems
(1996) pp. 78-88.
[28] G. Even, S. Naor, B. Schieber, and M. Sudan, Approximating minimum feedback sets and multicuts in

directed graphs, Algorithmica Vol.20 (1998) pp. 151-174.
[29] G. Even, J.S. Naor, and L. Zosin An 8-Approximation Algorithm for the Subset Feedback Vertex Problem,

37th Symp. on Foundations of Comp. Sci. (FOCS) (1996) pp. 310-319.
[30] P. Festa, P.M. Pardalos, and M.G.C. Resende, Fortran subroutines for approximate solution of feedback set

problems using GRASP, Manuscript, AT&T Labs Research, Florham Park, NJ (1999).
[31] M. Funke, and G. Reinelt, A polyhedral approach to the feedback vertex set problem, Manuscript (1996).
[32] M.R. Garey, and D.S. Johnson, Computers And Intractability -A Guide to the Theory of NP-Completeness,

W. H. Freeman, San Francisco, (1979).
[33] M.R. Garey, and R.E. Tarjan, A linear-time algorithm for finding all feedback vertices, Information Processing Letters Vol.7 (1978) pp. 274-276.
[34] N. Garg, V.V. Vazirani, and M. Yannakakis, Approximate max-flow min-(multi) cut theorems and their

applications, SIAM Journal on Computing Vol.25 No.2 (1996) pp. 235-251.

[35] F. Gavril, Some NP-complete problems on graphs, in Proceedings of the 11th Conference on Information

Science and Systems, John Hopkins Univ. Baltimore, Md., (1977) pp. 91-95.
[36] M.X. Goemans, and D.P. Williamson, Primal-dual approximation algorithms for feedback problems in planar graphs, in Proceedings of the 5th MPS Conference on Integer Programming and Combinatorial Optimization (IPCO) (1996) pp.147-161.
[37] M. Gr"otschel, L. Lov'asz, and A. Schrijver, Geometric algorithms and combinatorial optimization, SpringerVerlag, Berlin (1988) pp. 253-254.
[38] M. Gr"otschel, and L. Lov'asz, Combinatorial optimization: A survey, DIMACS Technical Report 93-29

DIMACS Rutgers University (1993).
[39] F. Harary, D.J. Klein, and T.P. Zivkovic, Graphical properties of polyhexes: Perfect matching vector and

forcing, J. Math. Chem. Vol.6 (1991) pp. 295-306.
[40] D. Hochbaum, Approximation algorithms for set covering and vertex cover problem, SIAM Journal on

Computing Vol.11 No.3 (1982) pp. 555-556.
[41] T.C. Hu, Multi-commodity network flows, Operations Research Vol.11 (1963) pp. 344-360.

FEEDBACK SET PROBLEMS 29
[42] G. Isaak, Tournaments as feedback arc sets, Electronic Journal of Combinatorics Vol.20 No.2 (1995) pp.

1-19.
[43] D.B. Johnson, Finding all the elementary circuits of a directed graph, SIAM J. Computing, Vol. 4, No.1

(1975) pp. 77-84.
[44] D.S. Johnson, Approximation algorithms for combinatorial problems, Journal of Computer and System

Science Vol.9 (1974) pp. 256-278.
[45] R.M. Karp, Reducibility among combinatorial problems, Complexity Of Computer Computations R.E.

Miller and J.W. Thatcher, Eds., New York: Plenum Press (1972) pp. 85-103.
[46] A.K. Kevorkian, General topological results on the construction of a minimum essential set of a directed

graph, IEEE Trans. Circuits and Systems Vol.27 (1980) pp. 293-304.
[47] D.J. Klein, and M. Randi'c, Innate degree of freedom of a graph, J. Computat. Chem. Vol.8 (1987) pp.

516-521.
[48] D.J. Klein, T.P. Zivkovi'c, and R. Valenti, Topological long-range order for resonating-valance-bond structures, Phys. Rev. B Vol.43A (1991) pp. 723-727.
[49] A. Kunzmann, and H.J. Wunderlich, An analytical approach to the partial scan problem, J. of Electronic

Testing: Theory and Applications Vol.1 (1990) pp. 163-174.
[50] H. Kim, and J. Perl, A computational model for combined causal and diagnostic reasoning in inference

systems, in Proc. of the 8th IJCAI, Morgan-Kaufmann, San Mateo, CA, (1983) pp. 190-193.
[51] S.L. Lauritzen, and D.J. Spiegelhalter, Local computations with probabilities on graphical structures and

their application to expert systems (with discussion), J. Roy. Stat. Soc. Ser.B Vol.50 (1988) pp. 157-224.
[52] D. Lee, and S. Reedy, On determining scan flip-flops in partial scan designs, in Proceedings Of International

Conference on Computer Aided Design (1990) pp. 322-325.
[53] T. Leighton, and S. Rao, An approximate max-flow min-cut theorem for uniform multicommodity flow

problems with applications to approximation algorithms, in Proceedings of the 29th Annual Symposium on
Fundations of Computer Science, (1988) pp. 422-431.
[54] A. Lempel, and I. Cederbaum, Minimum feedback arc and vertex sets of a directed graph, IEEE Transactions

on circuit theory CT-13 (1966) pp. 399-403.
[55] H. Levy, and L. Lowe, A contraction algorithm for finding small cycle cutsets, Journal Of Algorithm Vol.9

(1988) pp. 470-493.
[56] X. Li, and F. Zhang, Hexagonal systems with forcing edges, Discr. Math. Vol.140 (1995) pp. 253-263.
[57] Y.D. Liang, On the feedback vertex set problem in permutation graphs, Information Processing Letters, Vol.

52 (1994) pp. 123-129.
[58] J. Liu, and C. Zhao, A new bound on the feedback vertex sets in cubic graphs, Discrete Mathematics Vol.148

(1996) pp. 119-131.
[59] E.L. Lloyd, M.L. Soffa, and C.C. Wang, On locating minimum feedback vertex sets, Journal of Computer

and System Sciences Vol.37 (1988) pp. 292-311.
[60] C.L. Lucchesi, and D.H. Younger, A minimax theorem for directed graphs, J. London Math. Soc. Vol.17

(1978) pp. 369-374.
[61] F.L. Luccio, Almost exact minimum feedback vertex set in meshes and butterflies, Information Processing

Letters Vol.66 (1998, pp. 59-64.
[62] C. Lund, and M. Yannakakis, On the hardness of approximating minimization problems, Proceedings Of

the 25th ACM Symp. On Theory Of Computing (1993) pp. 286-293.
[63] M.V. Marathe, C.Pandu Rangan, and R. Ravi, Efficient algorithms for generalized clique covering on interval graphs, Discr. Appl. Math. Vol.39 (1992) pp. 87-93.
[64] B. Monien, and R. Schultz, Four approximation algorithms for the feedback vertex set problems, in Proc. of

the 7th Conference on Graph Theoretic Concepts of Computer Science, Hanser-Verlag, M"unich (1981) pp.
315-326.
[65] T. Orenstein, Z. Kohavi, and I. Pomeranz, An optimal algorithm for cycle breaking in directed graphs, J. of

Electronic Testing: Theory and Applications Vol.7 (1995) pp. 71-81.
[66] L. Pachter, and P. Kim, Forcing matchings on square grids, Discr. Math Vol.190 (1998) pp. 287-294.
[67] C. Papadimitriou, and M. Yannakakis, Optimization, approximation and complexity classes, in Proc. of the

20th Annual ACM Symp. on Theory of Computing (1988) pp. 251-277.
[68] P.M. Pardalos, T. Qian, and M.G.C. Resende, A greedy randomized adaptive search procedure for feedback

vertex set, J. Comb. Opt. Vol.2 (1999) pp.399-412.
[69] D. Peleg, Local majority voting, small coalitions, and controlling monopolies in graphs: A review, in Proc.

of the 3th Colloquium on Structural Information and Communication Complexity (1996) pp. 152-169.
[70] D. Peleg, Size bounds for dynamic monopolies, in Proc. of the 4th Colloquium on Structural Information

and Communication Complexity (1997) Carleton Univ. Press, Ottawa, pp. 165-175.

30 P. FESTA, P. M. PARDALOS, AND M. G. C. RESENDE
[71] J. Perl, Fusion, propagation and structuring in belief networks, Artif. Intell. Vol.29 (1986) pp. 241-288.
[72] T. Qian, Y. Ye, and P.M. Pardalos, A Pseudo-e approximation algorithm for feedback vertex set, Recent

Advances in Global Optimization, Floudas, C.A. and Pardalos, P.M., Eds., Kluwer Academic Publishing
(1995) pp. 341-351.
[73] V. Ramachandran, Finding a minimum feedback arc set in reducible flow graphs, Journal of Algorithms

Vol.9 (1988) pp. 299-313.
[74] B. Rosen, Robust linear algorithms for cutsets, Journal of Algorithms Vol.3 (1982) pp. 205-217.
[75] P.D. Seymour, Packing directed circuits fractionally, Combinatorica Vol.15 (1995) pp. 281-288.
[76] A. Shamir, A linear time algorithm for finding minimum cutsets in reduced graphs, SIAM Journal On

Computing Vol.8 No.4 (1979) pp. 645-655.
[77] R.D. Shatcher, S.K. Andersen, and P. Szolovits, Global conditioning for probabilistic inference in belief

networks, in Proc of the 10th Conferences on Uncertainty in AI, Seattle, WA (1994) pp. 514-522.
[78] A.C. Shaw, The logical design of operating systems, Prentice-Hall, Englewood Cliffs, NJ, (1974).
[79] D.A. Simovici, and G. Grigoras, Even initial feedback vertex set problem is NP-complete, Information

Processing Letters Vol.8 (1979) pp. 64-66.
[80] G.W. Smith, and R.B. Walford, The identification of a minimal feedback vertex set of a directed graph,

IEEE Transactions on Circuits and Systems Vol.CAS-22 No.1, (1975) pp. 9-14.
[81] E. Speckenmeyer, On feedback vertex sets and nonseparating independent sets in cubic graphs, Journal of

Graph Theory Vol.12 (1988) pp. 405-412.
[82] E. Speckenmeyer, On feedback problems in digraphs, in Lecture Notes in Computer Science, SpringerVerlag Vol.411 (1989) pp. 218-231.
[83] H. Stamm, On feedback problems in a planar digraph, in R. M"ohring ed. Graph-Theoretic Concepts in

Computer Science, Lecture Notes in Computer Science, Springer-Verlag (1990) Vol. 484 pp. 79-89.
[84] R.E. Tarjan, Depth first search and linear graph algorithms, SIAM Journal on Computing Vol.1 (1972) pp.

146-160.
[85] S. Ueno, Y. Kajitani, and S. Gotoh, On the nonseparating independent set problem and feedback set problem

for graphs with no vertex degree exceeding three, Discrete Mathematics Vol.72 (1988) pp. 355-360.
[86] V. Vazirani, Approximation Algorithms, Manuscript, College of Computing, Georgia Institute of Technology.
[87] C. Wang, E. Lloyd, and M. Soffa, Feedback vertex sets and cyclically reducible graphs, Journal of the

Association for Computing Machinery Vol.32 No.2 (1985) pp. 296-313.

[88] M. Yannakakis, Node and edge-deletion NP-complete problems, in Proceedings of the 10th Annual ACM

Symposium on Theory of Computing (1978) pp. 253-264.
[89] M. Yannakakis, and F. Gavril, The maximum k-colorable subgraph problem for chordal graphs, Info. Process. Lett. Vol.24 (1987) pp. 133-137.
[90] M. Yannakakis, Some open problems in approximation, in Proc. of the second Italian Conference on Algorithm and Complexity, CIAC'94 Italy, Feb. (1994) pp. 33-39.
[91] D.H. Younger, Minimum feedback arc set for a directed graph, IEEE Transactions on Circuit Theory Vol.

CT-10 (1963) pp. 238-245.
[92] M. Zheng, and X. Lu, On the maximum induced forests of a connected cubic graph without triangles, Discr.

Math. Vol.85 (1990) pp. 89-96.

(P. Festa) MATHEMATICS AND COMPUTER SCIENCE DEPARTMENT, UNIVERSITY OF SALERNO, 84081
BARONISSI (SA), ITALY.

E-mail address, P. Festa: paofes@udsab.dia.unisa.it

(P. M. Pardalos) CENTER FOR APPLIED OPTIMIZATION, DEPARTMENT OF INDUSTRIAL AND SYSTEMS
ENGINEERING, UNIVERSITY OF FLORIDA, GAINESVILLE, FL 32611 USA.

E-mail address, P. M. Pardalos: pardalos@ufl.edu

(M. G. C. Resende) INFORMATION SCIENCES RESEARCH, AT&T LABS RESEARCH, FLORHAM PARK,
NJ 07932 USA.

E-mail address, M. G. C. Resende: mgcr@research.att.com