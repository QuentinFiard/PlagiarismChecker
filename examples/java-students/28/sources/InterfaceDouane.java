/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projet;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author mounia
 */
public class InterfaceDouane extends javax.swing.JFrame {
    
    static PreparedStatement resultat; 
    public static ResultSet rs;
    public static String aff;
    ResultSetMetaData metadata ;

    /**
     * Creates new form InterfaceDouane
     */
    public InterfaceDouane() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(550, 430));
        setPreferredSize(new java.awt.Dimension(550, 430));

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(400, 150));

        jButton1.setText("Commandes entrantes");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Commandes contrôlées");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Commandes non contrôlées");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Listes commandes", jPanel1);

        jLabel1.setText("Numéro de colis : ");

        jLabel6.setText("Destination : ");

        jLabel7.setText("Contenant l'objet :");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton5.setText("Rechercher");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jLabel8.setText("Remplissez au moins un champ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jButton5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel8)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Recherche", jPanel2);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Accepté", "Retourné" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Numéro colis  : ");

        jLabel4.setText("Résultat contrôle : ");

        jLabel5.setText("Commentaires :");

        jButton6.setText("Valider");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jLabel3.setText("Veuillez remplir les champs suivants");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jButton6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel3)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Entrer résultat contrôle", jPanel3);

        jLabel10.setText("Numéro palette : ");

        jLabel11.setText("Numéro conteneur : ");

        jButton7.setText("Valider");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jLabel12.setText("OU");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField6)
                            .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jButton7))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jLabel12))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("Détails palette ou conteneur", jPanel6);

        jButton4.setText("Deconnexion");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton8.setText("Statistiques");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        try {
            Connexionbd.close();
            this.setVisible(false);
            
            Projet.c.setVisible(true);
            InterfaceConnexion.jTextField1.setText("");
            InterfaceConnexion.jPasswordField1.setText("");
            
        } catch (SQLException ex) {
            Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        String pays = Connexion.info;
        try {
            resultat = Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN client ON colis.num_client=client.num WHERE (client.pays= ? AND colis.rescontrole='non controle')");
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            metadata = rs.getMetaData();
            int j = 0;
            aff = "<html>";
            while (rs.next()) {
                j++;
                aff = aff + "COLIS " + j + ": ";
                for (int i = 1; i <= metadata.getColumnCount(); i++) {
                    aff = aff + " " + metadata.getColumnName(i) + " : " + rs.getString(i) + ", ";
                }
                aff += "<br/>";
            }
            aff += "</html>";

            AffichageResultat fenetreaff = new AffichageResultat();
            fenetreaff.setTitle("Commandes arrivés en " + pays + " et non contrôlés");
            fenetreaff.jLabel1.setText(aff);
            fenetreaff.setVisible(true);



        } catch (SQLException ex) {
            Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        String pays = Connexion.info;
        try {

            resultat = Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN client ON colis.num_client=client.num  where client.pays= ? AND (colis.rescontrole='accepte' OR colis.rescontrole='retourne')");
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            metadata = rs.getMetaData();
            int j = 0;
            aff = "";
            while (rs.next()) {
                j++;
                aff = aff + "COLIS " + j + ": ";
                for (int i = 1; i <= metadata.getColumnCount(); i++) {
                    aff = aff + " " + metadata.getColumnName(i) + " : " + rs.getString(i) + ", ";
                }
            }

            AffichageResultat fenetreaff = new AffichageResultat();
            fenetreaff.setTitle("Commandes arrivées en " + pays + " et contrôlés");
            fenetreaff.jLabel1.setText(aff);
            fenetreaff.setVisible(true);



        } catch (SQLException ex) {
            
            Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        String pays = Connexion.info;
        try {

            resultat = Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN client ON colis.num_client=client.num WHERE client.pays=?");
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            metadata = rs.getMetaData();
            int j = 0;
            aff = "<html>";
            while (rs.next()) {
                j++;
                aff = aff + "COLIS " + j + ": ";
                for (int i = 1; i <= metadata.getColumnCount(); i++) {
                    System.out.println(i);
                    aff = aff + " " + metadata.getColumnName(i) + " : " + rs.getString(i) + ", ";
                }
                aff += "<br/>";

            }
            aff += "</html>";
            AffichageResultat fenetreaff = new AffichageResultat();
            fenetreaff.setTitle("Commandes arrivés en " + pays);
            fenetreaff.jLabel1.setText(aff);
            fenetreaff.setVisible(true);



        } catch (SQLException ex) {
            Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
       String num = jTextField2.getText();
       String dest = jTextField3.getText();
       String cont = jTextField4.getText();
       
       if(num.isEmpty() && !dest.isEmpty() && !cont.isEmpty()){
           try {          
                resultat=Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN liste_produit ON liste_produit.num_colis=colis.num JOIN client ON client.num=colis.num_client WHERE liste_produit.num_produit= ? AND client.pays=? ");
                resultat.setString(1,cont);                
                resultat.setString(2,dest);
                rs=resultat.executeQuery();
                metadata = rs.getMetaData();
                aff="<html>";
                if(rs.next()){
                
                 do {
                    for(int i=1;i<=metadata.getColumnCount();i++){
                    aff=aff+" "+metadata.getColumnName(i)+" : "+rs.getString(i)+", ";
                    } 
                    aff+="<br/>";                
                }while(rs.next());
                aff+="</html>";
          
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du colis ");
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
                }
                else{
                    jLabel8.setText("Aucun colis trouvé");
                }                
            
            } catch (SQLException ex) {
                jLabel8.setText("Aucun colis trouvé");
                //Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       
       
       else if(!num.isEmpty() && dest.isEmpty() && !cont.isEmpty()){
           try {          
                resultat=Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN liste_produit ON liste_produit.num_colis=colis.num JOIN client ON client.num=colis.num_client WHERE liste_produit.num_produit= ? AND colis.num=?  ");
                resultat.setString(1,cont);                
                resultat.setString(2,num);
                rs=resultat.executeQuery();
                metadata = rs.getMetaData();
                aff="<html>";
                if(rs.next()){
                
                 do {
                    for(int i=1;i<=metadata.getColumnCount();i++){
                    aff=aff+" "+metadata.getColumnName(i)+" : "+rs.getString(i)+", ";
                    } 
                    aff+="<br/>";                
                }while(rs.next());
                aff+="</html>";
          
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du colis numéro " +num);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
                }
                else{
                    jLabel8.setText("Aucun colis trouvé");
                }                
            
            } catch (SQLException ex) {
                jLabel8.setText("Aucun colis trouvé");
                //Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       
       else if(!num.isEmpty() && !dest.isEmpty() && cont.isEmpty()){
           try {          
                resultat=Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN client ON colis.num_client=client.num WHERE client.pays= ? AND colis.num=?");
                resultat.setString(1,dest);                
                resultat.setString(2,num);
                rs=resultat.executeQuery();
                metadata = rs.getMetaData();
                aff="<html>";
                if(rs.next()){                
                 do {
                    for(int i=1;i<=metadata.getColumnCount();i++){
                    aff=aff+" "+metadata.getColumnName(i)+" : "+rs.getString(i)+", ";
                    } 
                    aff+="<br/>";                
                }while(rs.next());
                aff+="</html>";
          
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du colis numéro " +num);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
                }
                else{
                    jLabel8.setText("Aucun colis trouvé");
                }                
            
            } catch (SQLException ex) {
                //jLabel8.setText("Aucun colis trouvé");
                Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       
       else if(!num.isEmpty() && !dest.isEmpty() && !cont.isEmpty()){
           try {          
                resultat=Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN liste_produit ON liste_produit.num_colis=colis.num JOIN client ON client.num=colis.num_client WHERE liste_produit.num_produit= ? AND client.pays=?  AND colis.num= ?");
                resultat.setString(1,cont);                
                resultat.setString(2,dest);
                resultat.setString(3,num);
                rs=resultat.executeQuery();
                metadata = rs.getMetaData();
                aff="<html>";
                if(rs.next()){
                
                 do {
                    for(int i=1;i<=metadata.getColumnCount();i++){
                    aff=aff+" "+metadata.getColumnName(i)+" : "+rs.getString(i)+", ";
                    } 
                    aff+="<br/>";                
                }while(rs.next());
                aff+="</html>";
          
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du colis numéro " +num);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
                }
                else{
                    jLabel8.setText("Aucun colis trouvé");
                }                
            
            } catch (SQLException ex) {
                jLabel8.setText("Aucun colis trouvé");
                //Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       
       else if(num.isEmpty() && !dest.isEmpty() && cont.isEmpty()){
            try {          
                resultat=Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN client ON colis.num_client=client.num WHERE client.pays= ?");
                resultat.setString(1,dest);                
                rs=resultat.executeQuery();
                metadata = rs.getMetaData();
                aff="<html>";
                if(rs.next()){
                
                 do {
                    for(int i=1;i<=metadata.getColumnCount();i++){
                    aff=aff+" "+metadata.getColumnName(i)+" : "+rs.getString(i)+", ";
                    } 
                    aff+="<br/>";                
                }while(rs.next());
                aff+="</html>";
          
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du colis numéro " +num);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
                }
                else{
                    jLabel8.setText("Aucun colis trouvé");
                }                
            
            } catch (SQLException ex) {
                jLabel8.setText("Aucun colis trouvé");
                //Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
            }
                         
       }
       
       else if(num.isEmpty() && dest.isEmpty() && !cont.isEmpty()){
           try {          
                resultat=Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN liste_produit ON liste_produit.num_colis=colis.num JOIN client ON client.num=colis.num_client WHERE liste_produit.num_produit= ?");
                resultat.setString(1,cont);                
                rs=resultat.executeQuery();
                metadata = rs.getMetaData();
                aff="<html>";
                if(rs.next()){
                
                 do {
                    for(int i=1;i<=metadata.getColumnCount();i++){
                    aff=aff+" "+metadata.getColumnName(i)+" : "+rs.getString(i)+", ";
                    } 
                    aff+="<br/>";                
                }while(rs.next());
                aff+="</html>";
          
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du colis numéro " +num);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
                }
                else{
                    jLabel8.setText("Aucun colis trouvé");
                }                
            
            } catch (SQLException ex) {
                //Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
                jLabel8.setText("Aucun colis trouvé");
            }
        
       }
       
       else if(!num.isEmpty() && dest.isEmpty() && cont.isEmpty()){
            try {          
                resultat=Projet.connecte.conn.prepareStatement("SELECT * FROM colis JOIN liste_produit ON liste_produit.num_colis=colis.num JOIN client ON client.num=client.num_client WHERE colis.num=");
                resultat.setString(1,num);                
                rs=resultat.executeQuery();
                metadata = rs.getMetaData();
                aff="<html>";
                if(rs.next()){
                
                 do {
                    for(int i=1;i<=metadata.getColumnCount();i++){
                    aff=aff+" "+metadata.getColumnName(i)+" : "+rs.getString(i)+", ";
                    } 
                    aff+="<br/>";                
                }while(rs.next());
                aff+="</html>";
          
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du colis numéro " +num);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
                }
                else{
                    jLabel8.setText("Aucun colis trouvé");
                }                
            
            } catch (SQLException ex) {
                jLabel8.setText("Aucun colis trouvé");
                //Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
       else {
           jLabel8.setText("Veuillez remplir au moins un des champs");
       }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        String num=jTextField1.getText();
        String comments=jTextArea1.getText();
        String res=(String)jComboBox1.getSelectedItem();
        
        if (num.isEmpty()) {
            jLabel3.setText("Veuillez remplir le champ numéro");
        }
        
        else{
            try {                                      
                resultat=Projet.connecte.conn.prepareStatement("UPDATE colis SET commentaire=?,date_controle=CURRENT_DATE,rescontrole=?  WHERE num=?");
                resultat.setString(1,comments);                
                resultat.setString(2,res);
                resultat.setString(3,num);
                resultat.executeUpdate();
                jLabel3.setText("Résultat entré avec succès");
                    
            } catch (SQLException ex) {
                jLabel3.setText("Impossible d'entrer le résultat");
                Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_jButton6MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
       try {
           String nump=jTextField6.getText();
           String numc=jTextField7.getText();
           if(!nump.isEmpty() && numc.isEmpty()){
                String req = "SELECT colis.num AS numero_colis,colis.type,colis.emballeur,palette.num_cont AS numero_conteneur FROM colis join palette on palette.num=colis.num_palette WHERE palette.num=?";
                resultat = Projet.connecte.conn.prepareStatement(req);
                resultat.setString(1, nump);
                rs = resultat.executeQuery();
                metadata = rs.getMetaData();
                int j = 0;
                aff = "<html>";
                while (rs.next()) {
                    j++;
                    aff = aff + "COLIS " + j + ": ";
                    for (int i = 1; i <= metadata.getColumnCount(); i++) {
                        aff = aff + " " + metadata.getColumnName(i) + " : " + rs.getString(i) + ", ";
                    }
                    aff += "<br/>";
                }
                req="SELECT COUNT(*) FROM colis JOIN palette ON palette.num=colis.num_palette";
                resultat = Projet.connecte.conn.prepareStatement(req);
                rs = resultat.executeQuery();
                rs.next();
                aff=aff+"<br/>Nombre de colis dans cette palette : "+rs.getString("count") ;
                aff+= "</html>";
                
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails de la palette numero " +nump);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
            }
           
           else if(nump.isEmpty() && !numc.isEmpty()){
                String req = "SELECT palette.num AS numero_palette,nb_colis FROM (colis JOIN palette ON palette.num=colis.num_palette) JOIN conteneur ON palette.num_cont=conteneur.num WHERE conteneur.num=?";                        
                resultat = Projet.connecte.conn.prepareStatement(req);
                resultat.setString(1, numc);
                rs = resultat.executeQuery();
                metadata = rs.getMetaData();
                int j = 0;
                aff = "<html>";
                while (rs.next()) {
                    j++;
                    aff = aff + "PALETTE " + j + ": ";
                    for (int i = 1; i <= metadata.getColumnCount(); i++) {
                        aff = aff + " " + metadata.getColumnName(i) + " : " + rs.getString(i) + ", ";
                    }
                    aff += "<br/>";
                }
                req="SELECT COUNT(*) FROM (colis JOIN palette ON palette.num=colis.num_palette) JOIN conteneur ON palette.num_cont=conteneur.num";
                resultat = Projet.connecte.conn.prepareStatement(req);
                rs = resultat.executeQuery();
                rs.next();
                aff=aff+"<br/>Nombre de palettes dans ce conteneur : "+rs.getString("count") ;
                aff+= "</html>";
                
                AffichageResultat fenetreaff = new AffichageResultat();
                fenetreaff.setTitle("Détails du conteneur numero " +numc);
                fenetreaff.jLabel1.setText(aff);
                fenetreaff.setVisible(true);
           }
           
           else {
               jLabel9.setText("Veuillez remplir un et un seul champ");
           } 

        } catch (SQLException ex) {
            Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
        }       
        
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        String pays = Connexion.info;
        try {
            String req="SELECT COUNT(*) FROM colis JOIN client ON colis.num_client=client.num WHERE (client.pays= ? AND colis.rescontrole='non controle')";
            resultat = Projet.connecte.conn.prepareStatement(req);
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            rs.next();
            String r=rs.getString("count");
            aff="<html> Nombre de colis arrivés en "+pays+" : "+r;
            req="SELECT COUNT(*) FROM colis JOIN client ON colis.num_client=client.num WHERE (client.pays= ? AND colis.rescontrole='non controle')";
            resultat = Projet.connecte.conn.prepareStatement(req);
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            rs.next();
            r=rs.getString("count");
            aff+="<br/>Nombre de colis arrivés en "+pays+" mais non contrôlés : "+r;
            req="SELECT COUNT(*) FROM colis JOIN client ON colis.num_client=client.num WHERE (client.pays=? AND colis.rescontrole='Accepté')";
            resultat = Projet.connecte.conn.prepareStatement(req);
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            rs.next();
            r=rs.getString("count");
            aff+="<br/>Nombre de colis arrivés en "+pays+" et acceptés : "+r;
            req="SELECT COUNT(*) FROM colis JOIN client ON colis.num_client=client.num WHERE (client.pays=? AND colis.rescontrole='Retourné')";
            resultat = Projet.connecte.conn.prepareStatement(req);
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            rs.next();
            r=rs.getString("count");
            aff+="<br/>Nombre de colis arrivés en "+pays+" et rejetés : "+r;
            req="SELECT COUNT(*) FROM colis JOIN client ON colis.num_client=client.num WHERE (client.pays=? AND (colis.rescontrole='Accepté' OR colis.rescontrole='Retourné'))";
            resultat = Projet.connecte.conn.prepareStatement(req);
            resultat.setString(1, pays);
            rs = resultat.executeQuery();
            rs.next();
            r=rs.getString("count");
            aff+="<br/>Nombre de colis arrivés en "+pays+" et contrôlés au total : "+r;

            AffichageResultat fenetreaff = new AffichageResultat();
            fenetreaff.setTitle("Statistiques");
            fenetreaff.jLabel1.setText(aff);
            fenetreaff.setVisible(true);



        } catch (SQLException ex) {
            Logger.getLogger(InterfaceDouane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceDouane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceDouane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceDouane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceDouane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new InterfaceDouane().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private final javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
